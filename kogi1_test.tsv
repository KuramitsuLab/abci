数式として、eを微分する	sympy.diff(e)
スノー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='snow')
ファイルfilenameをオープンして]、読み込みストリームを使う	open(filename, mode='r')
散布図にサンディーブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='sandybrown')
最大長nの両端キューをリストiterableから作って、Xに代入する	X = collections.deque(iterable, maxlen=n)
折れ線グラフの左三角マーカーを赤くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')
散布図にカラーコードrgbの下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c=rgb)
ダークシアグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkseagreen')
折れ線グラフの色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, color='darkgoldenrod')
透明度xの折れ線グラフを描画する	plt.plot(xdata, ydata, alpha=x)
散布図にペルー色のマーカーを使う	plt.plot(xdata, ydata, c='peru')
散布図にチョコレート色のマーカーを使う	plt.plot(xdata, ydata, c='chocolate')
データフレームdfのカラムcolをダミー変数に変換する	pd.get_dummies(df[col])
リストxdataとリストydataについての散布図をミディアムバイオレットレッド色で描画する	plt.plot(xdata, ydata, c='mediumvioletred')
データフレームdfのカラムの名前を付け直す	df.rename(columns={col: s})
グラフの見た目をデフォルトでいい感じに設定する	sns.set()
s内にひとつでもisasciiが含まれるか調べる	any(c.アスキー文字() for c in s)
ライトブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightblue')
サンディーブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
データ列ds中に文字列valueがあるか調べる	ds.isin([value])
データフレームdfのカラムcolがsで始まる行を抽出する	df[df[col].str.startswith(s)]
ファイルfilenameのディレクトリ名	os.path.dirname(filename)
リストxdataとリストydataの実線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
散布図にライトサーモン色のマーカーを使う	plt.plot(xdata, ydata, c='lightsalmon')
リストxdataとリストydataについてカデットブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
カウンタaCounterをカウントが少ない順に列挙する	aCounter.most_common()[::-1]
ダークスレートブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
ディープスカイブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
リストxdataとリストydataについての散布図をスカイブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
リストxdataとリストydataについての散布図をゴーストホワイト色で描画する	plt.plot(xdata, ydata, c='ghostwhite')
{リストalistを/ひとつ置きに}取り出す	alist[::2]
n年n2月n3日n4時の日時	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
リストxdataをラベンダー色のヒストグラムで描画する	plt.hist(xdata, color='lavender')
グラフ中の縦軸にsという軸ラベルを付ける	plt.ylabel(s)
カウンタaCounterのトータルカウント	aCounter.total()
アクア色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='aqua')
事前に複数行対応としてパターンpatternをコンパイルする	re.compile(pattern, flag=re.MULTILINE)
ミッドナイトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
nとn2の最大公約数	math.gcd(n, n2)
xの二進対数	math.log2(x)
カーキ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='khaki')
xが一桁の正の数か調べる	0 <= x <= 9
レベッカパープル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='rebeccapurple')
リストxdataとリストydataについて散布図を描画して、マーカーの色をブラックに設定する	plt.plot(xdata, ydata, c='black')
マゼンタ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='magenta')
sが全てアルファベットか調べる	s.isalpha()
データフレームdfのリストalistカラムの欠損値をxで埋める	df[alist].fillna(x)
データ列dsの最頻値	ds.mode()
データフレームdfを丸める	df.round()
データ列dsの各データ値の出現数	ds.value_counts()
リストxdataとリストydataについて散布図を描画して、マーカーの色をゴールデンロッドに設定する	plt.plot(xdata, ydata, c='goldenrod')
xの余弦の逆数	math.acos(x)
整数nを十六進表現に変換する	hex(n)
sを青色にする	f'\033[34m{s}\033[0m'
分母が高々max_denominatorである、selfに最も近いFractionを見付けて	q.limit_denominator(max_denominator=1000000)
リストxdataをホットピンク色のヒストグラムで描画する	plt.hist(xdata, color='hotpink')
JSON形式のsをデータに変換する	json.loads(s)
リストxdataとリストydataについての散布図をデピンク色で描画する	plt.plot(xdata, ydata, c='deeppink')
リストiterableからn個、ランダムに選ぶ	random.choices(iterable, k=n)
リストxdataとリストydataについてライトコーラル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
データ列ds中にいくつ欠損値があるか数える	ds.isna().sum()
ターコイズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='turquoise')
ホワイトスモーク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='whitesmoke')
セットasetに含まれ、セットaset2に含まれない集合	aset.difference(aset2)
オプションで、バイナリモードに設定する	mode = 'rb'
散布図にターコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='turquoise')
日時dtにn日分、加算する	dt + datetime.timedelta(days=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をイエローグリーンに設定する	plt.plot(xdata, ydata, c='yellowgreen')
xの指数	math.frexp(x)[1]
デックdeqのn番目からn2番目の部分要素	collections.deque(itertools.islice(deq, n, n2))
リストxdataとリストydataについて散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
整数nの十六進表現	hex(n)
数式として、zについてeの微分を行う	sympy.diff(e, z)
折れ線グラフの三角マーカーを黒くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
sを改行で分割し、文字列リストに変換する	s.splitlines()
シーグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='seagreen')
3×3の単位行列を作る	np.identity(3)
データフレームdfのリストalistカラムのsを欠損値に変換する	df[alist].replace(s, np.nan)
リストxdataとリストydataについて折れ線グラフを描画して、その色をバイオレットに設定する	plt.plot(xdata, ydata, color='violet')
インデント付きで辞書adictを文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)
リストxdataをダークグリーン色のヒストグラムで描画する	plt.hist(xdata, color='darkgreen')
データフレームdfを10の位で丸める	df.round(-1)
ライトグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgrey')
データフレームdfをサンプリングする	df.sample()
破線グラフの色をダークターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
データフレームdfのリストalistカラムの値をdictでまとめて置き換える	df[alist].replace(adict)
赤いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='r')
データ列dsの月	ds.dt.month
数式として、eの数値を求める	float(e)
ゴールデンロッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='goldenrod')
本日が日曜日か調べる	datetime.datetime.today().weekday() == 6
リストxdataとリストydataの折れ線グラフに、青い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
リストxdataについてのヒストグラムを描画する際に半透明ににする	plt.hist(xdata, alpha=0.5)
リストxdataを縦軸、リストydataを横軸として、大きさnの散布図を描画する	plt.scatter(xdata, ydata, s=n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をグレーに設定する	plt.plot(xdata, ydata, color='grey')
リストxdataとリストydataの点線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
ペールグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='palegreen')
コーンズシルク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
データ列dsの尖度	ds.skew()
オブジェクトobjがオブジェクトobj2と同一オブジェクトか調べる	obj is obj2
ドジャーブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='dodgerblue')
チョコレート色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='chocolate')
リストiterableの集合	set(iterable)
データフレームdfをリストalistで指定されたカラムによって破壊的にソートする	df.sort_values(by=alist, inplace=True)
データフレームdfのリストalistカラムを10の位で丸める	df[alist].round(-1)
リストxdataとリストydataについての散布図にカラーコードrgbの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストxdataをライトグリーン色のヒストグラムで描画する	plt.hist(xdata, color='lightseagreen')
データフレームdfをカラムcolとカラムcol2によってソートして、NaNを先頭にする	df.sort_values(by=[col,col2], na_position='first')
2を底とするxの対数	math.log2(x)
シエナ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='sienna')
データフレームdfのカラムcolがsが含まれる行を抽出する	df[df[col].str.contains(s)]
リストxdataをミディアムスプリンググリーン色のヒストグラムで描画する	plt.hist(xdata, color='mediumspringgreen')
fからn文字、読み込む	f.read(n)
インディゴ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='indigo')
折れ線グラフのポイントマーカーを黒くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
ケンドール相関係数でデータフレームdfのカラムcolとカラムcol2の相関行列	df[[col, col2]].corr(method='kendall')
セットasetが空でないか調べる	len(aset) != 0
データフレームdfをJSONLファイルfilenameにインデックスを付けずに保存する	df.to_csv(filename, index=None)
リストxdataとリストydataについて折れ線グラフを描画して、その色をコーラルに設定する	plt.plot(xdata, ydata, color='coral')
再帰エラーを未然に防ぐ	sys.setrecursionlimit(1000000)
辞書adictのkeyに対応した値	adict.get(key)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, color='darkolivegreen')
折れ線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgrey')
リストxdataとリストydataについての散布図をクリムゾン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
リストxdataとリストydataについての散布図をチョコレート色で描画する	plt.plot(xdata, ydata, c='chocolate')
折れ線グラフの下三角マーカーを青くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
日付adateにn日分、加算する	adate + datetime.timedelta(days=n)
オレンジレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='orangered')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(xdata, ydata, color='darkslateblue')
折れ線グラフの色をゲインズボロに設定する	plt.plot(xdata, ydata, color='gainsboro')
日付adateをn秒前に戻す	adate - datetime.timedelta(seconds=n)
リストxdataとリストydataについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
リストxdataとリストydataについて散布図を描画して、マーカーの色をトマトに設定する	plt.plot(xdata, ydata, c='tomato')
クリムゾン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='crimson')
カウンタaCounterを下位n個カウントが少ない順に列挙する	aCounter.most_common()[:-n-1:-1]
折れ線グラフを一点鎖線に設定する	plt.plot(xdata, ydata, linestyle='dashbot')
リストiterableを両端キューに変換する	collections.deque(iterable)
リストxdataとリストydataについて散布図を描画して、マーカーの色を貝殻に設定する	plt.plot(xdata, ydata, c='seashell')
パレットトルコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, c='blanchedalmond')
sを全て英小文字に変換する	s.lower()
リストxdataをライトゴールドロディイエロー色のヒストグラムで描画する	plt.hist(xdata, color='lightgoldenrodyellow')
散布図に小麦色のマーカーを使う	plt.plot(xdata, ydata, c='wheat')
最適な位置に凡例を入れる	plt.legend(loc='best')
折れ線グラフの色を淡いピンク色に設定する	plt.plot(xdata, ydata, color='lightpink')
ホワイトスモーク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='whitesmoke')
辞書adictと辞書adict2を合体する	adict | adict2
折れ線グラフの丸マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
リストxdataとリストydataについて破線グラフを描画して、その色をダークグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
JSONを使う	import json
データフレームdfのリストalistカラムのn分位数	df[alist].quantile(n/100)
セットasetとaaset2のいずれか一方だけの集合	aset.symmetric_difference(aset2)
sの左側から空白を取り除く	s.lstrip()
リストxdataとリストydataについての散布図をライトゴールドロディイエロー色で描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
カデットブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='cadetblue')
sを走査し、パターンpatternにマッチするか見る	re.search(pattern, s)
インデント幅nで、辞書adictをJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)
数式として、eの微分を求める	sympy.diff(e)
バイオレット色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='violet')
リストxdataとリストydataについて破線グラフを描画して、その色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
データフレームdfのカラムcolの空文字をドロップする	df[col].replace('', np.nan).dropna()
sを全て英大文字に変換する	s.upper()
リストiterableを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
レベッカパープル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='rebeccapurple')
リストxdataとリストydataについての散布図にカラーコードrgbの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
折れ線グラフの三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
リストxdataとリストydataについての散布図をミントクリーム色で描画する	plt.plot(xdata, ydata, c='mintcream')
日時dtにn月分、加算する	dt + datetime.timedelta(months=n)
データフレームdfのカラムcolがxの行を抽出する	df[df[col] == x]
データ列dsをビン分割する	pd.cut(ds, alist)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークシアンに設定する	plt.plot(xdata, ydata, color='darkcyan')
折れ線グラフの色をライムグリーンに設定する	plt.plot(xdata, ydata, color='limegreen')
データフレームdfとデータフレームdf2を結合する	pd.merge(df, df2)
ファイルfilenameをsの示すエンコーディングで書き込み用にオープンする]	open(filename, mode='w', encoding=s)
ブラック色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='black')
オレンジ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='orange', alpha=0.5)
sをs2で二分する	s.partition(s2)
日付adateと日付adate2の時間差	adate - adate2
データフレームdfを関数funcでグループ化する	df.groupby(func)
リストxdataとリストydataについての散布図をゲインズボロ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
エクセルファイルからデータフレームを読み込む	pd.read_excel(filename)
リストxdataとリストydataについての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
データフレームdfのの中で、カラムcolとカラムcol2の重複を見る	df.duplicated(subset=[col1, col2])
リストxdataとリストydataについて破線グラフを描画して、その色をデピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')
データフレームdfをカラムcolとカラムcol2によって昇順にソートする	df.sort_values(by=[col,col2], ascending=True)
日時dtををn週間後に進める	dt + datetime.timedelta(weeks=n)
プログラムの実行を正しく終了する	sys.exit(0)
リストxdataとリストydataの線幅nの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
リストxdataとリストydataについての散布図をダークゴールデンロッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
リストxdataをライトスチールブルー色のヒストグラムで描画する	plt.hist(xdata, color='lightsteelblue')
フローラルホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='floralwhite')
ドジャーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')
ファイルfilenameを文字コードtextでオープンする]	open(filename, encoding=text)
オプションで、追加モードを使う	mode = 'a'
リストxdataをパパイヤウィップ色のヒストグラムで描画する	plt.hist(xdata, color='papayawhip')
ケンドール相関係数でデータフレームdfの相関行列	df.corr(method='kendall')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、最小値	df.groupby([col, col2], as_index=False).min()
散布図に四角マーカーを使う	plt.plot(xdata, ydata, marker='s')
破線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
データフレームdfをカラムcol毎にグループ化して、最大値を求める	df.groupby(col).max()
リストxdataとリストydataについての散布図を耐火レンガ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
nがn2より大きいか調べる	n > n2
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(xdata, ydata, color='darkmagenta')
リストxdataとリストydataについての散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
折れ線グラフの左三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='<', markersize=n)
xを切り下げて整数に変換する	math.floor(x)
リストxdataとリストydataについてプラム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='plum')
リストxdataとリストydataについての散布図をライトサーモン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークレッドに設定する	plt.plot(xdata, ydata, c='darkred')
データフレームdfのリストalistカラムを小数点以下n桁で丸める	df[alist].round(n)
データ列dsの第一四分位数	ds.quantile(0.25)
ミディアムパープル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumpurple')
x,x2,x3をそれぞれn,n2,n3に設定する	x, x2, x3 = n, n2, n3
ライトシアン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
ラベンダー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavender')
破線グラフの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
日付を使う	import datetime
破線グラフの色をネイビーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navy')
リストxdataとリストydataの一点鎖線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
リストxdataとリストydataの白い折れ線グラフを描画する	plt.plot(xdata, ydata, color='w')
データフレームdfのカラムcolとカラムcol2毎の最小値	df.groupby([col, col2], as_index=False).min()
実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid')
リストxdataとリストydataについての散布図をペルー色で描画する	plt.plot(xdata, ydata, c='peru')
s内にひとつでも英小文字が含まれるか調べる	any(c.islower() for c in s)
sからs2のパターンで日付に変換する	datetime.date.strptime(s, s2)
オリベドラブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
リストxdataとリストydataについての散布図を赤色で描画する	plt.plot(xdata, ydata, c='red')
データフレームdfの標本標準偏差	df.std()
折れ線グラフの色をミスティローズに設定する	plt.plot(xdata, ydata, color='mistyrose')
スカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
リストxdataとリストydataについてレベッカパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
日付adateをn月前に戻す	adate - datetime.timedelta(months=n)
日時dtからn年分、減算する	dt - datetime.timedelta(years=n)
文字列elementの出力を改行なしに行う	print(alist, end='')
リストxdataとリストydataについて破線グラフを描画して、その色をスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をアイボリーに設定する	plt.plot(xdata, ydata, color='ivory')
日時dtをn時間前に戻す	dt - datetime.timedelta(hours=n)
デックdeq中に文字列elementが含まれてるか調べる	element in deq
リストxdataとリストydataについて破線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
xの双曲線余弦の逆数	math.acosh(x)
シアン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
折れ線グラフの色をダークシアンに設定する	plt.plot(xdata, ydata, color='darkcyan')
リストxdataとリストydataの折れ線グラフに、黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
リストxdataとリストydataについて破線グラフを描画して、その色をサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
スラグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='slategray')
バイトオーダを知る	sys.byteorder
n個の要素があるリスト	[element] * n
折れ線グラフの色をホワイトに設定する	plt.plot(xdata, ydata, color='white')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークレッドに設定する	plt.plot(xdata, ydata, color='darkred')
nがn2よりも小さいか調べる	n < n2
計算機イプシロン	sys.float_info.epsilon
リストxdataとリストydataについてミディアムスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
JSONファイルのfをデータに変換する	json.load(fin)
データ列dsを100の位で丸める	ds.round(-2)
折れ線グラフの色をライトイエローに設定する	plt.plot(xdata, ydata, color='lightyellow')
データフレームdfから重複した行をドロップして、更新する	df.drop_duplicates(inplace=True)
xを切り上げて整数に変換する	math.ceil(x)
整数nがセットasetのどれかか調べる	n in aset
xとx2の商と余りをペアで使う	divmod(x, x2)
リストxdataとリストydataについて破線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
sをコロンで区切る	s.split(':')
リストalistの末尾のn要素を取り除く	alist[:-n]
セットasetからセットaset2との共通要素を全て取り除く	aset.symmetric_difference_update(aset2)
リストxdataとリストydataについての散布図をグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='gray', alpha=0.5)
折れ線グラフの星マーカーを黒くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')
データフレームdfのどの値が頻出か見る	df.mode()
リストxdataとリストydataについて折れ線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(xdata, ydata, color='rosybrown')
破線グラフの色をアンティークホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
リストxdataとリストydataについて折れ線グラフを描画して、その色をチョコレートに設定する	plt.plot(xdata, ydata, color='chocolate')
リストxdataをサドルブラウン色のヒストグラムで描画する	plt.hist(xdata, color='saddlebrown')
sをSJISのバイト列に変換する	s.encode(encoding='sjis', errors='ignore')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトブルーに設定する	plt.plot(xdata, ydata, c='lightblue')
sを出現したパターンpatternで分割する	re.split(pattern, s)
データフレームdfからn個、サンプリングする	df.sample(n)
リストxdataとリストydataの青い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='b')
リストxdataとリストydataについての散布図をライトグリーン色で描画する	plt.plot(xdata, ydata, c='lightgreen')
リストxdataをミディアムスレートブルー色のヒストグラムで描画する	plt.hist(xdata, color='mediumslateblue')
xからx2の間の一様な疑似乱数を生成する	random.uniform(x, x2)
セットasetのイミュータブル版	frozenset(aset)
折れ線グラフのマーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
折れ線グラフの色をオリベドラブに設定する	plt.plot(xdata, ydata, color='olivedrab')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、分散	df.groupby([col, col2], as_index=False).var()
データフレームdfのカラムcolを1000の位で丸める	df[col].round(-3)
破線グラフの色をライトイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
データフレームdfのリストalistカラム中にいくつ欠損値があるか数える	df[alist].isna().sum()
リストxdataとリストydataについての散布図をブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)
日時dtのタイムゾーン	dt.timetz()
sをs2で区切って文字列リストに変換する	s.split(s2)
UNIXコマンドtextを実行する	os.system(text)
リストxdataをヒストグラムで描画する	plt.hist(xdata)
リストxdataとリストydataについてシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cyan')
カウンタaCounterから高頻出項目をn個、リストとして使う	aCounter.most_common(n)
行列の演算をする	import numpy as np
リストxdataとリストydataについての散布図をピーチパフ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
リストxdataとリストydataについての散布図をオーキッド色で描画する	plt.plot(xdata, ydata, c='orchid')
リストxdataとリストydataについて散布図を描画して、マーカーの色をオリベドラブに設定する	plt.plot(xdata, ydata, c='olivedrab')
リストxdataをフォレストグリーン色のヒストグラムで描画する	plt.hist(xdata, color='forestgreen')
クラスCが名前付きタプルか調べる	issubclass(C, tuple)
f全体を行単位で分割してリストに変換する	[s.strip() for s in f.readlines()]
sを表示する	print(s)
nわるn2	n / n2
パレットトルコイズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='paleturquoise')
インディゴ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='indigo')
xをx2で割った余り	x % x2
sのs2をs3に全て置き換える	s.replace(s2, s3)
グラフのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
ブラック色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='black')
n年n2月を日付に変換する	datetime.date(year=n, month=n2, day=1)
リストxdataとリストydataについて折れ線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, color='palegoldenrod')
sの先頭で複数行対応としてパターンpatternにマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
データフレームdfをカラムcol毎にグループ化して、sというグループの個数を求める	df.groupby(col).size()[s]
ライトグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
日時dtををn秒後に進める	dt + datetime.timedelta(seconds=n)
散布図にアリスブルー色のマーカーを使う	plt.plot(xdata, ydata, c='aliceblue')
データフレームdfのn行目を破壊的に削除する	df.drop(n, axis=0, inplace=True)
リストxdataとリストydataについての散布図を淡いピンク色色で描画する	plt.plot(xdata, ydata, c='lightpink')
xのx2乗	x ** x2
リストxdataとリストydataについて散布図を描画して、マーカーの色をミスティローズに設定する	plt.plot(xdata, ydata, c='mistyrose')
破線グラフの色をパパイヤウィップに設定する	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
ゴールデンロッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
関数predicatefuncが真となるリストiterableの要素	itertools.takewhile(predicatefunc, iterable)
折れ線グラフの色をライトシアンに設定する	plt.plot(xdata, ydata, color='lightcyan')
破線グラフの色をダークバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
sを下線付きにする	f'\033[4m{s}\033[0m'
リストxdataとリストydataについての散布図をアイボリー色で描画する	plt.plot(xdata, ydata, c='ivory')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, c='lightslategrey')
ファイルfilenameを文字コードtextで書き込み用にオープンする]	open(filename, mode='w', encoding=text)
データフレームdfのカラムcolのsを欠損値に変換する	df[col].replace(s, np.nan)
折れ線グラフの透明度をxに設定する	plt.plot(xdata, ydata, alpha=x)
カラーコードrgbのダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
データ列dsが何秒か見る	ds.dt.second
Pandasで、日付データのデータフレームdfのカラムcolをデータフレームdfのインデックスにする	df.index = pd.DatetimeIndex(df[col])
データフレームdf中にいくつ文字列valueがあるか数える	df.isin([value]).sum()
オプションで、読み込む行番号をnamesで指定する	usecols = names
デックdeqの要素を左にn個分ローテートする	deq.rotate(-n)
散布図にホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='white')
sを最後のs2で二分し、、後半の文字列を使う	s.rpartition(s2)[-1]
リストxdataとリストydataについて破線グラフを描画して、その色をアクアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
リストxdataとリストydataについて散布図を描画して、マーカーの色をコーンズシルクに設定する	plt.plot(xdata, ydata, c='cornsilk')
散布図にゴールデンロッド色のマーカーを使う	plt.plot(xdata, ydata, c='goldenrod')
破線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
既存のファイルfilenameをBOM付きで追加できるようにオープンする]	open(filename, mode='a', encoding='utf_8_sig')
エクセルファイルファイルfilenameのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
散布図に黒いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='k')
リストxdataとリストydataの折れ線グラフに、青いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
リストxdataとリストydataについての散布図をロイヤルブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
sを緑色にする	f'\033[32m{s}\033[0m'
リストxdataとリストydataについて散布図を描画して、ダイアモンドマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
スチールブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='steelblue')
リストxdataを青色のヒストグラムで描画する	plt.hist(xdata, color='blue')
データフレームdfの欠損値を平均値で埋める	df.fillna(df.mean())
データフレームdfをリストalistで指定されたカラムによって降順にソートする	df.sort_values(by=alist, ascending=False)
破線グラフの色をダークレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
リストxdataをダークブルー色のヒストグラムで描画する	plt.hist(xdata, color='darkblue')
sを長さnで左寄せにする	s.ljust(n)
リストxdataとリストydataについての散布図をインディゴ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
フォレストグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
リストxdataとリストydataについて破線グラフを描画して、その色をダークサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
xを浮動小数点数に変換する	float(x)
シルバー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='silver')
オプションで、エンコーディングエラーがあるとき、例外を発生させるように設定する	errors = 'strict'
散布図にペールグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='palegreen')
データフレームdfのリストalistカラム中にある文字列valueと文字列value2の合計を数える	df[alist].isin([value, value2]).sum()
リストxdataをアクア色のヒストグラムで描画する	plt.hist(xdata, color='aqua')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategrey')
リストxdataとリストydataの折れ線グラフに、緑色のバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
ディムグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
折れ線グラフのダイアモンドマーカーを黄色くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
nまでの偶整数列	list(range(2, n, 2))
書式textをリストalistを引数としてフォーマットする	text.format(*alist)
データフレームdfをJSONLファイルfilenameにSJISで保存する	df.to_csv(filename, encoding='shift_jis')
レベッカパープル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategray')
ポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.')
リストxdataについてのヒストグラムを描画する際に合計を1にする	plt.hist(xdata, density=True)
オプションで、BOM付きを使う	encoding = 'utf_8_sig'
タプルatuple中の最小値	min(atuple)
リストxdataをオレンジレッド色のヒストグラムで描画する	plt.hist(xdata, color='orangered')
リストxdataとリストydataについて散布図を描画して、マーカーの色をグリーンに設定する	plt.plot(xdata, ydata, c='green')
リストxdataとリストydataについての散布図をシャルトルーズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
散布図にダークスラテグレー色のマーカーを使う	plt.plot(xdata, ydata, c='darkslategray')
n年n2月n3日の日時	datetime.datetime(year=n, month=n2, day=n3)
散布図に星マーカーを使う	plt.plot(xdata, ydata, marker='*')
データフレームdfのリストalistで指定されたカラムを削除する	df.drop(alist, axis=1)
データ列dsの欠損値を直後の値で埋める	ds.fillna(method='bfill')
破線グラフの色をダークマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
散布図に赤い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='r')
与えられた浮動小数点数の有理数近似	q.limit_denominator(max_denominator=1000000)
リストxdataとリストydataについて折れ線グラフを描画して、その色をスカイブルーに設定する	plt.plot(xdata, ydata, color='skyblue')
破線グラフの色をダークオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
リストxdataとリストydataについての散布図にカラーコードrgbのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストxdataとリストydataについてペールグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
ファイルfilenameをSJISでオープンする]	open(filename, encoding='shift_jis')
エクセルファイルファイルfilenameから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
リストxdataとリストydataについて散布図を描画して、マーカーの色をグレーに設定する	plt.plot(xdata, ydata, c='grey')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークスラテグレーに設定する	plt.plot(xdata, ydata, c='darkslategray')
貝殻色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='seashell')
本日の日数	datetime.datetime.today().day
散布図に貝殻色のマーカーを使う	plt.plot(xdata, ydata, c='seashell')
リストxdataとリストydataについて耐火レンガ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
スレートブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をピーチパフに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
黒い折れ線グラフを描画する	plt.plot(xdata, ydata, color='k')
散布図にサーモン色のマーカーを使う	plt.plot(xdata, ydata, c='salmon')
nからn2未満までの整数乱数を生成する	random.randrange(n, n2)
リストxdataとリストydataについて折れ線グラフを描画して、その色をターコイズに設定する	plt.plot(xdata, ydata, color='turquoise')
散布図にカラーコードrgbの大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c=rgb)
文字列elementがセットasetに含まれるか調べる	element in aset
整数nを十六進文字列に変換する	hex(n)[2:]
keyが辞書adictに存在するか調べる	key in adict
データフレームdfのリストalistカラムの欠損値を最大値で埋める	df[alist].fillna(df[alist].max())
リストxdataとリストydataについてフローラルホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
八進sを整数に変換する	int(s, 8)
黒い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='k')
空のタプル	()
リストxdataとリストydataについての散布図をナバホホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
散布図に黒い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='k')
シルバー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='silver', alpha=0.5)
グラフにy=0の実線を付ける	plt.axhline(y=0, linestyle='solid')
コレクションを使う	import collections
スカイブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='skyblue')
破線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o')
nが無限に続く数列	itertools.repeat(n)
デピンク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='deeppink')
日時dtが水曜日か調べる	dt.weekday() == 2
最初のカテゴリーを除外して、xをダミー変数に変換する	pd.get_dummies(x, drop_first=True)
グリーンイエロー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='greenyellow')
日付adateををn分後に進める	adate + datetime.timedelta(minutes=n)
コーラル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='coral')
散布図にディムグレー色のマーカーを使う	plt.plot(xdata, ydata, c='dimgray')
サンディーブラウン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(xdata, ydata, color='lemonchiffon')
リストxdataとリストydataについての散布図をダークカーキ色で描画する	plt.plot(xdata, ydata, c='darkkhaki')
リストxdataとリストydataについて破線グラフを描画して、その色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
コーンフラワーブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='cornflowerblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をマルーンに設定する	plt.plot(xdata, ydata, color='maroon')
リストxdataとリストydataのカラーコードrgbの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
ダークグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgrey')
折れ線グラフの色をネイビーに設定する	plt.plot(xdata, ydata, color='navy')
xの小数点以下'1'桁までの文字列に変換する	':.1f'.format(x)
日付adateををn時間後に進める	adate + datetime.timedelta(hours=n)
カラーコードrgbの三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
データ列dsの欠損値を最小値に設定する	ds.fillna(ds.min())
ダークシアグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkseagreen')
折れ線グラフの下三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='v', markersize=n)
ダークスレートブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkslateblue')
ファイルfilenameから読み込みストリームをオープンして]、fとする	f = open(filename, mode='r')
アリスブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='aliceblue')
データフレームdfの値をdictでまとめて置き換える	df.replace(adict)
整数nを符号付きでバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
標準入力から1文字だけ読む	sys.stdin.read(1)
インディゴ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='indigo')
破線グラフの色をライトサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
データフレームdfの空文字を欠損値に変換し、ドロップする	df.replace('', np.nan).dropna()
再帰数の上限を上げる	sys.setrecursionlimit(1000000)
データフレームdfをJSONLファイルfilenameにBOM付きで保存する	df.to_csv(filename, encoding='utf_8_sig')
オブジェクトobjとオブジェクトobj2は同一オブジェクトか調べる	obj is obj2
散布図にサドルブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='saddlebrown')
リストxdataとリストydataについてアザミ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='thistle')
リストxdataとリストydataについて破線グラフを描画して、その色をティールに設定する	plt.plot(xdata, ydata, linestyle='dash', color='teal')
リストxdataとリストydataについて折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgray')
グリーンイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
散布図に左三角マーカーを使う	plt.plot(xdata, ydata, marker='<')
辞書adictの全エントリをクリアする	adict.clear()
関数predicatefuncが真とならないリストiterableの要素	itertools.dropwhile(predicatefunc, iterable)
リストxdataとリストydataについて散布図を描画して、大バツマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストxdataとリストydataについて赤色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='red')
sの先頭でパターンpatternに大文字・小文字を無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)
貝殻色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='seashell')
文字列elementがタプルatupleの要素でないか調べる	element not in atuple
データフレームを表示するとき、折り返しをしない	pd.set_option('expand_frame_repr', False)
sをs2で分けたときの後半の文字列	s.partition(s2)[-1]
破線グラフの色をオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orange')
データフレームdfのリストalistカラムの欠損値を最小値で埋める	df[alist].fillna(df[alist].min())
リストxdataをレモンシフォン色のヒストグラムで描画する	plt.hist(xdata, color='lemonchiffon')
n年の日付	datetime.date(year=n, month=1, day=1)
データ列dsの歪度	ds.kurt()
fを一行ずつ読み込む	f.readline()
辞書adictの値の一覧	adict.values()
グリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='green')
破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed')
データフレームdfのリストalistカラムを100の位で丸める	df[alist].round(-2)
データフレームdfのカラムcolに重複があれば、マスクする	df.duplicated(subset=col)
ssを連結する	''.join(ss)
データフレームdfから破壊的に重複を削除する	df.drop_duplicates(inplace=True)
リストxdataとリストydataの折れ線グラフを描画して、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
整数nのバイト長	(n.bit_length() + 7) // 8
オブジェクトobjがtextプロパティを持つか調べる	hasattr(obj, text)
アクア色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aqua')
破線グラフの色を貝殻に設定する	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、関数適用した値	df.groupby([col, col2], as_index=False).agg(func)
リストxdataとリストydataについての散布図をダークオレンジ色で描画する	plt.plot(xdata, ydata, c='darkorange')
未定値	None
リストxdataをアンティークホワイト色のヒストグラムで描画する	plt.hist(xdata, color='antiquewhite')
xを整数に変換する	int(x)
ペルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='peru')
日時dtの日数	dt.day
ローングリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lawngreen')
パパイヤウィップ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
折れ線グラフの星マーカーを赤くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
nまでの奇整数列	list(range(1, n, 2))
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
Pandasで、データフレームdfのカラムcolを日付データに変換し、データフレームdfのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
グレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='gray')
シャルトルーズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
ダークマゼンタ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
オプションで、読み込みモードに設定する	mode = 'r'
nが奇数か調べる	n % 2 == 1
リストxdataをシャルトルーズ色のヒストグラムで描画する	plt.hist(xdata, color='chartreuse')
リストxdataとリストydataの折れ線グラフを描画して、色を白くする	plt.plot(xdata, ydata, color='w')
リストxdataとリストydataについての散布図をフクシア色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
リストxdataとリストydataについてクリムゾン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='crimson')
リストxdataとリストydataについて破線グラフを描画して、その色をライムに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lime')
リストxdataとリストydataについての散布図を青色で描画する	plt.plot(xdata, ydata, c='blue')
データフレームdfを見る	df.head()
リストxdataとリストydataについての散布図をカデットブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
破線グラフの色をゲインズボロに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
破線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')
nが2で割り切れないか調べる	n % 2 == 1
折れ線グラフの色をティールに設定する	plt.plot(xdata, ydata, color='teal')
n年の日時	datetime.datetime(year=n, month=1, day=1)
文字列element∈セットaset	element in aset
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、標準偏差	df.groupby([col, col2], as_index=False).std()
sを空白で区切って整数リストに変換する	map(int, s.split())
リストxdataとリストydataの折れ線グラフに、緑色の星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')
オブジェクトobjは文字列クラスか調べる	isinstance(obj, str)
折れ線グラフの大バツマーカーを黒くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
データフレームdfのカラムcolの値が欠損値か調べる	df[col].isna()
データフレームdfの要約統計量	df.describe()
selectorsでマスクされたリストiterableの要素を取り出す	itertools.compress(iterable, selectors=iterable2)
オブジェクトobjがPerson;$$クラスか調べる	isinstance(obj, TYPE)
リストxdataとリストydataについて破線グラフを描画して、その色をダークカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークグレーに設定する	plt.plot(xdata, ydata, c='darkgrey')
オブジェクトobjのtextプロパティの値を文字列elementに設定する	setattr(obj, text, element)
sの中からパターンpatternに複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)
nをn2乗に増やす	n **= n2
0からnの範囲	range(n)
スレートブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='slateblue')
現在の分数	datetime.date.today().minite
ミディアムスプリンググリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumspringgreen')
オプションで、どのカラムもインデックスに設定しない	index_col = None
ローングリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lawngreen')
数式として、eの平方根を求める	sympy.sqrt(e)
データフレームdfの欠損値を中央値に設定する	df.fillna(df.median())
リストxdataとリストydataについての散布図をハリウッド色で描画する	plt.plot(xdata, ydata, c='burlywood')
タプルatupleの合計値	sum(atuple)
リストxdataとリストydataについてダークグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
s全体を複数行対応としてパターンpatternにマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
リネン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='linen')
リストxdataとリストydataについてホットピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
数式として、zについてeを積分する	sympy.integrate(e, z)
リストxdataをゴーストホワイト色のヒストグラムで描画する	plt.hist(xdata, color='ghostwhite')
リストxdataとリストydataの折れ線グラフに、線幅nの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
ライトコーラル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightcoral')
オプションで、ファイルを出力にする	file = sys.open(filename, 'w')
オプションで、EUCを使う	encoding = 'euc_jp'
Pandasで、データフレームdfのcollのエポック秒から日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
リストiterableをイミュータブルな集合に変換する	frozenset(iterable)
リストxdataとリストydataについて折れ線グラフを描画して、その色をモカシンに設定する	plt.plot(xdata, ydata, color='moccasin')
アリスブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
データフレームdfのリストalistカラムの欠損値を平均値に設定する	df[alist].fillna(df[alist].mean())
リネン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='linen')
デックdeqの末尾から要素を取り除く	deq.pop()
日時dtにn時間分、加算する	dt + datetime.timedelta(hours=n)
リストxdataとリストydataについての散布図をグレー色で描画する	plt.plot(xdata, ydata, c='grey')
デックdeqのn番目	deq[n]
データフレームdfをカラムcol毎にグループ化して、分散を求める	df.groupby(col).var()
リストxdataとリストydataについてスチールブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
オブジェクトobjにtextプロパティが存在するか調べる	hasattr(obj, text)
リストxdataとリストydataの折れ線グラフを描画して、色を赤くする	plt.plot(xdata, ydata, color='r')
リストxdataとリストydataの折れ線グラフを描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
データフレームdfを丸めて、整数型にする	df.round().astype(int)
折れ線グラフの色をパパイヤウィップに設定する	plt.plot(xdata, ydata, color='papayawhip')
リストxdataをレベッカパープル色のヒストグラムで描画する	plt.hist(xdata, color='rebeccapurple')
リストxdataとリストydataについて散布図を描画して、マーカーの色をレベッカパープルに設定する	plt.plot(xdata, ydata, c='rebeccapurple')
ファイルfilenameから書き込みストリームをオープンして]、fとする	f = open(filename, mode='w')
ピーチパフ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
リストxdataとリストydataについての散布図をモカシン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
チョコレート色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
折れ線グラフの色を青に設定する	plt.plot(xdata, ydata, color='blue')
リストxdataとリストydataの破線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dashed', color='b')
textとtext2をファイルパスとして結合する	os.path.join(text, text2)
折れ線グラフの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, color='palevioletred')
sのs2の出現回数	s.count(s2)
リストxdataとリストydataの折れ線グラフに、黒い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
0からnまでのスライス	slice(n)
nがn2未満、またはn3以上か調べる	n < n2 or n >= n3
リストxdataとリストydataについての散布図をスプリンググリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をブラウンに設定する	plt.plot(xdata, ydata, c='brown')
ダークグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkgreen')
エンコーディング	sys.getdefaultencoding()
nとn2が等しいか調べる	n == n2
リストxdataとリストydataについての散布図をスラグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
データフレームdfのカラムcolを小数点以下n桁で丸める	df[col].round(n)
破線グラフの色をコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='coral')
リストxdataとリストydataについてサンディーブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
データフレームdfのカラムcolの第一四分位数	df[col].quantile(0.25)
ライトコーラル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightcoral')
データフレームdfのカラムcolのどの値が頻出か見る	df[col].mode()
xのハッシュ値	hash(x)
sの接頭辞がs2か調べる	s.startswith(s2)
散布図にカラーコードrgbのバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c=rgb)
コーンズシルク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
リストxdataとリストydataについての散布図をラベンダー色で描画する	plt.plot(xdata, ydata, c='lavender')
リストxdataとリストydataについて破線グラフを描画して、その色を赤に設定する	plt.plot(xdata, ydata, linestyle='dash', color='red')
折れ線グラフの色をグレーに設定する	plt.plot(xdata, ydata, color='grey')
標準入力から1行だけ読む	sys.stdin.readline()
散布図にダークグレー色のマーカーを使う	plt.plot(xdata, ydata, c='darkgrey')
耐火レンガ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='firebrick')
赤い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='r')
リストxdataとリストydataについての散布図をオレンジ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='orange', alpha=0.5)
文字列elementがリストalistに含まれるか調べる	element in alist
リストxdataとリストydataについてパウダーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
データフレームdfのカラムcol毎の合計	df.groupby(col).sum()
八進sをバイト列に変換する	int(s, 8).to_bytes(length=n2, byteorder='big')
リストxdataとリストydataについて折れ線グラフを描画して、その色をマゼンタに設定する	plt.plot(xdata, ydata, color='magenta')
n年n2月の日時	datetime.datetime(year=n, month=n2, day=1)
データフレームdfをエクセルファイルファイルでJSONLファイルfilenameに保存する	df.to_excel(filename)
プログラムの実行を強制的に終了する	sys.exit()
グラフのカラーパレットを濃くする	sns.set(pallete='deep')
ライムグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
グラフ中のフォントをsに設定する	sns.set(font=s)
リストxdataとリストydataについての散布図をピンク色で描画する	plt.plot(xdata, ydata, c='pink')
リストxdataをトマト色のヒストグラムで描画する	plt.hist(xdata, color='tomato')
リストxdataとリストydataの折れ線グラフに、緑色のポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
折れ線グラフの色をライトブルーに設定する	plt.plot(xdata, ydata, color='lightblue')
リストxdataとリストydataについてオリーブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olive')
リストxdataとリストydataについて破線グラフを描画して、その色を耐火レンガに設定する	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
リストxdataとリストydataについてオレンジ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orange')
パウダーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
散布図にクリムゾン色のマーカーを使う	plt.plot(xdata, ydata, c='crimson')
ライトグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
辞書adictから最後に追加したエントリを取り出す	adict.popitem()
リストxdataとリストydataについて折れ線グラフを描画して、その色をカーキに設定する	plt.plot(xdata, ydata, color='khaki')
データフレームdfのカラムcolをリストとして抽出する	df[col].values.tolist()
リストxdataとリストydataについてゲインズボロ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
試しに何か動かす	print('Hello World')
データフレームdfのリストalistカラムの欠損値を最大値に設定する	df[alist].fillna(df[alist].max())
データフレームdfのカラムcolの年	df[col].dt.year
文字列elementが辞書adictの値に含まれているか調べる	element in adict.values()
リストxdataとリストydataについての散布図をブラック色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)
プラム色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='plum', alpha=0.5)
アクアマリン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='aquamarine')
カラーバーを描画する	plt.colorbar()
データフレームdfのカラムcolの日	df[col].dt.day
散布図にライトブルー色のマーカーを使う	plt.plot(xdata, ydata, c='lightblue')
ファイルfilenameをBOM付きでオープンする]	open(filename, encoding='utf_8_sig')
散布図にハニーデュー色のマーカーを使う	plt.plot(xdata, ydata, c='honeydew')
s内にひとつでも英大文字が含まれるか調べる	any(c.isupper() for c in s)
空行を表示する	print()
リストxdataとリストydataの黒い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='k')
リストxdataとリストydataについて散布図を描画して、マーカーの色をパウダーブルーに設定する	plt.plot(xdata, ydata, c='powderblue')
リストalistの平均値	sum(alist)/len(alist)
セットaset＼セットaset2	aset.difference(aset2)
正規分布で疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
オプションで、エンコーディングを文字コードtextに設定する	encoding = text
リストxdataとリストydataについて破線グラフを描画して、その色をインディゴに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
ダークオリーブグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
データフレームdfの欠損値を最小値で埋める	df.fillna(df.min())
折れ線グラフの色をイエローグリーンに設定する	plt.plot(xdata, ydata, color='yellowgreen')
コマンドの一覧を得る	sys.argv[1:]
マルーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='maroon')
オブジェクトobjのバイトサイズを知る	sys.getsizeof(obj)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトグリーンに設定する	plt.plot(xdata, ydata, c='lightgreen')
nが3の倍数か調べる	n % 3 == 0
sは全て数値か調べる	s.isnumeric()
タプルatupleのn番目の	atuple[n]
sをs2で分けたときの前半の文字列	s.partition(s2)[0]
ユーザが整数を入力する	int(input())
ミントクリーム色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mintcream')
リストalist中の最大値	max(alist)
散布図に黒い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='k')
セットaset⊆セットaset2	aset.issubset(aset2)
スラグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='slategray')
ファイルfilenameからファイル名を使う	os.path.basename(filename)
ファイルfilenameをオープンして]、書き込みストリームを使う	open(filename, mode='w')
リストxdataをライトサーモン色のヒストグラムで描画する	plt.hist(xdata, color='lightsalmon')
s中の複数行対応のパターンpatternよって置き換える	re.sub(pattern, repl, s, flags=re.MULTILINE)
事前にASCII限定としてパターンpatternをコンパイルする	re.compile(pattern, flag=re.ASCI)
グラフのカラーパレットを明るくする	sns.set(pallete='bright')
セットasetとセットaset2に共通する要素からなる集合	aset.intersection(aset2)
sが全て数字か調べる	s.isdigit()
リストxdataとリストydataの実線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='solid', color='b')
折れ線グラフの四角マーカーを青くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークグリーンに設定する	plt.plot(xdata, ydata, c='darkgreen')
日時dtが月曜日か調べる	dt.weekday() == 0
破線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
リストxdataとリストydataについて破線グラフを描画して、その色をディープスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
リストxdataとリストydataについてベージュ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='beige')
ライトスレイグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightslategrey')
データフレームdfの欠損値を最頻値に設定する	df.fillna(df.mode().iloc[0])
リストiterableを2回あわせた直積	itertools.product(iterable, repeat=2)
散布図にマルーン色のマーカーを使う	plt.plot(xdata, ydata, c='maroon')
リストxdataとリストydataについての散布図をミディアムスレートブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
データフレームdf中にいくつ欠損値があるか数える	df.isna().sum()
オブジェクトobjはタプルクラスか調べる	isinstance(obj, tuple)
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、合計	df.groupby([col, col2], as_index=False).sum()
アクアマリン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
グラフ中の(x,x2)の位置に凡例を入れる	plt.legend(loc=(x, x2))
データフレームdfのカラムcolの欠損値を直前の値に設定する	df[col].fillna(method='ffill')
ライトスチールブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をフクシアに設定する	plt.plot(xdata, ydata, color='fuchsia')
タプルatupleの末尾からn番目以前の部分を取り出す	atuple[:-n]
リストxdataとリストydataについての散布図をライムグリーン色で描画する	plt.plot(xdata, ydata, c='limegreen')
リストxdataとリストydataについての散布図をライム色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lime', alpha=0.5)
データフレームdfをカラムcol毎にグループ化して、平均値を求める	df.groupby(col).mean()
リストxdataとリストydataについての散布図を紺碧色で描画する	plt.plot(xdata, ydata, c='azure')
リストxdataとリストydataについての散布図をダークグレー色で描画する	plt.plot(xdata, ydata, c='darkgrey')
リストxdataとリストydataの折れ線グラフに、黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
破線グラフの色をミスティローズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
リストxdataとリストydataについてアクア色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aqua')
リストxdataとリストydataについての散布図をミディアムシアグリーン色で描画する	plt.plot(xdata, ydata, c='mediumseagreen')
データフレームdfからリストalistで指定されたデータ型のカラムを除外する	df.select_dtypes(exclude=alist)
データフレームdfのカラムcolを1000の位で丸めて、整数型にする	df[col].round(-3).astype(int)
ファイルfilenameを書き込みモードでオープンする]	open(filename, mode='w')
折れ線グラフのダイアモンドマーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='D', markersize=n)
デックdeqをリストに変換する	list(deq)
データフレームdfの欠損値を最小値に設定する	df.fillna(df.min())
辞書adictの浅いコピーを行う	adict.copy()
データ列を使う	import pandas as pd
リストxdataとリストydataについての散布図をライトスチールブルー色で描画する	plt.plot(xdata, ydata, c='lightsteelblue')
リストxdataとリストydataについて散布図を描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
sを最後のs2で分けたときの後半の文字列	s.rpartition(s2)[-1]
__X__カラーパレットをグラフに使う	sns.set(pallete='muted')
ライトスカイブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightskyblue')
データフレームdfのインデックスの名前をまとめて、sからs2に付け直す	df.rename(index={s: s2})
リストxdataとリストydataについての散布図をゴールデンロッド色で描画する	plt.plot(xdata, ydata, c='goldenrod')
リストxdataとリストydataについて折れ線グラフを描画して、その色をシアンに設定する	plt.plot(xdata, ydata, color='cyan')
リストxdataとリストydataの折れ線グラフにダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
nが偶数か調べる	n % 2 == 0
xを文字列型に変換する	str(x)
散布図にシアン色のマーカーを使う	plt.plot(xdata, ydata, c='cyan')
データ列dsの分散	ds.var()
破線グラフの色をオールドレースに設定する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
ラベンダー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lavender')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, c='mediumorchid')
折れ線グラフの大バツマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
リストxdataとリストydataについての散布図をゴーストホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
セットasetを空にする	aset.clear()
本日をsでフォーマットする	datetime.datetime.today().strftime()
リストxdataとリストydataについて折れ線グラフを描画して、その色をブラウンに設定する	plt.plot(xdata, ydata, color='brown')
オプションで、読み込みモードを使う	mode = 'r'
3数n,n2,n3の最小公倍数	math.lcm(n, n2, n3)
リストxdataとリストydataについての散布図をスチールブルー色で描画する	plt.plot(xdata, ydata, c='steelblue')
リストxdataとリストydataについての散布図をグレー色で描画する	plt.plot(xdata, ydata, c='gray')
赤色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='red')
リストxdataをミントクリーム色のヒストグラムで描画する	plt.hist(xdata, color='mintcream')
日付adateが日付adate2と同時か調べる	adate == adate2
日付adateからn分、減算する	adate - datetime.timedelta(minutes=n)
リストxdataとリストydataについてダークシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
リストxdataとリストydataの折れ線グラフに、黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
データ列dsの値を正規表現patternでまとめてsに置き換える	ds.replace(pattern, s, regex=True)
ベージュ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='beige')
リストiterableから重複なく、n個ランダムに選ぶ	random.sample(iterable, k=n)
オールドレース色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='oldlace')
リストxdataとリストydataの折れ線グラフを描画して、色を青くする	plt.plot(xdata, ydata, color='b')
リストxdataとリストydataについての散布図をペールグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
ミディアムバイオレットレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumvioletred')
折れ線グラフの色をオリーブに設定する	plt.plot(xdata, ydata, color='olive')
n年n2月n3日n4時n5分n6秒の日時	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n6)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトグリーンに設定する	plt.plot(xdata, ydata, c='lightseagreen')
__X__カラーパレットをグラフに使う	sns.set(pallete='bright')
分母の最大値を指定して近似したい	q.limit_denominator(max_denominator=1000000)
乱数シードをnで固定化する	random.seed(n)
データフレームdfのカラムcolの各データが何回出現するか見る	df[col].value_counts()
コーンフラワーブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='cornflowerblue')
リストxdataとリストydataについてライトグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
xとx2の斜辺	math.hypot(x, x2)
リストxdataとリストydataについて破線グラフを描画して、その色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='grey')
arrayをビン数nでビン分割して、namesのラベルをつける	pd.cut(array, n, labels=names)
リストxdataとリストydataについての散布図をパレットトルコイズ色で描画する	plt.plot(xdata, ydata, c='paleturquoise')
リストxdataとリストydataについての散布図をビスク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
整数nの二進文字列	bin(n)[2:]
折れ線グラフのダイアモンドマーカーを緑色に設定する	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
データフレームdf中のカラムcolをビン数nでビン分割する	pd.cut(df[col], n)
リストxdataとリストydataについてディムグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
ミントクリーム色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mintcream')
折れ線グラフの色をトマトに設定する	plt.plot(xdata, ydata, color='tomato')
データフレームdfのヒートマップを描画する	sns.heatmap(df.corr())
リストxdataとリストydataについて破線グラフを描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
ミディアムオーキッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumorchid')
リストxdataとリストydataについての散布図をコーンズシルク色で描画する	plt.plot(xdata, ydata, c='cornsilk')
辞書adictと辞書adict2をチェーンする	collections.ChainMap(adict, adict2)
黄色色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='yellow')
リストxdataとリストydataについて破線グラフを描画して、その色をダークシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
リストxdataとリストydataについて破線グラフを描画して、その色をスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
リストxdataとリストydataについての散布図をロージーブラウン色で描画する	plt.plot(xdata, ydata, c='rosybrown')
ライトスチールブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightsteelblue')
リストxdataとリストydataについての散布図をカーキ色で描画する	plt.plot(xdata, ydata, c='khaki')
辞書adictのキーと値を入れ替える	{v: k for k, v in adict.items()}
リストxdataとリストydataの折れ線グラフに、大きさnのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markersize=n)
データフレームdfのカラムcolの最頻値の出現回数	df[col].freq()
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, c='darkolivegreen')
十六進sをバイト列に変換する	int(s, 16).to_bytes(length=n, byteorder='big')
リストxdataとリストydataについての散布図をペルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='peru', alpha=0.5)
データ列dsの最頻値の出現回数	ds.freq()
モカシン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='moccasin')
散布図にライトスチールブルー色のマーカーを使う	plt.plot(xdata, ydata, c='lightsteelblue')
リストxdataについてのヒストグラムを描画して、透明度をxに設定する	plt.hist(xdata, alpha=x)
リストxdataとリストydataについての散布図に黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストxdataとリストydataについての散布図をアザミ色で描画する	plt.plot(xdata, ydata, c='thistle')
リストxdataとリストydataについて破線グラフを描画して、その色をスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
リストxdataをダークバイオレット色のヒストグラムで描画する	plt.hist(xdata, color='darkviolet')
数式として、eのzにe2を代入する	e.subs(z, e2)
ロイヤルブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='royalblue')
データフレームdfのカラムの名前をまとめて、sをs2に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
トマト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をアイボリーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
散布図にパープル色のマーカーを使う	plt.plot(xdata, ydata, c='purple')
データフレームdfのリストalistカラムのヒートマップを描画する	sns.heatmap(df[alist].corr())
リストxdataとリストydataについての散布図に黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
sの接尾辞がs2か調べる	s.endswith(s2)
ファイルfilenameをUTF8で書き込み用にオープンする]	open(filename, mode='w', encoding='utf-8')
スチールブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='steelblue')
データフレームdfから重複した行を残さず、削除する	df.drop_duplicates(keep=False)
インディアンレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
リストxdataをローングリーン色のヒストグラムで描画する	plt.hist(xdata, color='lawngreen')
リストxdataとリストydataについての散布図をパパイヤウィップ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
データフレームdfを100の位で丸める	df.round(-2)
散布図にラベンダーブラッシュ色のマーカーを使う	plt.plot(xdata, ydata, c='lavenderblush')
sを全て英小文字に変換する	s.casefold()
データフレームdfのカラムcolの曜日数	df[col].dt.dayofweek
リストxdataとリストydataの折れ線グラフに、大きさnの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markersize=n)
オプションで、データ操作の結果を反映させる	inplace = True
リストxdataとリストydataの折れ線グラフに、黄色いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
nが-9以上、9以下か調べる	-9 <= n <= 9
データフレームdfのカラムcolの歪度	df[col].kurt()
ダークオレンジ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkorange')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, color='midnightblue')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、個数	df.groupby([col, col2], as_index=False).count()
青色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blue')
最大の再帰数をnに設定する	sys.setrecursionlimit(n)
nとn2の論理和	n | n2
グラフ中に凡例を入れる	plt.legend()
カウンタaCounterの全数	aCounter.total()
リストxdataとリストydataについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
グラフの用途をポスターに設定する	sns.set(context='poster')
リストxdataとリストydataについての散布図に赤いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
xとx2が近いか調べる	math.isclose(x, x2)
ピンク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='pink')
整数nを符号付きで長さn2のバイト列に変換する	n.to_bytes(length=n2, byteorder='big', signed=True)
sに日本語が含まれるか調べる	re.search('[あ-んア-ン一-鿐]', s)
リストxdataとリストydataの線幅nの一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
リストxdataとリストydataの折れ線グラフに、黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
リストxdataとリストydataについての散布図をライトグリーン色で描画する	plt.plot(xdata, ydata, c='lightseagreen')
オーキッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='orchid')
オブジェクトobjはバイト列クラスか調べる	isinstance(obj, bytes)
sとs2は同じか調べる	s == s2
ピーチパフ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
セットasetをセットaset2との共通要素だけに更新する	aset.intersection_update(aset2)
折れ線グラフのダイアモンドマーカーを青くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
sのの中でASCII限定のパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s, flags=re.ASCI)
破線グラフの色をゴールドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gold')
グレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='gray')
sのnからとn2までの間にs2が含まれないか調べる	s.find(s2, start=n, end=n2) == -1
リストxdataとリストydataについての散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
リストxdataとリストydataの折れ線グラフを描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
0からn未満までの整数乱数を生成する	random.randrange(n)
リストxdataとリストydataについての散布図をブルーバイオレット色で描画する	plt.plot(xdata, ydata, c='blueviolet')
セットasetがセットaset2と互いに素か調べる	aset.isdisjoint(aset2)
ベクトルの演算をする	import numpy as np
データフレームdfのカラムcolの第三四分位数	df[col].quantile(0.75)
破線グラフの色をハリウッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
リストxdataとリストydataについて破線グラフを描画して、その色をホットピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
データフレームdfのカラムcol毎の最小値	df.groupby(col).min()
オリベドラブ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
n年n2月n3日n4時を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
日時dtにn週間分、加算する	dt + datetime.timedelta(weeks=n)
リストxdataとリストydataについて破線グラフを描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
データ列dsをビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
折れ線グラフの星マーカーを青くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
sとs2を比較する	s == s2
セットasetとセットaset2の差集合	aset.difference(aset2)
リストxdataをダークレッド色のヒストグラムで描画する	plt.hist(xdata, color='darkred')
データフレームdfをカラムcol毎にグループ化して、グループの個数を求める	df.groupby(col).size()
リストxdataとリストydataについて破線グラフを描画して、その色をビスクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
リストxdataとリストydataについて破線グラフを描画して、その色をオールドレースに設定する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
折れ線グラフの星マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
リストiterableにリストiterable2を続ける	itertools.chain(iterable, iterable2)
sを文字リストに変換する	list(s)
リストxdataとリストydataについての散布図をライトスレイグレー色で描画する	plt.plot(xdata, ydata, c='lightslategray')
破線グラフの色をベージュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='beige')
破線グラフの色をオリベドラブに設定する	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
リストxdataとリストydataについて折れ線グラフを描画して、その色をゲインズボロに設定する	plt.plot(xdata, ydata, color='gainsboro')
nではない	not n
データフレームdfのカラムcolが何時か見る	df[col].dt.hour
ミッドナイトブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='midnightblue')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
TSVファイルfilenameをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
散布図にホワイトスモーク色のマーカーを使う	plt.plot(xdata, ydata, c='whitesmoke')
既存のファイルfilenameをSJISで追加できるようにオープンする]	open(filename, mode='a', encoding='shift_jis')
TSVファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
リストxdataとリストydataについての散布図にカラーコードrgbの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
nがn2で割り切れるか調べる	n % n2 == 0
ミディアムスレートブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumslateblue')
リストxdataとリストydataの折れ線グラフに、黄色いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
黒い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='k')
xの常用対数	math.log10(x)
リストxdataとリストydataについて破線グラフを描画して、その色をダークブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
qの分子	q.numerator
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークターコイズに設定する	plt.plot(xdata, ydata, c='darkturquoise')
xが1、もしくは2か調べる	x == 1 or x == 2
リストxdataとリストydataについてナバホホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
整数nの八進文字列	oct(n)[2:]
データフレームdf中の欠損値がある行を削除する	df.dropna()
xが正の数か調べる	x > 0
データフレームdfのカラムcolの欠損値を平均値で埋める	df[col].fillna(df[col].mean())
折れ線グラフに左三角マーカーを使う	plt.plot(xdata, ydata, marker='<')
データフレームdfが正規分布からどの程度、尖っているか見る	df.skew()
データフレームdfのカラムcolの欠損値を最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
フォレストグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='forestgreen')
リストiterableを表示する	print(iterable)
リストxdataとリストydataの折れ線グラフに、線幅nの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
xがNaNか調べる	math.isnan(x)
リストxdataとリストydataについて散布図を描画して、マーカーの色をクリムゾンに設定する	plt.plot(xdata, ydata, c='crimson')
データフレームdf中のカラムcolとカラムcol2に重複があれば、削除する	df.drop_duplicates(subset=[col, col2])
データフレームdfのカラムcol中にある文字列valueと文字列value2の合計を数える	df[col].isin([value, value2]).sum()
0からnまでの整数列	list(range(n+1))
リストalistをn倍する	alist * n
ホットピンク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='hotpink')
リストxdataとリストydataについて破線グラフを描画して、その色をライトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
リストxdataとリストydataについてグリーンイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
リストxdataとリストydataについての散布図をアリスブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
s内にひとつでも空白が含まれるか調べる	any(c.isspace() for c in s)
nとn2の最小公倍数	math.lcm(n, n2)
xの平方根	math.sqrt(x)
散布図にスプリンググリーン色のマーカーを使う	plt.plot(xdata, ydata, c='springgreen')
nの二乗	n ** 2
リストxdataとリストydataについて折れ線グラフを描画して、その色をアリスブルーに設定する	plt.plot(xdata, ydata, color='aliceblue')
データ列dsの欠損値を直前の値に設定する	ds.fillna(method='ffill')
リストxdataとリストydataの折れ線グラフに、黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
リストxdataとリストydataの赤い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
サンディーブラウン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='sandybrown')
破線グラフの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
ディムグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='dimgray')
データフレームdfのカラムcolのタイムゾーンをsに設定する	df[col].tz_convert(s)
リストxdataとリストydataについての散布図をダークグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
折れ線グラフの色をパレットトルコイズに設定する	plt.plot(xdata, ydata, color='paleturquoise')
データフレームdfのカラムcolがsで終わる行を抽出する	df[df[col].str.endswith(s)]
淡いピンク色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
シルバー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='silver')
折れ線グラフの右三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='>', markersize=n)
sは全て十進数字か調べる	s.isdecimal()
データフレームdfのカラムcolがx、かつカラムcol2がx2である行を抽出する	df[(df[col] == x) & (df[col2] == x2)]
データ列dsが何時か見る	ds.dt.hour
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, c='darkgoldenrod')
nが1、もしくは2か調べる	n == 1 or n == 2
シャルトルーズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='chartreuse')
日付adateをn週間前に戻す	adate - datetime.timedelta(weeks=n)
nをn2で整数除算する	n // n2
数式として、eの因数分解を行う	sympy.factor(e)
データフレームdfの重複した行のみを抽出する	df[df.duplicated(keep=False)]
ホットピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
散布図にスレートブルー色のマーカーを使う	plt.plot(xdata, ydata, c='slateblue')
破線グラフの色をロージーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
パパイヤウィップ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、丸マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
散布図にオーキッド色のマーカーを使う	plt.plot(xdata, ydata, c='orchid')
データフレームdfのリストalistカラムの母標準偏差	df[alist].std(ddof=0)
ダークバイオレット色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkviolet')
オプションで、バイナリモードを使う	mode = 'rb'
リストxdataとリストydataについて破線グラフを描画して、その色をホワイトスモークに設定する	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
散布図にライトグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightgray')
リストxdataとリストydataについて散布図を描画して、マーカーの色をゴーストホワイトに設定する	plt.plot(xdata, ydata, c='ghostwhite')
リストxdataをインディゴ色のヒストグラムで描画する	plt.hist(xdata, color='indigo')
xの逆双曲線正弦	math.asinh(x)
データフレームdfのリストalistカラム中に文字列valueがあるか調べる	df[alist].isin([value])
sを最後のs2で分けたときの前半の文字列	s.rpartition(s2)[0]
ライトイエロー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をオーキッドに設定する	plt.plot(xdata, ydata, c='orchid')
リストxdataをライトコーラル色のヒストグラムで描画する	plt.hist(xdata, color='lightcoral')
日付adateからn時間分、減算する	adate - datetime.timedelta(hours=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトスチールブルーに設定する	plt.plot(xdata, ydata, c='lightsteelblue')
sをカンマで分割し、文字列リストに変換する	s.split(',')
データフレームdfの母標準偏差	df.std(ddof=0)
リストxdataをアザミ色のヒストグラムで描画する	plt.hist(xdata, color='thistle')
リストalistをビン分割する	pd.cut(alist, alist)
xの絶対値	abs(x)
リストxdataとリストydataについて散布図を描画して、マーカーの色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, c='cornflowerblue')
標準出力を得る	sys.stdout
データフレームdfのカラムcol毎の標準偏差	df.groupby(col).std()
リストiterableをクラスCのインスタンスに変換する	C._make(iterable)  # issubclass(C, tuple)
リストxdataとリストydataについての散布図をダークシアグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
ミスティローズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mistyrose')
ラベンダーブラッシュ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lavenderblush')
ブランチドアーモンド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
s全体をパターンpatternにマッチさせる	re.fullmatch(pattern, s)
リストxdataとリストydataについて破線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
散布図にブランチドアーモンド色のマーカーを使う	plt.plot(xdata, ydata, c='blanchedalmond')
リストxdataとリストydataについてダークオレンジ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
xの逆余弦	math.acos(x)
日時dtを浮動小数点数に変換する	dt.timestamp()
xの小数点以下'2'桁までを表示する	print(':.2f'.format(x))
日時dtをn分前に戻す	dt - datetime.timedelta(minutes=n)
折れ線グラフのマーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
アンティークホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='antiquewhite')
ダークグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
リストxdataとリストydataの折れ線グラフに、大きさnの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markersize=n)
データフレームdfのリストalistカラムが正規分布からどの程度、歪んでいるか見る	df[alist].kurt()
リストxdataとリストydataについてローングリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をオールドレースに設定する	plt.plot(xdata, ydata, color='oldlace')
TYPE2=Person;$$クラスがTYPE2=Person;$$2クラスのサブクラスか調べる	issubclass(TYPE, TYPE2)
リストxdataとリストydataについて破線グラフを描画して、その色をグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='green')
ガンマ関数	math.gamma(x)
イエローグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='yellowgreen')
データフレームdfをJSONLファイルfilenameに保存する	df.to_csv(filename, sep='\t')
散布図にミッドナイトブルー色のマーカーを使う	plt.plot(xdata, ydata, c='midnightblue')
データフレームdfとデータフレームdf2をカラムcolをキーにして外部結合する	pd.merge(df, df2, on=col, how='outer')
赤い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='r')
リストxdataとリストydataについてオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orchid')
リストxdataとリストydataの折れ線グラフに三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
データフレームdfから重複を残さず、削除する	df.drop_duplicates(keep=False)
リストxdataをダークシアン色のヒストグラムで描画する	plt.hist(xdata, color='darkcyan')
タプルatupleの要素をソートする	sorted(atuple)
リストxdataとリストydataについての散布図をホワイトスモーク色で描画する	plt.plot(xdata, ydata, c='whitesmoke')
グラフ中の文字化けを防ぐ	sns.set(font='IPAexGothic')
辞書adictに文字列elementをkeyとして加える	adict[key] = element
青い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
リストxdataとリストydataについての散布図に黒い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
nにn2を足して代入する	n += n2
リストxdataとリストydataについての散布図をネイビー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='navy', alpha=0.5)
デックdeqの先頭にリストiterableの各要素を追加する	deq.extendleft(iterable)
折れ線グラフの色をグリーンに設定する	plt.plot(xdata, ydata, color='green')
nをn2だけ左シフトする	n << n2
アヤメのデータセットをロードする	sns.load_dataset('iris')
破線グラフの色をピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pink')
散布図にオリーブ色のマーカーを使う	plt.plot(xdata, ydata, c='olive')
リストxdataとリストydataについて散布図を描画して、マーカーの色をバイオレットに設定する	plt.plot(xdata, ydata, c='violet')
データフレームdfのカラムcolの尖度	df[col].skew()
リストxdataとリストydataについて散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
オブジェクトobjのハッシュ値	hash(obj)
リストxdataとリストydataについてライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, c='mediumaquamarine')
ダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D')
リストalistのn番目からn2番目までの部分	alist[n:n2]
散布図にスチールブルー色のマーカーを使う	plt.plot(xdata, ydata, c='steelblue')
nをn2で割った余りをnに代入する	n %= n2
データフレームdfをカラムcolによって破壊的にソートする	df.sort_values(by=col, inplace=True)
空のカウンタを新しく作って、Xに代入する	X = collections.Counter()
リストxdataとリストydataについての散布図をアイボリー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
ダークレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
全ての小文字	string.ascii_lowercase
ダークゴールデンロッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をマルーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
sの長さ	len(s)
Pythonパスの一覧	sys.path
リストxdataとリストydataについての散布図を黄色色で描画する	plt.plot(xdata, ydata, c='yellow')
リストxdataとリストydataについて破線グラフを描画して、その色をシエナに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
折れ線グラフの色をスプリンググリーンに設定する	plt.plot(xdata, ydata, color='springgreen')
リストxdataを赤色のヒストグラムで描画する	plt.hist(xdata, color='red')
ファイルfilenameをバイナリ書き込みモードでオープンする]	open(filename, mode='wb')
数式として、eの積分を求める	sympy.integrate(e)
現在が何分か知る	datetime.date.today().minite
サンディーブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='sandybrown')
ダークサーモン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darksalmon')
リストxdataとリストydataについてチョコレート色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
散布図にダークレッド色のマーカーを使う	plt.plot(xdata, ydata, c='darkred')
リストxdataとリストydataについての散布図をモカシン色で描画する	plt.plot(xdata, ydata, c='moccasin')
オプションで、インデックスを自動的な連番に設定する	index_col = None
リストxdataをシエナ色のヒストグラムで描画する	plt.hist(xdata, color='sienna')
リストxdataとリストydataについての散布図にsという凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
タン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='tan')
nからn2の範囲のヒストグラムを用いてリストxdataを描画する	plt.hist(xdata, range=(n, n2))
破線グラフの色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
折れ線グラフの右三角マーカーを青くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
折れ線グラフを描画する	plt.plot(xdata, ydata)
オプションで、バイナリ書き込みモードに設定する	mode = 'wb'
リストxdataとリストydataについて散布図を描画して、マーカーの色をピーチパフに設定する	plt.plot(xdata, ydata, c='peachpuff')
リストxdataをロイヤルブルー色のヒストグラムで描画する	plt.hist(xdata, color='royalblue')
破線グラフの色をカデットブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
ライトグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
データフレームdfのリストalistカラムの空文字をドロップする	df[alist].replace('', np.nan).dropna()
折れ線グラフの色をダークオレンジに設定する	plt.plot(xdata, ydata, color='darkorange')
リストiterableを集合に変換する	set(iterable)
リストxdataとリストydataについてスラグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
リストxdataとリストydataについて破線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークオレンジに設定する	plt.plot(xdata, ydata, color='darkorange')
文字列elementの出力を改行なしに行う	print(obj, end='')
osモジュールをインポートする	import os
JSON形式のsを読み込む	json.loads(s)
シャルトルーズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='chartreuse')
リストxdataとリストydataについて散布図を描画して、マーカーの色をブルーバイオレットに設定する	plt.plot(xdata, ydata, c='blueviolet')
リストxdataをスノー色のヒストグラムで描画する	plt.hist(xdata, color='snow')
seabornのデフォルトを適用する	sns.set()
ラベンダーブラッシュ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
データ列dsの値が欠損値か調べる	ds.isna()
xの正接	math.tan(x)
dfのcolがxでない行をフィルタする	df[df[col] == x]
数式として、eを簡略にする	sympy.sympify(e)
グラフにx=0の破線を付ける	plt.axvline(x=0, linestyle='dashed')
arrayをビン分割する	pd.cut(array, alist)
表データをインポートする	import pandas as pd
rangeの無限バージョン	itertools.count(start=n, step=n2)
リストalistの要素を昇順にソートする	sorted(alist, reverse=True)
標準出力のバッファをフラッシュする	sys.stdout.flush()
sの片仮名を平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
ダークグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkgreen')
リストxdataとリストydataについてデピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
データフレームdfの数値をまとめて小数点以下n桁で丸める	df.round(n)
nとn2の積	n * n2
データフレームdfの値が欠損値か調べる	df.isna()
リストxdataとリストydataの折れ線グラフを描画して、一点鎖線に設定する	plt.plot(xdata, ydata, linestyle='dashbot')
データフレームdfを欠損値を含めてカラムcol毎にグループ化する	df.groupby(col, dropna=False)
データ列dsのsを欠損値に変換する	ds.replace(s, np.nan)
データ列dsの値をdictでまとめて置き換える	ds.replace(adict)
折れ線グラフの色をタンに設定する	plt.plot(xdata, ydata, color='tan')
Pandasで、日付データのデータ列dsをデータフレームdfのインデックスにする	df.index = pd.DatetimeIndex(ds)
リストxdataとリストydataについてミッドナイトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
リストalistを反転する	reversed(alist)
データ列dsの空文字をドロップする	ds.replace('', np.nan).dropna()
リストxdataとリストydataについて折れ線グラフを描画して、その色をピンクに設定する	plt.plot(xdata, ydata, color='pink')
グラフ中に凡例をsとs2と入れる	plt.legend([s, s2])
データフレームdfの末尾	df.tail()
ネイピア数	math.e
リストxdataとリストydataの点線グラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dotted', color='k')
リストxdataとリストydataについての散布図に大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
リストxdataとリストydataについて折れ線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(xdata, ydata, color='rebeccapurple')
リストxdataとリストydataの折れ線グラフに、黄色い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
リストxdataとリストydataについての散布図をスカイブルー色で描画する	plt.plot(xdata, ydata, c='skyblue')
ゴーストホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='ghostwhite')
実線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='solid', color='k')
リストiterableをsで連結する	s.join(map(str, iterable))
ピーチパフ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='peachpuff')
スノー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='snow')
サンディーブラウン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='sandybrown')
散布図にバツマーカーを使う	plt.plot(xdata, ydata, marker='x')
sの先頭からs2を探す	s.find(s2)
ダークカーキ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkkhaki')
ハリウッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='burlywood')
データフレームdfの分散	df.var()
散布図にライトグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='lightgreen')
データフレームdfをカラムcol毎にグループ化して、個数を求める	df.groupby(col).count()
nマイナスn2	n - n2
破線グラフの色をパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='purple')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、最大値	df.groupby([col, col2], as_index=False).max()
リストxdataとリストydataについて破線グラフを描画して、その色を貝殻に設定する	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
nがn2の倍数でないか調べる	n % n2 != 0
辞書adictをコピーする	adict.copy()
リストxdataとリストydataについて散布図を描画する	plt.scatter(xdata, ydata)
リストxdataとリストydataについての散布図をマゼンタ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
nがn2より小さいか調べる	n < n2
データフレームdfとデータフレームdf2を縦方向に繋ぐ	pd.concat([df, df2])
リストxdataをミディアムパープル色のヒストグラムで描画する	plt.hist(xdata, color='mediumpurple')
破線グラフの色を耐火レンガに設定する	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
日時dtをn年前に戻す	dt - datetime.timedelta(years=n)
リストxdataとリストydataについての散布図をライトスレイグレー色で描画する	plt.plot(xdata, ydata, c='lightslategrey')
破線グラフの色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
ハニーデュー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='honeydew')
n個の集まりからn2個重複なく選ぶ方法	math.comb(n, n2)
リストxdataとリストydataについてグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gray')
ファイルfilenameからの入力ストリームを使う	open(filename)
本日が月曜日か調べる	datetime.datetime.today().weekday() == 0
破線グラフの色をビスクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
リストxdataとリストydataの青い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='b')
リストxdataとリストydataについて散布図を描画して、マーカーの色をモカシンに設定する	plt.plot(xdata, ydata, c='moccasin')
sが全て英数字か調べる	s.isalnum()
Pandasで、フォーマットfmtでsを日付データに変換する	pd.to_datetime(s, format=fmt)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトシアンに設定する	plt.plot(xdata, ydata, c='lightcyan')
データフレームdfのカラムcolとカラムcol2のヒートマップを描画する	sns.heatmap(df[[col, col2]].corr())
リストxdataとリストydataについてホワイトスモーク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
リストxdataを小麦色のヒストグラムで描画する	plt.hist(xdata, color='wheat')
折れ線グラフのポイントマーカーを青くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
ブランチドアーモンド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='blanchedalmond')
タプルatupleをn倍する	atuple * n
ゴーストホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='ghostwhite')
チョコレート色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='chocolate')
ライトゴールドロディイエロー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
散布図にカデットブルー色のマーカーを使う	plt.plot(xdata, ydata, c='cadetblue')
折れ線グラフの色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, color='mediumseagreen')
リストxdataとリストydataについてのヒストグラムをふたつ並べて描画する	plt.hist([xdata, ydata], color=['b', 'r'])
アンティークホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='antiquewhite')
リストxdataとリストydataについて破線グラフを描画して、その色をローングリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をクリムゾンに設定する	plt.plot(xdata, ydata, color='crimson')
nまたはn2	n or n2
データフレームdfをリストalistで指定されたカラムによってソートして、更新する	df.sort_values(by=alist, inplace=True)
折れ線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategrey')
リストxdataとリストydataについての散布図をダークシアン色で描画する	plt.plot(xdata, ydata, c='darkcyan')
折れ線グラフの色をフローラルホワイトに設定する	plt.plot(xdata, ydata, color='floralwhite')
ライムグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
乱数シードを初期化する	random.seed()
リストxdataとリストydataについての散布図をダークゴールデンロッド色で描画する	plt.plot(xdata, ydata, c='darkgoldenrod')
Pandasで、データフレームdfのcollを日付データに変換する	pd.to_datetime(df[col])
リストxdataとリストydataについてグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='grey')
文字列elementがタプルatupleに含まれるか調べる	element in atuple
リストxdataをライトシアン色のヒストグラムで描画する	plt.hist(xdata, color='lightcyan')
データフレームdfのカラムcol中に文字列valueと文字列value2がいくつあるか数える	df[col].isin([value, value2]).sum()
リストxdataのヒストグラムをnからn2の範囲で描画する	plt.hist(xdata, range=(n, n2))
s中のASCII限定のパターンpatternによる全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
リストalist内の要素が少なくともひとつ真か調べる	any(alist)
グレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='gray')
リストxdataとリストydataの赤い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='r')
折れ線グラフの色をロージーブラウンに設定する	plt.plot(xdata, ydata, color='rosybrown')
リストxdataをダークマゼンタ色のヒストグラムで描画する	plt.hist(xdata, color='darkmagenta')
リストxdataとリストydataについての散布図をクリムゾン色で描画する	plt.plot(xdata, ydata, c='crimson')
リストalistの重複を取り除く	sorted(set(alist), key=alist.index)
nにn2をかける	n * n2
シルバー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='silver')
整数nを二進表現に変換する	bin(n)
nの約数を列挙する	"[i for i in range(1, int(n**0.5)+1) if n % i == 0] + [n//i for i in range(1,
                                                                          int(n**0.5)+1) if n % i == 0 and i != n // i].reverse()"
データフレームdfのリストalistカラムの相関行列	df[alist].corr()
セットaset⊂セットaset2	aset < aset2
リストalistをnからナンバリングする	enumerate(alist, start=n)
一点鎖線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
散布図に赤い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='r')
keyが辞書adictに存在しないとき、文字列elementを追加する	adict.setdefault(key, element)
リストxdataとリストydataの破線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
一点鎖線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
s中のASCII限定のパターンpatternよって置き換える	re.sub(pattern, repl, s, flags=re.ASCI)
折れ線グラフの右三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
リストxdataとリストydataについて折れ線グラフを描画して、その色をアザミに設定する	plt.plot(xdata, ydata, color='thistle')
リストxdataとリストydataについての散布図をダークレッド色で描画する	plt.plot(xdata, ydata, c='darkred')
n年n2月n3日の日付	datetime.date(year=n, month=n2, day=n3)
リストxdataとリストydataについての散布図を貝殻色で描画する	plt.plot(xdata, ydata, c='seashell')
xをx2で割る	x / x2
xとx2から成る複素数	complex(x, x2)
真	True
ダークバイオレット色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkviolet')
リストxdataとリストydataについて破線グラフを描画して、その色をスノーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='snow')
オブジェクトobjのメモリビュー	memoryview(obj)
sのの中で複数行対応のパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s, flags=re.MULTILINE)
ファイル名filenameがCSVファイルか調べる	filename.endswith('.csv')
オプションで、読み込むシートの名前をnamesに設定する	sheet_name = names
折れ線グラフの色をミントクリームに設定する	plt.plot(xdata, ydata, color='mintcream')
デックdeqの先頭に文字列elementを追加する	deq.appendleft(element)
破線グラフの色を赤に設定する	plt.plot(xdata, ydata, linestyle='dash', color='red')
データフレームdfの欠損値を最頻値で埋める	df.fillna(df.mode().iloc[0])
カウンタaCounter∪カウンタaCounter2	aCounter | aCounter2
折れ線グラフの色を青くする	plt.plot(xdata, ydata, color='b')
ライトグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgray')
ミディアムスプリンググリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumspringgreen')
アイボリー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
ドジャーブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='dodgerblue')
データフレームdfのカラムcolの文字列長を列として使う	df[col].str.len()
リストxdataとリストydataについて折れ線グラフを描画して、その色をネイビーに設定する	plt.plot(xdata, ydata, color='navy')
散布図に赤い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='r')
リストxdataとリストydataについて散布図を描画して、四角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストxdataとリストydataについてライムグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
文字列elementと文字列element2をsで区切って表示する	print(element, element2, sep=s)
整数nの八進表現	oct(n)
アクア色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='aqua')
折れ線グラフの色をペールグリーンに設定する	plt.plot(xdata, ydata, color='palegreen')
リストxdataとリストydataについての散布図に黒い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
データフレームdfのリストalistカラムの中央値	df[alist].median()
オリベドラブ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='olivedrab')
オプションで、書き込みモードを使う	mode = 'w'
xの小数点以下を丸める	round(x)
3数n,n2,n3の最大公約数	math.gcd(n, n2, n3)
リストxdataをディムグレー色のヒストグラムで描画する	plt.hist(xdata, color='dimgrey')
散布図にライムグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='limegreen')
リストalistをn回、連結する	alist * n
リストxdataとリストydataについて散布図を描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
パープル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='purple')
スクリプト名を得る	sys.argv[0]
本日が木曜日か調べる	datetime.datetime.today().weekday() == 3
ライトグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgrey')
リストxdataとリストydataについての散布図をターコイズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
二次元タプルatupleをフラット化する	sum(atuple)
折れ線グラフのバツマーカーを赤くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
カラーコードrgbの左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
n2分のn	n / n2
リストxdataとリストydataについての散布図をカデットブルー色で描画する	plt.plot(xdata, ydata, c='cadetblue')
白い折れ線グラフを描画する	plt.plot(xdata, ydata, color='w')
リストxdataとリストydataの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted')
散布図にカラーコードrgbの四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c=rgb)
データ列dsのユニークな値の個数	ds.nunique()
ミディアムバイオレットレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumvioletred')
リストxdataとリストydataについて折れ線グラフを描画して、その色をビスクに設定する	plt.plot(xdata, ydata, color='bisque')
リストxdataとリストydataについての散布図をライトグレー色で描画する	plt.plot(xdata, ydata, c='lightgray')
リストxdataをホワイト色のヒストグラムで描画する	plt.hist(xdata, color='white')
データフレームdfをリストalistで指定されたカラムによって昇順に破壊的にソートする	df.sort_values(by=alist, ascending=True, inplace=True)
ライトコーラル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
nからn2までの整数列	list(range(n, n2+1))
リストxdataとリストydataについての散布図をダークオーキッド色で描画する	plt.plot(xdata, ydata, c='darkorchid')
コーンズシルク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='cornsilk')
データフレームdfのカラムcolを10の位で丸めて、整数型にする	df[col].round(-1).astype(int)
リストxdataとリストydataの破線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
破線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dashed', color='k')
辞書adictからkeyの値か、もしくは文字列elementを得る	adict.get(key, element)
黒い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='k')
リストxdataをフローラルホワイト色のヒストグラムで描画する	plt.hist(xdata, color='floralwhite')
折れ線グラフの右三角マーカーを黒くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
リストxdataについてのヒストグラムを描画する際に、透明度をxに設定する	plt.hist(xdata, alpha=x)
リストxdataとリストydataについての散布図をブラウン色で描画する	plt.plot(xdata, ydata, c='brown')
リストxdataとリストydataについて散布図を描画して、マーカーの色をシエナに設定する	plt.plot(xdata, ydata, c='sienna')
文字列elementがリストalistの要素か調べる	element in alist
散布図にライトゴールドロディイエロー色のマーカーを使う	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
クリムゾン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='crimson')
データフレームdfを小数点以下n桁で丸める	df.round(n)
ファイルfilenameが存在するか調べる	os.path.exists(filename)
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトサーモンに設定する	plt.plot(xdata, ydata, color='lightsalmon')
リストalistのn番目以降の部分を取り出す	alist[n:]
破線グラフの色をインディゴに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
リストxdataとリストydataについてシエナ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sienna')
データフレームdfのリストalistカラムの欠損値を中央値に設定する	df[alist].fillna(df[alist].median())
折れ線グラフを点線に設定する	plt.plot(xdata, ydata, linestyle='dotted')
折れ線グラフの色をブルーバイオレットに設定する	plt.plot(xdata, ydata, color='blueviolet')
データフレームdfのリストalistカラムの値を正規表現patternでまとめてsに置き換える	df[alist].replace(pattern, s, regex=True)
リストxdataとリストydataについて破線グラフを描画して、その色をミスティローズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
データフレームdf中の欠損値の合計を数える	df.isna().sum()
折れ線グラフにバツマーカーを使う	plt.plot(xdata, ydata, marker='x')
日付adateからn週間分、減算する	adate - datetime.timedelta(weeks=n)
リストxdataとリストydataについて破線グラフを描画して、その色をペールグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
表データをインポートする	import pandas as pd
リストxdataとリストydataの黒い折れ線グラフを描画する	plt.plot(xdata, ydata, color='k')
リストxdataとリストydataについて折れ線グラフを描画して、その色をパープルに設定する	plt.plot(xdata, ydata, color='purple')
データフレームdf中のカラムcolをn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
リストxdataとリストydataについての散布図をデピンク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
リストxdataとリストydataについての散布図をトマト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
nが3で割り切れるか調べる	n % 3 == 0
リストxdataとリストydataについての散布図をマゼンタ色で描画する	plt.plot(xdata, ydata, c='magenta')
sのnからn2までの間でs2を探す	s.find(s2, start=n, end=n2)
辞書adictを値を含めてコピーする	{k: copy.copy(v) for k, v in adict.items()}
リストxdataとリストydataについての散布図をライトイエロー色で描画する	plt.plot(xdata, ydata, c='lightyellow')
整数nを半分にする	n //= 2
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークスラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategray')
日時dtが何曜日か知る	dt.weekday()
日時dtと日時dt2の時間差	dt - dt2
ベクトルxとx2のユークリッド距離	math.dist(x, x2)
リストxdataをカデットブルー色のヒストグラムで描画する	plt.hist(xdata, color='cadetblue')
ミディアムターコイズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumturquoise')
sの両端から空白を取り除く	s.strip()
リストxdataとリストydataについて折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategray')
リストxdataとリストydataについてフクシア色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
散布図にレモンシフォン色のマーカーを使う	plt.plot(xdata, ydata, c='lemonchiffon')
破線グラフの色をゴーストホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
日付adateををn日後に進める	adate + datetime.timedelta(days=n)
xの印字可能な文字列	ascii(x)
リストxdataとリストydataについての散布図をパープル色で描画する	plt.plot(xdata, ydata, c='purple')
リストxdataとリストydataについて散布図を描画して、マーカーの色をオレンジに設定する	plt.plot(xdata, ydata, c='orange')
リストxdataとリストydataについての散布図をタン色で描画する	plt.plot(xdata, ydata, c='tan')
sのn番目がs2で始まるか調べる	s.startswith(s2, n)
xの複素数	complex(x)
折れ線グラフの色をミディアムターコイズに設定する	plt.plot(xdata, ydata, color='mediumturquoise')
折れ線グラフの下三角マーカーを赤くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
折れ線グラフの色をコーラルに設定する	plt.plot(xdata, ydata, color='coral')
シルバー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='silver')
リストxdataとリストydataについて散布図を描画して、マーカーの色をシルバーに設定する	plt.plot(xdata, ydata, c='silver')
リストxdataとリストydataについての散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
xを切り下げる	math.floor(x)
データフレームdfからカテゴリデータのカラムの名前の一覧を使う	df.select_dtypes('object').columns
sを黒色にする	f'\033[30m{s}\033[0m'
辞書adictのkeyを文字列elementに設定する	adict[key] = element
ディープスカイブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='deepskyblue')
日時dtと日時dt2の時間差が何秒か知る	(dt - dt2).total_seconds()
データフレームdfのカラムcolが何月か見る	df[col].dt.month
点線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
全ての空白文字	string.whitespace
データ列をインポートする	import pandas as pd
破線グラフの色をダークシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
リストxdataとリストydataについて散布図を描画して、マーカーの色をホワイトに設定する	plt.plot(xdata, ydata, c='white')
リストxdataとリストydataについて破線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
リストxdataとリストydataについてインディアンレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indianred')
折れ線グラフの色をレベッカパープルに設定する	plt.plot(xdata, ydata, color='rebeccapurple')
n進sを整数に変換する	int(s, n)
カラーコードrgbの大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストxdataをペルー色のヒストグラムで描画する	plt.hist(xdata, color='peru')
データフレームdfのカラムcolの各データ値の出現数	df[col].value_counts()
sの先頭でパターンpatternにマッチするか見る	re.match(pattern, s)
辞書adictを階層化する	collections.ChainMap(adict)
リストiterableとリストiterable2を連結する	itertools.chain(iterable, iterable2)
データフレームdfをカラムcolによってソートして、NaNを先頭にする	df.sort_values(by=col, na_position='first')
データフレームdfのカラムcolからユニークな要素を抽出し、リスト化する	df[col].unique().tolist()
ダークスレートブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkslateblue')
arrayを中央値でビン分割する	pd.qcut(array, 2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, c='mediumspringgreen')
リストxdataとリストydataについてアリスブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
sを長さnでパディングする	s.zfill(n)
リストxdataとリストydataの折れ線グラフに、赤いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')
ライトブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
リストxdataとリストydataについての散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
データフレームdf中のカラムcolとカラムcol2に重複があれば、削除する	df.drop_duplicates(subset=col)
ビスク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='bisque')
データ列dsを丸める	ds.round()
グリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='green', alpha=0.5)
Pandasのバージョンを見る	print(pd.__version__)
日時dtが日時dt2より前か調べる	dt < dt2
リストxdataとリストydataについて折れ線グラフを描画して、その色をフォレストグリーンに設定する	plt.plot(xdata, ydata, color='forestgreen')
データ列dsがどの程度、分散しているか見る	ds.var()
ミディアムスプリンググリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumspringgreen')
データフレームdfからランダムにn行を抽出する	df.sample(n)
折れ線グラフの左三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
データフレームdfのカラムcolの秒	df[col].dt.second
何回まで再帰ができるか知る	sys.getrecursionlimit()
リストxdataとリストydataの折れ線グラフを描画して、破線に設定する	plt.plot(xdata, ydata, linestyle='dashed')
mathをインポートする	import math
アルファベットからひとつランダムに選ぶ	random.choice(string.ascii_uppercase)
JSON形式のsをデータに変換する	json.loads(b.decode('unicode-escape'))
リストxdataとリストydataについての散布図をパウダーブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
グラフの見た目を良くする	import seaborn as sns
スレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
最初のコマンド引数を得る	sys.argv[1]
数式として、eを簡単にする	sympy.sympify(e)
カウンタaCounterの項目数	len(aCounter)
折れ線グラフの左三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
破線グラフの色をターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
リストxdataとリストydataについての散布図をイエローグリーン色で描画する	plt.plot(xdata, ydata, c='yellowgreen')
トマト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='tomato')
散布図にライトスカイブルー色のマーカーを使う	plt.plot(xdata, ydata, c='lightskyblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をゲインズボロに設定する	plt.plot(xdata, ydata, c='gainsboro')
ライトスレイグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(xdata, ydata, color='blueviolet')
折れ線グラフの大バツマーカーを緑色に設定する	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
リストxdataをダーク・スラテグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkslategrey')
リストxdataとリストydataの折れ線グラフに、黄色い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
リストxdataとリストydataについての散布図をディムグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
破線グラフの色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
sの英大文字と英小文字を交換する	s.swapcase()
スクリプトファイルのディレクトリ名	os.path.dirname(os.path.abspath(__file__))
ホワイトスモーク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
リストxdataとリストydataについてフォレストグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
散布図にオリベドラブ色のマーカーを使う	plt.plot(xdata, ydata, c='olivedrab')
データフレームを表示するとき、表示可能な列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
シアン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='cyan')
ファイルfilenameを追加できるようにオープンする]	open(filename, mode='a')
ライム色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lime', alpha=0.5)
標準入力から1行だけ読み込んで、改行を取り除く	sys.stdin.readline().rstrip()
タプルatupleを引数として展開して表示する	print(*atuple, sep=',')
sを走査し、パターンpatternにASCII限定としてマッチするか見る	re.search(pattern, s, flags=re.ASCI)
ファイルfilenameからディレクトリ名を使う	os.path.dirname(filename)
ライトイエロー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightyellow')
リストxdataとリストydataについてビスク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bisque')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
タプルatupleの要素を逆順にする	atuple[::-1]
リストxdataとリストydataについての散布図をスノー色で描画する	plt.plot(xdata, ydata, c='snow')
全ての数字	string.digits
ホワイトスモーク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
スチールブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
ナバホホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='navajowhite')
散布図にダーク・スラテグレー色のマーカーを使う	plt.plot(xdata, ydata, c='darkslategrey')
ライトスレイグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightslategray')
リストxdataとリストydataの折れ線グラフに、線幅nの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
ロイヤルブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='royalblue')
リストxdataとリストydataについての散布図をゴールド色で描画する	plt.plot(xdata, ydata, c='gold')
散布図にダークカーキ色のマーカーを使う	plt.plot(xdata, ydata, c='darkkhaki')
破線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
