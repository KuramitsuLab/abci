グラフ中のタイトルをsに設定する	plt.title(s)
リストxdataをビスク色のヒストグラムで描画する	plt.hist(xdata, color='bisque')
散布図にダークオリーブグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='darkolivegreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色を淡いピンク色に設定する	plt.plot(xdata, ydata, c='lightpink')
破線グラフの色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='grey')
ミッドナイトブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='midnightblue')
フクシア色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='fuchsia')
日時dtの時刻	dt.time()
オブジェクトobjがオブジェクトobj2か調べる	obj == obj2
リストxdataとリストydataについての散布図をシーグリーン色で描画する	plt.plot(xdata, ydata, c='seagreen')
折れ線グラフの色をコーンズシルクに設定する	plt.plot(xdata, ydata, color='cornsilk')
リストxdataをダークカーキ色のヒストグラムで描画する	plt.hist(xdata, color='darkkhaki')
リストxdataとリストydataについての散布図をオーキッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
折れ線グラフの色をフォレストグリーンに設定する	plt.plot(xdata, ydata, color='forestgreen')
sのn番目とn2番目の間にs2が含まれるか調べる	s.find(s2, start=n, end=n2) != -1
リストiterableとリストiterable2の全組み合わせ	list(itertools.product(iterable, iterable2))
空のリスト	[]
空の両端キューを新しく作って、Xに代入する	X = collections.deque()
リストxdataとリストydataについて散布図を描画して、マーカーの色をサドルブラウンに設定する	plt.plot(xdata, ydata, c='saddlebrown')
ブルーバイオレット色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='blueviolet')
リストalistのn番目の	alist[n]
日付adateが日曜日か調べる	adate.weekday() == 6
モカシン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
フクシア色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='fuchsia')
タプルatupleのn番目からn2番目までの部分	atuple[n:n2]
ミディアムスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
リストxdataとリストydataについてマゼンタ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='magenta')
赤い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='r')
sを赤色にする	f'\033[31m{s}\033[0m'
2×3の空配列を作る	np.empty((2, 3))
ペルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='peru')
xとx2の両方をnに設定する	x = x2 = n
日時dtの時間数	dt.hour
sの中からパターンpatternに大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
空列	[]
データ列ds中にある文字列valueと文字列value2の合計を数える	ds.isin([value, value2]).sum()
要素ひとつのりスト	[element]
ミディアムシアグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumseagreen')
eのx乗	math.exp(x)
ファイルfilenameをEUCでオープンする]	open(filename, encoding='euc_jp')
日時dtををn分後に進める	dt + datetime.timedelta(minutes=n)
リストxdataとリストydataについてミディアムパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
折れ線グラフの色をゴールデンロッドに設定する	plt.plot(xdata, ydata, color='goldenrod')
リストxdataとリストydataについて破線グラフを描画して、その色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
マゼンタ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='magenta')
nが負の数か調べる	n < 0
データフレームdfのカラムcolを配列として抽出する	df[col].values
耐火レンガ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
タプルatupleの先頭のn要素を取り除く	atuple[n:]
折れ線グラフの色をハリウッドに設定する	plt.plot(xdata, ydata, color='burlywood')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミントクリームに設定する	plt.plot(xdata, ydata, c='mintcream')
リストxdataとリストydataについてブラック色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='black')
nとn2のコンビネーション	math.comb(n, n2)
リストxdataとリストydataについての散布図をライトコーラル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
散布図にレベッカパープル色のマーカーを使う	plt.plot(xdata, ydata, c='rebeccapurple')
折れ線グラフの色をインディアンレッドに設定する	plt.plot(xdata, ydata, color='indianred')
データフレームdfのn行までを抽出する	df[:n]
シエナ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='sienna')
リストxdataとリストydataについての散布図をオールドレース色で描画する	plt.plot(xdata, ydata, c='oldlace')
ダークオレンジ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
ライトイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
ライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
リストxdataとリストydataについて破線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
keyが辞書adict上で定義済みか調べる	key in adict
サドルブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
データフレームdfをインデックスによって降順でソートする	df.sort_index(ascending=False)
ミントクリーム色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mintcream')
ダークレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkred')
オリベドラブ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='olivedrab')
データフレームdfの第三四分位数	df.quantile(0.75)
耐火レンガ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='firebrick')
ユーザの入力を読み取る	input()
データフレームdfのカラム一覧	df.info()
リストxdataとリストydataについて散布図を描画して、マーカーの色をスカイブルーに設定する	plt.plot(xdata, ydata, c='skyblue')
散布図にパウダーブルー色のマーカーを使う	plt.plot(xdata, ydata, c='powderblue')
折れ線グラフの色をハニーデューに設定する	plt.plot(xdata, ydata, color='honeydew')
リストxdataとリストydataについての散布図をローングリーン色で描画する	plt.plot(xdata, ydata, c='lawngreen')
整数nを八進文字列に変換する	oct(n)[2:]
ライム色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lime')
レベッカパープル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='rebeccapurple')
ミディアムシアグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumseagreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, color='mediumseagreen')
線幅nの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
データ列dsの欠損値を最小値で埋める	ds.fillna(ds.min())
xの逆正接	math.atan(x)
sの先頭でパターンpatternに複数行対応としてマッチするか見る	re.match(pattern, s, flags=re.MULTILINE)
紺碧色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='azure')
リストxdataとリストydataについての散布図をアリスブルー色で描画する	plt.plot(xdata, ydata, c='aliceblue')
折れ線グラフの色をミディアムパープルに設定する	plt.plot(xdata, ydata, color='mediumpurple')
グラフの背景色を暗くする	sns.set(style='darkgrid')
JSONL形式のファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
散布図にゴーストホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='ghostwhite')
リストxdataとリストydataについて破線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
散布図にライトグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='lightseagreen')
ファイルfilenameをsの示すエンコーディングでオープンする]	open(filename, encoding=s)
データフレームdfの欠損値を直前の値で埋める	df.fillna(method='ffill')
ダークレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkred')
リストxdataとリストydataについて破線グラフを描画して、その色をカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
ヒストグラムの透明度をxに設定する	plt.hist(xdata, alpha=x)
スプリンググリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
データフレームdf中のカラムcolをビン分割する	pd.cut(df[col], alist)
リストxdataとリストydataについて破線グラフを描画して、その色をオリベドラブに設定する	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
nの各桁の総和	sum(map(int, str(n)))
散布図に赤いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='r')
リストxdataとリストydataについてアイボリー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ivory')
arrayを等間隔でn個にビン分割する	pd.cut(array, n)
紺碧色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='azure')
日時dtが金曜日か調べる	dt.weekday() == 4
整数nの二進表現	bin(n)
折れ線グラフの色をブラウンに設定する	plt.plot(xdata, ydata, color='brown')
リストxdataとリストydataについての散布図をホットピンク色で描画する	plt.plot(xdata, ydata, c='hotpink')
グラフ中に枠なしの凡例を入れる	plt.legend(frameon=False)
リストxdataとリストydataについて破線グラフを描画して、その色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
xをx2で整数除算する	x // x2
データフレームdfをリストalistで指定されたカラムによって昇順にソートして、更新する	df.sort_values(by=alist, ascending=True, inplace=True)
s中のパターンpatternによる全てのマッチを使う	re.findall(pattern, s)
sの全角数字を半角数字に変換する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
n2行n列の二次元リスト	[[0] * n for _ in range(n2)]
ダークオーキッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
データ列dsが正規分布からどの程度、尖っているか見る	ds.skew()
折れ線グラフの色をオールドレースに設定する	plt.plot(xdata, ydata, color='oldlace')
それぞれnとn2をxとx2に代入する	x, x2 = n, n2
ターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
f全体を行単位で分割して読み込む	f.readlines()
データフレームdfのリストalistカラムの欠損値を中央値で埋める	df[alist].fillna(df[alist].median())
破線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
オプションで、昇順にする	ascending = True
日時dtををn年後に進める	dt + datetime.timedelta(years=n)
折れ線グラフの三角マーカーを青くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
オプションで、エンコーディングをEUCに設定する	encoding = 'euc_jp'
データフレームdfから型tyのカラムを抽出する	df.select_dtypes(ty)
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
データフレームdfのカラムcol中にある文字列valueの合計を数える	df[col].isin([value]).sum()
データフレームdfを10の位で丸めて、整数型にする	df.round(-1).astype(int)
二進sをバイト列に変換する	int(s, 2).to_bytes(length=2, byteorder='big')
sの右側からs2を取り除く	s.rstrip(s2)
ファイルfilenameを絶対パスに変換する	os.path.abspath(filename)
散布図にロイヤルブルー色のマーカーを使う	plt.plot(xdata, ydata, c='royalblue')
sをs2で区切る	s.split(s2)
現在の作業ディレクトリ	os.getcwd()
リストxdataとリストydataの折れ線グラフを描画して、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
折れ線グラフの色を耐火レンガに設定する	plt.plot(xdata, ydata, color='firebrick')
デックdeq中の文字列elementの数を数える	deq.count(element)
リストxdataとリストydataについて散布図を描画して、マーカーの色をピンクに設定する	plt.plot(xdata, ydata, c='pink')
散布図にダークグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='darkgreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をローングリーンに設定する	plt.plot(xdata, ydata, color='lawngreen')
リストxdataとリストydataについての散布図をカーキ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をゴールドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gold')
オブジェクトobjの参照カウントを知る	sys.getrefcount(obj)-1
データ列dsの欠損値を直前の値で埋める	ds.fillna(method='ffill')
リストxdataとリストydataについての散布図をバイオレット色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='violet', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をハニーデューに設定する	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
ライトサーモン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightsalmon')
文字列elementがセットasetのメンバーか調べる	element in aset
リストiterableから両端キューを新しく作る	collections.deque(iterable)
xの逆双曲線正接	math.atanh(x)
xが整数か調べる	x.is_integer()
折れ線グラフの色をダークオーキッドに設定する	plt.plot(xdata, ydata, color='darkorchid')
実線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='solid', color='b')
x,x2,x3をそれぞれn,n2,n3とする	x, x2, x3 = n, n2, n3
折れ線グラフの色をチョコレートに設定する	plt.plot(xdata, ydata, color='chocolate')
ユーザから入力される	input()
リストxdataとリストydataの折れ線グラフに、線幅nの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
折れ線グラフのポイントマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
リストxdataとリストydataについての散布図を淡いピンク色色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
プラットフォームの符号付きの最大整数値	sys.maxsize
ハニーデュー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
セットaset∩セットaset2	aset.intersection(aset2)
散布図にディムグレー色のマーカーを使う	plt.plot(xdata, ydata, c='dimgrey')
オブジェクトobjのクラス	type(obj)
データフレームdfのカラムcolとカラムcol2の相関行列をヒートマップで描画する	sns.heatmap(df[[col, col2]].corr())
折れ線グラフの色をシアンに設定する	plt.plot(xdata, ydata, color='cyan')
リストxdataとリストydataについて破線グラフを描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
ファイルfilenameをオープンして]、追加ストリームを使う	open(filename, mode='a')
zが無限大に近づくときのeの極限値を求める	sympy.limit(e, z, oo)
標準出力を使う	sys.stdout
リストxdataとリストydataについての散布図をベージュ色で描画する	plt.plot(xdata, ydata, c='beige')
arrayを四分位数ごとにビン分割する	pd.qcut(array, 4)
Pandasで、フォーマットでデータ列dsを日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
ディムグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
sのの中で大文字・小文字を無視したパターンpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
リストxdataとリストydataについて破線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をアクアマリンに設定する	plt.plot(xdata, ydata, color='aquamarine')
折れ線グラフの色をパウダーブルーに設定する	plt.plot(xdata, ydata, color='powderblue')
リストxdataとリストydataについて青色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blue')
データフレームを表示するとき、n行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
データフレームdfをリストalistで指定されたカラムによってソートして、NaNを先頭にする	df.sort_values(by=alist, na_position='first')
辞書adictをソートしてJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False, sort_keys=True)
グリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='green')
タプルatuple内の要素が少なくともひとつ真か調べる	any(atuple)
リストxdataとリストydataについての散布図をパールゴールデンロッド色で描画する	plt.plot(xdata, ydata, c='palegoldenrod')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(xdata, ydata, color='mediumturquoise')
リストxdataとリストydataについて散布図を描画して、sという凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストxdataとリストydataについての散布図をシアン色で描画する	plt.plot(xdata, ydata, c='cyan')
リストxdataとリストydataについての散布図を赤色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='red', alpha=0.5)
データフレームdfのリストalistカラムの第三四分位数	df[alist].quantile(0.75)
破線グラフの色をオレンジレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
リストxdataとリストydataの折れ線グラフに、大きさnの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markersize=n)
データフレームdfのカラムcolをインデックスに設定する	df.set_index(col)
リストxdataとリストydataについての散布図に赤い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
折れ線グラフの丸マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
日時dtからn月分、減算する	dt - datetime.timedelta(months=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をラベンダーに設定する	plt.plot(xdata, ydata, c='lavender')
セットasetがセットaset2の真部分集合か調べる	aset < aset2
xを論理値に変換する	bool(x)
オプションで、改行しないように設定する	end = ''
データフレームdfのカラムcolがsで終わらない行を抽出する	df[not df[col].str.endswith(s)]
リストxdataとリストydataの折れ線グラフに、赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')
nとn2の排他的論理和	n ^ n2
日付adateが金曜日か調べる	adate.weekday() == 4
リストxdataとリストydataについて散布図を描画して、マーカーの色をシアンに設定する	plt.plot(xdata, ydata, c='cyan')
リストxdataとリストydataの黄色い折れ線グラフを描画する	plt.plot(xdata, ydata, color='y')
数式として、zの平方根を求める	sympy.sqrt(z)
0から始まる無限数列	itertools.count()
点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted')
ダークグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkgray')
折れ線グラフの色をペルーに設定する	plt.plot(xdata, ydata, color='peru')
カラーコードrgbのバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
データフレームdfとデータフレームdf2を横方向にマージする	pd.merge(df, df2)
s中の大文字・小文字を無視したパターンpatternによる全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
リストxdataとリストydataについて破線グラフを描画して、その色をナバホホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
折れ線グラフの色をローングリーンに設定する	plt.plot(xdata, ydata, color='lawngreen')
ダークシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
折れ線グラフの色をブラックに設定する	plt.plot(xdata, ydata, color='black')
データフレームdfのカラムcolのユニークな値の個数	df[col].nunique()
リストxdataとリストydataについて折れ線グラフを描画して、その色をベージュに設定する	plt.plot(xdata, ydata, color='beige')
sをシアンで表示する	print(f'\033[36m{s}\033[0m')
x2に対するxの対数	math.log(x, x2)
データフレームdfの欠損値を平均値に設定する	df.fillna(df.mean())
リストxdataをダークオレンジ色のヒストグラムで描画する	plt.hist(xdata, color='darkorange')
データ列dsの日	ds.dt.day
リストxdataとリストydataについての散布図をダークマゼンタ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をタンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='tan')
リストxdataとリストydataについて折れ線グラフを描画して、その色をフローラルホワイトに設定する	plt.plot(xdata, ydata, color='floralwhite')
x,x2,x3にそれぞれn,n2,n3を代入する	x, x2, x3 = n, n2, n3
セットasetをリストに変換する	list(aset)
レモンシフォン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lemonchiffon')
ダークスラテグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkslategray')
日時dtをn日前に戻す	dt - datetime.timedelta(days=n)
折れ線グラフの色を小麦に設定する	plt.plot(xdata, ydata, color='wheat')
淡いピンク色色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightpink')
折れ線グラフに右三角マーカーを使う	plt.plot(xdata, ydata, marker='>')
リストxdataとリストydataについての散布図に赤い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='r')
リストxdataとリストydataについての散布図をダークマゼンタ色で描画する	plt.plot(xdata, ydata, c='darkmagenta')
リストxdataとリストydataについてライトシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
空の集合	set()
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, color='mediumaquamarine')
リストxdataとリストydataについてイエローグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
リストxdataとリストydataについてネイビー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navy')
散布図に黒いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='k')
セットasetが空か調べる	len(aset) == 0
ラベンダーブラッシュ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lavenderblush')
リストxdataとリストydataについて散布図を描画して、マーカーの色をシーグリーンに設定する	plt.plot(xdata, ydata, c='seagreen')
リストxdataとリストydataについての散布図をスラグレー色で描画する	plt.plot(xdata, ydata, c='slategray')
全てのアルファベット	string.ascii_letters
リストxdataをダークオーキッド色のヒストグラムで描画する	plt.hist(xdata, color='darkorchid')
リストxdataをゴールデンロッド色のヒストグラムで描画する	plt.hist(xdata, color='goldenrod')
リストxdataとリストydataの破線グラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dashed', color='k')
フローラルホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='floralwhite')
データフレームdfのリストalistカラムの欠損値を直後の値に設定する	df[alist].fillna(method='bfill')
紺碧色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='azure')
n年を日付に変換する	datetime.date(year=n, month=1, day=1)
ライム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lime')
アクアマリン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='aquamarine')
TSVファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
破線グラフの色をシャルトルーズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
データフレームdfのカラムcolが正規分布からどの程度、歪んでいるか見る	df[col].kurt()
グラフ中に凡例を(x,x2)の位置に入れる	plt.legend(loc=(x, x2))
折れ線グラフの下三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
リストxdataとリストydataについてオリベドラブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
リストxdataとリストydataについての散布図をフローラルホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
arrayをリストalistを境界値としてビン分割する	pd.cut(array, alist)
サドルブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='saddlebrown')
黄色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellow')
ゲインズボロ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='gainsboro')
データフレームdfのリストalistカラムの最頻値の出現回数	df[alist].freq()
リストxdataとリストydataについてドジャーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')
淡いピンク色色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
タプルatupleのn番目以降の部分を取り出す	atuple[n:]
ダークゴールデンロッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkgoldenrod')
リストxdataとリストydataについて破線グラフを描画して、その色を黄色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellow')
破線グラフの色をバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='violet')
n個のものからn2個取り出したときの並べ方の総数	math.perm(n, n2)
破線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dashed', color='r')
リストxdataとリストydataについて折れ線グラフを描画して、その色をアクアに設定する	plt.plot(xdata, ydata, color='aqua')
xの双曲線余弦	math.cosh(x)
データフレームdfをカラムcolによって昇順に破壊的にソートする	df.sort_values(by=col, ascending=True, inplace=True)
nかつn2	n and n2
散布図にロージーブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='rosybrown')
リストxdataをパールゴールデンロッド色のヒストグラムで描画する	plt.hist(xdata, color='palegoldenrod')
破線グラフの色をスノーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='snow')
xとx2の両方ともnとする	x = x2 = n
破線グラフの色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
散布図にライトコーラル色のマーカーを使う	plt.plot(xdata, ydata, c='lightcoral')
データフレームdfのリストalistカラムのどの値が頻出か見る	df[alist].mode()
データフレームdfの先頭n行	df.head(n)
ビスク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='bisque')
日時dtの曜日を整数で使う	dt.weekday()
リストxdataをシアン色のヒストグラムで描画する	plt.hist(xdata, color='cyan')
サイコロと同じ乱数を生成する	random.randint(1, 6)
データ列dsのn分位数	ds.quantile(n/100)
小麦色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='wheat')
データフレームdfのカラムcolがxより小さい行を抽出する	df[df[col] < x]
リストxdataとリストydataについての散布図をプラム色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='plum', alpha=0.5)
日付adateが何曜日か知る	adate.weekday()
リストxdataとリストydataについてアクアマリン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
sの先頭	s[0]
散布図にゴールド色のマーカーを使う	plt.plot(xdata, ydata, c='gold')
sのnからn2までの範囲でs2をカウントする	s.count(s2, start=n, end=n2)
リストxdataとリストydataの折れ線グラフに、緑色の左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
nからn2の値を引いてnに代入する	n -= n2
リストalistに文字列elementを追加する	alist.append(element)
ディープスカイブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='deepskyblue')
ダークグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgreen')
リストxdataとリストydataについて破線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
スラグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='slategray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をオリーブに設定する	plt.plot(xdata, ydata, color='olive')
散布図にグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='green')
データフレームdfをカラムcol毎にグループ化して、関数適用した値を求める	df.groupby(col).agg(func)
リストxdataとリストydataの折れ線グラフを描画して、透明度をxに設定する	plt.plot(xdata, ydata, alpha=x)
リストxdataとリストydataについて折れ線グラフを描画して、その色をハニーデューに設定する	plt.plot(xdata, ydata, color='honeydew')
破線グラフの色をスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
折れ線グラフの色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgray')
sを空白で区切る	s.split()
セットasetにリストiterableを追加更新する	aset.update(iterable)
n進sをバイト列に変換する	int(s, n2).to_bytes(length=n2, byteorder='big')
オプションで、ヘッダをnamesに設定する	header = names
データフレームdfの重複した行をマスクする	df.duplicated()
ダークターコイズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkturquoise')
リストxdataをマゼンタ色のヒストグラムで描画する	plt.hist(xdata, color='magenta')
リストxdataとリストydataの線幅nの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
赤いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='r')
データフレームdfのカラムcolとカラムcol2毎の分散	df.groupby([col, col2], as_index=False).var()
リストxdataとリストydataについて破線グラフを描画して、その色をパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='purple')
データ列dsの年	ds.dt.year
ライトスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
破線グラフの色をダークシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
s中にs2が含まれないか調べる	s2 not in s
zが0に近づくときのeの極限値を求める	sympy.limit(e, z, 0)
リストxdataとリストydataについて破線グラフを描画して、その色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gray')
インディゴ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
赤い折れ線グラフを描画する	plt.plot(xdata, ydata, color='r')
データフレームdfの第一四分位数	df.quantile(0.25)
折れ線グラフの四角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
データフレームdfのリストalistカラム中にいくつ文字列valueがあるか数える	df[alist].isin([value]).sum()
既存のファイルfilenameをsの示すエンコーディングで追加できるようにオープンする]	open(filename, mode='a', encoding=s)
リストxdataをダークグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkgrey')
日付adateが月曜日か調べる	adate.weekday() == 0
sのn番目以降にs2が含まれないか調べる	s.find(s2, start=n) == -1
リストxdataとリストydataについてダークスラテグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
整数nの各桁の総和	sum(map(int, str(int(n))))
リストxdataとリストydataについてダークレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkred')
線幅nの一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
リストxdataとリストydataについての散布図をサンディーブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
リストxdataをライトイエロー色のヒストグラムで描画する	plt.hist(xdata, color='lightyellow')
データフレームdfのカラムcolの分	df[col].dt.minute
グラフにy=0の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
散布図にミディアムシアグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='mediumseagreen')
グラフのの中で日本語を表示できるようにする	sns.set(font='IPAexGothic')
データフレームdfをカラムcol毎にグループ化して、カラムcol2の平均値を求める	df.groupby(col)[col2].mean()
xをx2で割って切り捨てる	x // x2
リストxdataをスカイブルー色のヒストグラムで描画する	plt.hist(xdata, color='skyblue')
リストxdataとリストydataについてラベンダーブラッシュ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
シアン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='cyan')
fにsを書き込む	f.write(s)
破線グラフの色を紺碧に設定する	plt.plot(xdata, ydata, linestyle='dash', color='azure')
タン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='tan')
折れ線グラフの色をアクアマリンに設定する	plt.plot(xdata, ydata, color='aquamarine')
データフレームdfのの中で、カラムcolに重複があるか見る	df.duplicated(subset=col)
リストxdataとリストydataについての散布図をプラム色で描画する	plt.plot(xdata, ydata, c='plum')
ペールグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')
データ列dsを1000の位で丸める	ds.round(-3)
リストxdataとリストydataについての散布図に黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='k')
データフレームdfを100の位で丸めて、整数型にする	df.round(-2).astype(int)
ピーチパフ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='peachpuff')
リストxdataとリストydataについての散布図をミディアムパープル色で描画する	plt.plot(xdata, ydata, c='mediumpurple')
リストxdataとリストydataの折れ線グラフに、青い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
データフレームdfのカラムcolの中央値	df[col].median()
リストxdataとリストydataについての散布図をライトスレイグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
データ列ds中にある文字列valueの合計を数える	ds.isin([value]).sum()
折れ線グラフの色をリネンに設定する	plt.plot(xdata, ydata, color='linen')
ダークオーキッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkorchid')
点線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
アンティークホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
リストxdataとリストydataについて破線グラフを描画して、その色をパパイヤウィップに設定する	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
リストxdataとリストydataについて折れ線グラフを描画して、その色をシルバーに設定する	plt.plot(xdata, ydata, color='silver')
ライトスレイグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightslategrey')
alt(追加更新する	adict.update(adict2)
ブルーバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
黒いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='k')
赤い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')
sのn番目より前にs2が含まれないか調べる	s.find(s2, end=n) == -1
オブジェクトobjは論理値クラスか調べる	isinstance(obj, bool)
散布図に黒い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='k')
マゼンタ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='magenta')
データフレームを表示するとき、ヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
リストxdataとリストydataについての散布図をライトグレー色で描画する	plt.plot(xdata, ydata, c='lightgrey')
散布図にミディアムブルー色のマーカーを使う	plt.plot(xdata, ydata, c='mediumblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をシャルトルーズに設定する	plt.plot(xdata, ydata, c='chartreuse')
sをカンマで区切る	s.split(',')
整数nをゼロパディングでn2桁の文字列に変換する	str(n).zfill(n2)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークシアグリーンに設定する	plt.plot(xdata, ydata, color='darkseagreen')
左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<')
データフレームdfのカラムcolとカラムcol2毎の個数	df.groupby([col, col2], as_index=False).count()
ベージュ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='beige')
リストalistの要素をソートする	sorted(alist)
リストxdataとリストydataについての散布図をスレートブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
ファイルfilenameから拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filename))[0]
最初のプログラムを書く	print('Hello World')
リストxdataとリストydataについてダークオリーブグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
リストxdataとリストydataについて破線グラフを描画して、その色をクリムゾンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
パパイヤウィップ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='papayawhip')
リストxdataとリストydataについての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
破線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
マゼンタ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='magenta')
データフレームdfのカラムcolの曜日が何日目か見る	df[col].dt.dayofweek
リストxdataとリストydataについての散布図にカラーコードrgbの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
ダークシアン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
s名を持ち、s2のプロパティを持った名前付きタプルを定義する	collections.namedtuple(s, s2)
リストxdataをサンディーブラウン色のヒストグラムで描画する	plt.hist(xdata, color='sandybrown')
データフレームdfのカラムcolの分散	df[col].var()
ライトスレイグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightslategray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークバイオレットに設定する	plt.plot(xdata, ydata, color='darkviolet')
データ列dsを丸めて、整数型にする	ds.round().astype(int)
リストalistをn個にビン分割して、namesのラベルをつける	pd.cut(alist, n, labels=names)
ライトグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightseagreen')
オブジェクトobjがオブジェクトobj2に等しいか調べる	obj == obj2
nの無限数列	itertools.repeat(n)
グラフにx=0の点線を付ける	plt.axvline(x=0, linestyle='dotted')
破線グラフの色をフクシアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
データ列dsの平均値	ds.mean()
デックdeqから最初の文字列elementを取り除く	deq.remove(element)
データフレームdfが重複しているか調べる	df.duplicated()
空白	' '
リストxdataとリストydataについて破線グラフを描画して、その色をフクシアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
カラーコードrgbのポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
折れ線グラフのダイアモンドマーカーを赤くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
リストxdataを紺碧色のヒストグラムで描画する	plt.hist(xdata, color='azure')
リストxdataとリストydataについての散布図をシルバー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='silver', alpha=0.5)
データフレームdfのリストalistカラムの欠損値を最頻値で埋める	df[alist].fillna(df[alist].mode().iloc[0])
リストxdataをミディアムターコイズ色のヒストグラムで描画する	plt.hist(xdata, color='mediumturquoise')
リストxdataとリストydataについて折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategrey')
黒い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
s全体がパターンpatternに複数行対応としてマッチするか見る	re.fullmatch(pattern, s, flags=re.MULTILINE)
オブジェクトobjが関数か調べる	callable(obj)
ミディアムスレートブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumslateblue')
アイボリー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='ivory')
数式として、eのzについてのn階微分を求める	sympy.diff(e, z, n)
リストxdataの変化を折れ線グラフで描画する	plt.plot(range(len(xdata)), xdata)
アザミ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
サドルブラウン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
リストxdataとリストydataについての散布図をナバホホワイト色で描画する	plt.plot(xdata, ydata, c='navajowhite')
折れ線グラフのポイントマーカーを緑色に設定する	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
パレットトルコイズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='paleturquoise')
ダークオレンジ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkorange')
破線グラフの色をブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='brown')
ドジャーブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dodgerblue')
ミディアムオーキッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
リストxdataとリストydataについての散布図をライトスカイブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
リストxdataとリストydataについての散布図をレモンシフォン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
リストxdataをスプリンググリーン色のヒストグラムで描画する	plt.hist(xdata, color='springgreen')
ライトスカイブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightskyblue')
リストxdataとリストydataについて破線グラフを描画して、その色をライトイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
リストxdataとリストydataについて破線グラフを描画して、その色をフォレストグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
データフレームdfの空文字をドロップする	df.replace('', np.nan).dropna()
リストxdataとリストydataについて散布図を描画して、マーカーの色をデピンクに設定する	plt.plot(xdata, ydata, c='deeppink')
破線グラフの色をアクアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
リストxdataとリストydataについて散布図を描画して、マーカーの色をドジャーブルーに設定する	plt.plot(xdata, ydata, c='dodgerblue')
ダークグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
データ列dsの時	ds.dt.hour
日付adateをタプルに変換する	adate.timetuple()
リストxdataとリストydataについて折れ線グラフを描画して、その色をホワイトに設定する	plt.plot(xdata, ydata, color='white')
リストxdataとリストydataについての散布図をシエナ色で描画する	plt.plot(xdata, ydata, c='sienna')
保存するCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
グラフ中の横軸の軸ラベルをsに設定する	plt.xlabel(s)
ゴーストホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
nにn2を加える	n + n2
リストxdataとリストydataについて散布図を描画して、マーカーの色をティールに設定する	plt.plot(xdata, ydata, c='teal')
散布図にカラーコードrgbの三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c=rgb)
日時dtが木曜日か調べる	dt.weekday() == 3
データフレームdfの行を条件でフィルタするには	df[(df[col] == x) & (df[col2] == x2)]
オプションで、書き込みモードに設定する	mode = 'w'
リストxdataをヒストグラムにする	plt.hist(xdata)
破線グラフの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
シエナ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sienna')
モカシン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
オリーブ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='olive')
リストxdataとリストydataについて散布図を描画して、マーカーの色をハリウッドに設定する	plt.plot(xdata, ydata, c='burlywood')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトコーラルに設定する	plt.plot(xdata, ydata, color='lightcoral')
リストxdataとリストydataについて破線グラフを描画して、その色を青に設定する	plt.plot(xdata, ydata, linestyle='dash', color='blue')
オプションで、出力先をファイルに設定する	file = sys.open(filename, 'w')
折れ線グラフの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, color='lavenderblush')
リストxdataとリストydataについての散布図をトマト色で描画する	plt.plot(xdata, ydata, c='tomato')
データフレームdfのカラムcolがsが含まれない行を抽出する	df[not df[col].str.contains(s)]
オブジェクトobjのtextプロパティの値	getattr(obj, text)
リストxdataとリストydataについて破線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
グラフのパレットをsに設定する	sns.set(palette=s)
オブジェクトobjにsという名前のプロパティが存在するか調べる	hasattr(obj, s)
リストalistが空か調べる	len(alist) == 0
デックdeqをポップする	deq.pop()
異なるn個のものからn2個選ぶ場合の数	math.comb(n, n2)
ファイルfilenameをオープンして]、バイナリストリームを使う	open(filename, mode='rb')
リストiterableを文字列に変換して連結する	''.join(map(str, iterable))
ブランチドアーモンド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='blanchedalmond')
リストxdataとリストydataについて破線グラフを描画して、その色をダークオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
ダーク・スラテグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkslategrey')
リストxdataとリストydataについての散布図をパレットトルコイズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
オールドレース色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='oldlace')
日付adateが何日か知る	adate.day
sをマゼンタで表示する	print(f'\033[35m{s}\033[0m')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、列挙する	[(name, group) for name, group in df.groupby([col, col2])]
リストxdataとリストydataについてミスティローズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
リストxdataとリストydataの折れ線グラフをカラーコードrgbで描画する	plt.plot(xdata, ydata, color=rgb)
データフレームdf中のカラムcolを等間隔でn個にビン分割する	pd.cut(df[col], n)
トマト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tomato')
ダークスラテグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkslategray')
辞書adictを浅くコピーする	dict(adict)
リストxdataをリネン色のヒストグラムで描画する	plt.hist(xdata, color='linen')
ピーチパフ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='peachpuff')
リストxdataとリストydataについての散布図をタン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='tan', alpha=0.5)
カウンタaCounterとカウンタaCounter2に共通する要素からなるカウンタ	aCounter & aCounter2
オーキッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='orchid')
データフレームdfのカラムcolとカラムcol2の相関行列	df[[col, col2]].corr()
リストxdataとリストydataについて折れ線グラフを描画して、その色をオリベドラブに設定する	plt.plot(xdata, ydata, color='olivedrab')
要素ひとつのタプル	(element,)
散布図にダークオレンジ色のマーカーを使う	plt.plot(xdata, ydata, c='darkorange')
一点鎖線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
sを末尾からs2で区切る	s.rsplit(s2)
日時dtの日付	dt.date()
改行なしにsを表示する	print(s, end='')
散布図にオレンジレッド色のマーカーを使う	plt.plot(xdata, ydata, c='orangered')
リストxdataとリストydataについて散布図を描画して、マーカーの色をスラグレーに設定する	plt.plot(xdata, ydata, c='slategrey')
リストxdataをロージーブラウン色のヒストグラムで描画する	plt.hist(xdata, color='rosybrown')
リストxdataとリストydataについての散布図をピンク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='pink', alpha=0.5)
折れ線グラフの色をグレーに設定する	plt.plot(xdata, ydata, color='gray')
データフレームdfからリストalistで指定されたデータ型のカラムを抽出する	df.select_dtypes(include=alist)
リストxdataとリストydataについての散布図をダークターコイズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
折れ線グラフの色をスレートブルーに設定する	plt.plot(xdata, ydata, color='slateblue')
グラフの用途を画面に設定する	sns.set(context='notebook')
リストxdataとリストydataについての散布図にカラーコードrgbの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
パールゴールデンロッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='palegoldenrod')
ファイルfilenameをバイナリ書き込みできるようにオープンする]	open(filename, mode='wb')
sを青色で表示する	print(f'\033[34m{s}\033[0m')
ダークシアン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkcyan')
日時dtが日曜日か調べる	dt.weekday() == 6
リストxdataとリストydataについてライトサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
リストxdataとリストydataについて折れ線グラフを描画して、その色を黄色に設定する	plt.plot(xdata, ydata, color='yellow')
データフレームdfをTSVファイルでJSONLファイルfilenameに保存する	df.to_csv(filename, sep='\t')
ミントクリーム色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
パールゴールデンロッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークカーキに設定する	plt.plot(xdata, ydata, color='darkkhaki')
リストxdataとリストydataについて散布図を描画して、マーカーの色をネイビーに設定する	plt.plot(xdata, ydata, c='navy')
ライトグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightgreen')
サーモン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='salmon')
標準入力を得る	sys.stdin
赤色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='red', alpha=0.5)
xとx2の両方にnを代入する	x = x2 = n
折れ線グラフの丸マーカーを黒くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
データフレームdfのカラムcolの標本標準偏差	df[col].std()
代数計算を使う	import sympy
文字列elementがセットasetのメンバーでないか調べる	element not in aset
xのx2乗	pow(x, x2)
フォレストグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
破線グラフの色をフローラルホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
グラフのカラーパレットをsに設定する	sns.set(pallete=s)
リストxdataとリストydataの折れ線グラフを描画して、実線に設定する	plt.plot(xdata, ydata, linestyle='solid')
折れ線グラフの色をドジャーブルーに設定する	plt.plot(xdata, ydata, color='dodgerblue')
sに漢字が含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
リストxdataとリストydataについて破線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
リストxdataとリストydataについて折れ線グラフを描画して、その色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, color='palevioletred')
整数nを二進文字列に変換する	bin(n)[2:]
リストiterableにリストiterable2を続けたイテラブル	itertools.chain(iterable, iterable2)
コマンド引数のn番目を得る	sys.argv[n]
散布図にカラーコードrgbの右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c=rgb)
折れ線グラフの色をロイヤルブルーに設定する	plt.plot(xdata, ydata, color='royalblue')
オプションで、ヘッダを自動的な連番に設定する	header = None
折れ線グラフの大バツマーカーを青くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
日時dtが何時か知る	dt.hour
リストxdataとリストydataについてミディアムシアグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
日付adateが日付adate2より後ろか調べる	adate > adate2
星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*')
サーモン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='salmon')
折れ線グラフの色をナバホホワイトに設定する	plt.plot(xdata, ydata, color='navajowhite')
ホットピンク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='hotpink')
シーグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
スラグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='slategrey')
エクセルファイルファイルfilenameからnという名前のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムパープルに設定する	plt.plot(xdata, ydata, c='mediumpurple')
データフレームdfのカラムcolとカラムcol2を折れ線グラフで描画する	plt.plot(df[col], df[col2])
リストxdataとリストydataについての散布図をハリウッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
カラーバーを付ける	plt.colorbar()
データフレームdfをカラムcol毎にグループ化して、カラムcol2の関数適用した値を求める	df.groupby(col)[col2].agg(func)
ラベンダーブラッシュ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lavenderblush')
カウンタaCounterとカウンタaCounter2のユニオン	aCounter | aCounter2
fから1文字、読み込む	f.read(1)
xが真か調べる	bool(x)
日付adateが何年か知る	adate.year
平均x、標準偏差x2の正規分布で疑似乱数を生成する	random.normalvariate(x, x2)
散布図にゲインズボロ色のマーカーを使う	plt.plot(xdata, ydata, c='gainsboro')
オプションで、追加モードに設定する	mode = 'a'
オブジェクトobjは浮動小数点数クラスか調べる	isinstance(obj, float)
散布図にカラーコードrgbの丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c=rgb)
keyが辞書adictに存在するか調べる	key not in adict
折れ線グラフの色をダークサーモンに設定する	plt.plot(xdata, ydata, color='darksalmon')
ディムグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dimgrey')
リストxdataとリストydataについてブルーバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
1+xの自然対数	math.log1p(x)
ベージュ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='beige')
リストxdataとリストydataについて折れ線グラフを描画して、その色をシエナに設定する	plt.plot(xdata, ydata, color='sienna')
データフレームdfのカラムcolが何秒か見る	df[col].dt.second
リストxdataとリストydataについての散布図をダークグリーン色で描画する	plt.plot(xdata, ydata, c='darkgreen')
リストalistを等量でn個にビン分割する	pd.qcut(alist, n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をオールドレースに設定する	plt.plot(xdata, ydata, c='oldlace')
辞書adictのキー一覧	list(adict)
リストxdataとリストydataについて散布図を描画して、マーカーの色をマルーンに設定する	plt.plot(xdata, ydata, c='maroon')
フォレストグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='forestgreen')
散布図に赤い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='r')
リストxdataとリストydataの折れ線グラフに下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
エラーを出力する	sys.stderr
破線グラフの色をティールに設定する	plt.plot(xdata, ydata, linestyle='dash', color='teal')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークグリーンに設定する	plt.plot(xdata, ydata, color='darkgreen')
ライトサーモン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightsalmon')
システム時刻で乱数を初期化する	random.seed()
データフレームdfのカラムcolとカラムcol2毎の関数適用した値	df.groupby([col, col2], as_index=False).agg(func)
データ列dsを等量でn個にビン分割する	pd.qcut(ds, n)
ミディアムブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumblue')
リストxdataとリストydataについてバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='violet')
リストiterableとリストiterable2の直積	itertools.product(iterable, iterable2)
データフレームdfをカラムcol毎にグループ化して、最小値を求める	df.groupby(col).min()
ミディアムターコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
データフレームdfのカラムcolの曜日の名前	df[col].dt.weekday_name
リストxdataとリストydataの折れ線グラフに、黄色い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
データ列dsを0と1にマップする	ds.map({s: 1, s2: 0})
リストxdataとリストydataを折れ線グラフで描画する	plt.plot(xdata, ydata)
リストxdataをグリーン色のヒストグラムで描画する	plt.hist(xdata, color='green')
事前に大文字・小文字を無視してパターンpatternをコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
折れ線グラフの色をフクシアに設定する	plt.plot(xdata, ydata, color='fuchsia')
リストxdataとリストydataについての散布図をライトゴールドロディイエロー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
sをバイト配列に変換する	bytearray(s)
破線グラフの色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
リストxdataとリストydataについて散布図を描画して、マーカーの色を小麦に設定する	plt.plot(xdata, ydata, c='wheat')
データフレームdfのリストalistカラムを丸める	df[alist].round()
赤い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='r')
ライトグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightgrey')
ロージーブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='rosybrown')
リストxdataをチョコレート色のヒストグラムで描画する	plt.hist(xdata, color='chocolate')
データフレームdfの重複した行を数える	df.duplicated().sum()
リストxdataとリストydataについて散布図を描画して、マーカーの色をフォレストグリーンに設定する	plt.plot(xdata, ydata, c='forestgreen')
タプルatupleの要素を昇順にソートする	sorted(atuple, reverse=False)
折れ線グラフの色をホワイトスモークに設定する	plt.plot(xdata, ydata, color='whitesmoke')
ダークシアン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkcyan')
sを下線付きで表示する	print(f'\033[4m{s}\033[0m')
リストxdataとリストydataについて破線グラフを描画して、その色をベージュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='beige')
データフレームdfのカラムcolがxでない行をフィルタする	df[df[col] == x]
ホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='white')
本日の月数	datetime.datetime.today().month
ダークオリーブグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkolivegreen')
ミディアムスレートブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumslateblue')
エクセルファイルファイルfilenameからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
xが1、もしくは2、もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
リストalistの長さだけ繰り返す	range(len(alist))
データフレームdfのカラムcolの欠損値をxに設定する	df[col].fillna(x)
s名を持ち、リストalist3のプロパティを持った名前付きタプルを定義する	collections.namedtuple(s, names)
アイボリー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='ivory')
タプルatupleの文字列elementが最初に見つかるインデックス	atuple.index(element)
辞書adictのkeyの値	adict[key]
sが漢字か調べる	('一' <= s <= '鿐')
データ列dsの欠損値を最頻値で埋める	ds.fillna(ds.mode().iloc[0])
セットasetに文字列elementを追加する	aset.add(element)
リストxdataとリストydataの赤い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='r')
ファイルfilenameからストリームを読み込み、fileとする	file = open(filename)
リストxdataとリストydataについての散布図を紺碧色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='azure', alpha=0.5)
アリスブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
リストxdataとリストydataについての散布図をラベンダーブラッシュ色で描画する	plt.plot(xdata, ydata, c='lavenderblush')
リストxdataとリストydataについての散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
リストxdataとリストydataについての散布図をスプリンググリーン色で描画する	plt.plot(xdata, ydata, c='springgreen')
折れ線グラフの色をゴールドに設定する	plt.plot(xdata, ydata, color='gold')
データフレームdfのカラムcol中に文字列valueがあるか調べる	df[col].isin([value])
アザミ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='thistle')
折れ線グラフの色をスノーに設定する	plt.plot(xdata, ydata, color='snow')
ファイルfilenameを読み込みできるようにオープンする]	open(filename, mode='r')
折れ線グラフの左三角マーカーを青くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
リストxdataとリストydataについて折れ線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(xdata, ydata, color='ghostwhite')
xが-9以上、9以下か調べる	-9 <= x <= 9
リストxdataとリストydataについての散布図に赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
折れ線グラフの色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, color='midnightblue')
リストxdataとリストydataの折れ線グラフに、緑色の三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
リストxdataとリストydataについての散布図をパールゴールデンロッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
リストxdataとリストydataについての散布図をライトシアン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
sの中からパターンpatternにASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)
現在の時間数	datetime.date.today().hour
リストxdataとリストydataについて散布図を描画して、マーカーの色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, c='palegoldenrod')
リストiterableをダミー変数に変換する	pd.get_dummies(iterable)
リストxdataとリストydataについて散布図を描画して、マーカーの色をベージュに設定する	plt.plot(xdata, ydata, c='beige')
TSVファイルfilenameを読み込む	pd.read_csv(filename, sep='\t')
散布図にダークゴールデンロッド色のマーカーを使う	plt.plot(xdata, ydata, c='darkgoldenrod')
スチールブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='steelblue')
破線グラフの色をフォレストグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
sをエンコーディングnameでバイト列に変換する	s.encode(encoding=name)
リストxdataとリストydataについて破線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
リストxdataとリストydataについてシャルトルーズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
文字列elementがリストalistの要素でないか調べる	element not in alist
黄色色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='yellow')
リストxdataとリストydataについて散布図を描画して、マーカーの色をディムグレーに設定する	plt.plot(xdata, ydata, c='dimgrey')
イエローグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='yellowgreen')
リストxdataとリストydataについてゴールド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gold')
セットaset∪セットaset2	aset.union(aset2)
ゴールデンロッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='goldenrod')
リストxdataとリストydataについての散布図をリネン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='linen', alpha=0.5)
破線グラフの色をタンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='tan')
折れ線グラフの右三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
折れ線グラフのバツマーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='x', markersize=n)
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
xの正弦	math.sin(x)
折れ線グラフの色をミディアムブルーに設定する	plt.plot(xdata, ydata, color='mediumblue')
関数predicatefuncが真となるリストiterableの要素	itertools.dropwhile(predicatefunc, iterable)
日時dtをn秒前に戻す	dt - datetime.timedelta(seconds=n)
折れ線グラフの色をプラムに設定する	plt.plot(xdata, ydata, color='plum')
リストxdataとリストydataについてダークマゼンタ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
折れ線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, color=rgb)
sをバイト列に変換する	bytes(s)
サーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='salmon')
散布図にミディアムバイオレットレッド色のマーカーを使う	plt.plot(xdata, ydata, c='mediumvioletred')
ローングリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lawngreen')
リストxdataとリストydataについての散布図をパープル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='purple', alpha=0.5)
リストxdataとリストydataについての散布図をライトスチールブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
データフレームdfのリストalistカラムを10の位で丸めて、整数型にする	df[alist].round(-1).astype(int)
sがリストalist内のいづれか調べる	s in alist
リストxdataとリストydataについて散布図を描画して、マーカーの色をコーラルに設定する	plt.plot(xdata, ydata, c='coral')
ダークカーキ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
リストxdataとリストydataの折れ線グラフを描画して、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
リストxdataとリストydataについてオールドレース色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
ミディアムパープル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumpurple')
リストxdataとリストydataについて散布図を描画して、ポイントマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をライトコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
リストxdataとリストydataの折れ線グラフに、緑色の丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
コーラル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='coral')
リストxdataとリストydataについての散布図をコーラル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='coral', alpha=0.5)
n年n2月n3日n4時n5分n6秒を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n6)
リストxdataをインディアンレッド色のヒストグラムで描画する	plt.hist(xdata, color='indianred')
日付adateをn日前に戻す	adate - datetime.timedelta(days=n)
データフレームdfのカラムcolとカラムcol2毎の平均値	df.groupby([col, col2], as_index=False).mean()
イエローグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
折れ線グラフの色をマゼンタに設定する	plt.plot(xdata, ydata, color='magenta')
データフレームdfを1000の位で丸めて、整数型にする	df.round(-3).astype(int)
日時dtが何月か知る	dt.month
グリーンイエロー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='greenyellow')
データフレームdfのリストalistカラムがどの程度、分散しているか見る	df[alist].var()
リストxdataとリストydataについての散布図をコーンフラワーブルー色で描画する	plt.plot(xdata, ydata, c='cornflowerblue')
リストxdataとリストydataについてスプリンググリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
リストxdataを縦軸、リストydataを横軸と指定して、折れ線グラフを描画する	plt.plot(xdata, ydata)
スチールブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
リストxdataとリストydataについての散布図をオリーブ色で描画する	plt.plot(xdata, ydata, c='olive')
折れ線グラフの色を黒くする	plt.plot(xdata, ydata, color='k')
散布図に三角マーカーを使う	plt.plot(xdata, ydata, marker='^')
イエローグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
日時dtの月数	dt.month
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, c='mediumvioletred')
リストxdataとリストydataについての散布図をミディアムブルー色で描画する	plt.plot(xdata, ydata, c='mediumblue')
リストxdataとリストydataについての散布図をビスク色で描画する	plt.plot(xdata, ydata, c='bisque')
セットasetがセットaset2の上位集合か調べる	aset.issuperset(aset2)
xとx2をそれぞれnとn2に設定する	x, x2 = n, n2
データフレームdfのリストalistカラムの尖度	df[alist].skew()
ブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='brown')
xを十六進文字列に変換する	x.hex()
リストxdataとリストydataの折れ線グラフに、大きさnの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markersize=n)
文字列TSVファイルfilenameからCSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
リストxdataとリストydataについて破線グラフを描画して、その色をアザミに設定する	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
アザミ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='thistle')
リストxdataとリストydataについて散布図を描画して、マーカーの色をアイボリーに設定する	plt.plot(xdata, ydata, c='ivory')
xを浮動小数点数型に変換する	float(x)
データ列dsの中央値	ds.median()
オプションで、エンコーディングをsの示すエンコーディングに設定する	encoding = s
ダークサーモン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
リストxdataとリストydataの青い折れ線グラフを描画する	plt.plot(xdata, ydata, color='b')
リストxdataとリストydataについての散布図をレモンシフォン色で描画する	plt.plot(xdata, ydata, c='lemonchiffon')
データ列を使う	import pandas as pd
最大長をnにしてリストiterableから両端キューを作る	collections.deque(iterable, maxlen=n)
パレットトルコイズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='paleturquoise')
オプションで、標準エラーを出力にする	file = sys.stderr
sの先頭だけ英大文字化する	s.capitalize()
日時dtが何年か知る	dt.year
データフレームdfの行と列を入れ替える	df.T
整数nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
デックdeqのn番目に文字列elementを挿入する	deq.insert(n, element)
オレンジレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='orangered')
リストxdataとリストydataについての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
xの双曲線正弦の逆数	math.asinh(x)
実線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
xを切り上げる	math.ceil(x)
散布図に赤い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='r')
四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s')
アンティークホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
ディムグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')
リストxdataとリストydataについての散布図をサドルブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
フクシア色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
空の辞書	{}
データフレームdfのリストalistカラムの第一四分位数	df[alist].quantile(0.25)
オプションで、SJISを使う	encoding = 'shift_jis'
オプションで、エンコーディングをBOM付きに設定する	encoding = 'utf_8_sig'
文字列elementの無限イテラブル	itertools.repeat(element)
データフレームdfのカラムcolを配列に変換する	df[col].values
データフレームdfのリストalistカラムの分散	df[alist].var()
散布図にダークバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='darkviolet')
データフレームdfの欠損値を直前の値に設定する	df.fillna(method='ffill')
折れ線グラフの色をグリーンイエローに設定する	plt.plot(xdata, ydata, color='greenyellow')
リストxdataとリストydataの折れ線グラフを描画して、色を黒くする	plt.plot(xdata, ydata, color='k')
リストxdataとリストydataの折れ線グラフに、緑色のダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
カラーコードrgbの星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストxdataとリストydataについて折れ線グラフを描画して、その色をミスティローズに設定する	plt.plot(xdata, ydata, color='mistyrose')
折れ線グラフに星マーカーを使う	plt.plot(xdata, ydata, marker='*')
デックdeqの最大長	deq.maxlen
リストalistの要素を逆順にする	alist[::-1]
nとn2の値を足してnに代入する	n += n2
TSVファイルfilenameからCSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
折れ線グラフの下三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
sの小文字を英大文字に変換する	s.upper()
リストalistにリストalist2を追加する	alist.extend(alist2)
リストxdataとリストydataの黒い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
リストxdataとリストydataの折れ線グラフに、赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
破線グラフの色を黄色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellow')
データフレームdfの重複を見る	df.duplicated()
リストiterableの各要素に対して、関数predicatefuncが真であれば、その要素を出力する	itertools.takewhile(predicatefunc, iterable)
リストxdataとリストydataの折れ線グラフに右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
乱数シードをnで初期化する	random.seed(n)
リストxdataとリストydataについての散布図をピーチパフ色で描画する	plt.plot(xdata, ydata, c='peachpuff')
リストxdataとリストydataについてライトイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
整数nの桁数	len(str(int(n)))
リストxdataとリストydataについて散布図を描画して、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
オブジェクトobjは数値か調べる	isinstance(obj, (int,float))
リストxdataとリストydataについて折れ線グラフを描画して、その色をオレンジに設定する	plt.plot(xdata, ydata, color='orange')
散布図にビスク色のマーカーを使う	plt.plot(xdata, ydata, c='bisque')
リストxdataとリストydataの折れ線グラフに、黄色い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
データフレームdfの先頭	df.head()
折れ線グラフのマーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
データフレームdfのカラムcolの値を正規表現patternでまとめてsに置き換える	df[col].replace(pattern, s, regex=True)
ディムグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='dimgray')
折れ線グラフの色をオレンジレッドに設定する	plt.plot(xdata, ydata, color='orangered')
破線グラフの色をライムに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lime')
リストxdataをシルバー色のヒストグラムで描画する	plt.hist(xdata, color='silver')
折れ線グラフの色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, color='mediumaquamarine')
f全体を文字列として読み込む	f.read()
xの小数点以下'4'桁までを表示する	print(':.4f'.format(x))
日時dtが土曜日か調べる	dt.weekday() == 5
__X__カラーパレットをグラフに使う	sns.set(pallete='pastel')
整数nをバイト列に変換する	n.to_bytes(length=n2, byteorder='big')
グリーンイエロー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='greenyellow')
リストxdataとリストydataについて破線グラフを描画して、その色をダークバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
リストxdataとリストydataについてライトスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
nが一桁の数か調べる	-9 <= n <= 9
データフレームdfの中央値	df.median()
リストxdataとリストydataについての散布図をアンティークホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
リストiterableからn個、サンプリングする	random.sample(iterable, k=n)
ゴールデンロッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='goldenrod')
日付adateをISO形式の文字列に変換する	adate.isoformat()
リストxdataとリストydataについて折れ線グラフを描画して、その色をカデットブルーに設定する	plt.plot(xdata, ydata, color='cadetblue')
リストalistの先頭を取り除く	alist[1:]
リストxdataとリストydataについて破線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
実線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color='r')
ダークレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkred')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、平均値	df.groupby([col, col2], as_index=False).mean()
グレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='gray', alpha=0.5)
リストxdataをライトグリーン色のヒストグラムで描画する	plt.hist(xdata, color='lightgreen')
カウンタaCounter∩カウンタaCounter2	aCounter & aCounter2
リストalistのn番目に文字列elementを挿入する	alist.insert(n, element)
xを整数型に変換する	int(x)
リストxdataとリストydataについての散布図をダークグレー色で描画する	plt.plot(xdata, ydata, c='darkgray')
ダークカーキ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkkhaki')
データ列ds中に文字列valueと文字列value2がいくつあるか数える	ds.isin([value, value2]).sum()
sのn番目とn2番目の間にs2が含まれないか調べる	s.find(s2, start=n, end=n2) == -1
オブジェクトobjのオブジェクト識別子	id(obj)
リストxdataとリストydataについての散布図をブルーバイオレット色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
リストalistの各要素を関数funcに適用した結果でソートする	sorted(alist, key=func)
折れ線グラフの丸マーカーを黄色くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
ミディアムアクアマリン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
JSONLファイルfilenameを読み込む	pd.read_json(filename, orient='records', lines=True)
ダーク・スラテグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkslategrey')
ダークカーキ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
散布図にピーチパフ色のマーカーを使う	plt.plot(xdata, ydata, c='peachpuff')
折れ線グラフのバツマーカーを黄色くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
sを長さnで右寄せにする	s.rjust(n)
リストxdataとリストydataの折れ線グラフに、青い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
リストxdataとリストydataのカラーコードrgbの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
グラフにy=0の点線を付ける	plt.axhline(y=0, linestyle='dotted')
文字列elementが辞書adictの値に含まれていないか調べる	element not in adict.values()
リストxdataとリストydataについての散布図に三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
xの小数点以下'5'桁までの文字列に変換する	':.5f'.format(x)
リストxdataとリストydataについての散布図をミディアムバイオレットレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
散布図にミディアムスプリンググリーン色のマーカーを使う	plt.plot(xdata, ydata, c='mediumspringgreen')
データフレームdfのリストalistカラム中にある文字列valueの合計を数える	df[alist].isin([value]).sum()
データフレームdfのリストalistカラムの平均値	df[alist].mean()
リストxdataをブラック色のヒストグラムで描画する	plt.hist(xdata, color='black')
リストxdataとリストydataについて折れ線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(xdata, ydata, color='powderblue')
sの両端から改行を取り除く	s.strip('\n')
本日の日時	datetime.datetime.now()
リストalistを表示する	print(alist)
グラフにグリッド線を入れる	plt.grid(True)
散布図にハリウッド色のマーカーを使う	plt.plot(xdata, ydata, c='burlywood')
nが1、もしくは2、もしくは3に等しいか調べる	n == 1 or n == 2 or n == 3
n〜n2の範囲の整数乱数を生成する	random.randint(n, n2)
s中にs2が含まれるか調べる	s2 in s
sを黒色で表示する	print(f'\033[30m{s}\033[0m')
数式として、eを積分する	sympy.integrate(e)
リストxdataとリストydataの折れ線グラフに、黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
日時dtをn月前に戻す	dt - datetime.timedelta(months=n)
ミディアムスプリンググリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
デピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
スピアマン相関係数でデータフレームdfの相関行列	df.corr(method='spearman')
耐火レンガ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
ミスティローズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
データ列dsが何年か見る	ds.dt.year
アクア色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='aqua')
リストxdataとリストydataについての散布図をディムグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、青い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
nにn2をかけた値をnに代入する	n *= n2
データ列dsをビン数nでビン分割する	pd.cut(ds, n)
データ列dsの各データが何回出現するか見る	ds.value_counts()
プログラムのファイル名を知る	sys.argv[0]
ライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
ビン数nのヒストグラムをリストxdataについて描画する	plt.hist(xdata, bins=n)
リストxdataとリストydataについて破線グラフを描画して、その色をダークターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークマゼンタに設定する	plt.plot(xdata, ydata, c='darkmagenta')
リストxdataをプラム色のヒストグラムで描画する	plt.hist(xdata, color='plum')
リストxdataとリストydataについてモカシン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
sをs2で二分し、前半の文字列を使う	s.partition(s2)[0]
リストxdataをスチールブルー色のヒストグラムで描画する	plt.hist(xdata, color='steelblue')
破線グラフの色を小麦に設定する	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
ライトスレイグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightslategray')
リストxdataとリストydataについての散布図をゴールド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='gold', alpha=0.5)
ライトサーモン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
アイボリー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='ivory')
リストalistの文字列elementが最初に見つかるインデックス	alist.index(element)
パープル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='purple')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークブルーに設定する	plt.plot(xdata, ydata, color='darkblue')
改行なしにリストiterableを表示する	print(iterable, end='')
表データを使う	import pandas as pd
日時dtをISO形式の文字列に変換する	dt.isoformat()
オブジェクトobjはリストかタプルか調べる	isinstance(obj, (list)
リストxdataとリストydataについてダークグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
リストalistを引数として展開して表示する	print(*alist)
リストxdataとリストydataについての散布図をパールバイオレットレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
リストxdataとリストydataについての散布図をミディアムスプリンググリーン色で描画する	plt.plot(xdata, ydata, c='mediumspringgreen')
折れ線グラフの色をディープスカイブルーに設定する	plt.plot(xdata, ydata, color='deepskyblue')
ティール色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='teal')
リストxdataをコーンフラワーブルー色のヒストグラムで描画する	plt.hist(xdata, color='cornflowerblue')
nがn2以下、または、n3以上か調べる	n <= n2 or n >= n3
データフレームdfのカラムcolの欠損値を中央値に設定する	df[col].fillna(df[col].median())
データフレームdf中にある文字列valueと文字列value2の合計を数える	df.isin([value, value2]).sum()
リストalistとリストalist2の積集合	list(set(alist) & set(alist2))
ミディアムシアグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
ライトゴールドロディイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
黒いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')
オプションで、バッファリングを無効にする	buffering = 0
リストalistの末尾を取り除く	alist[:-1]
ダークバイオレット色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
折れ線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategray')
リストxdataとリストydataの青い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
破線グラフの色をホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='white')
トマト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='tomato')
アクアマリン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
オプションで、標準出力を使う	file = sys.stdout
sの接尾辞からs2を取り除く	s.removesuffix(s2)
ライトゴールドロディイエロー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
散布図にフローラルホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='floralwhite')
リストxdataとリストydataの線幅nの折れ線グラフを描画する	plt.plot(xdata, ydata, linewidth=n)
リストxdataとリストydataについてトマト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tomato')
リストxdataとリストydataについて散布図を描画して、マーカーの色をペールグリーンに設定する	plt.plot(xdata, ydata, c='palegreen')
数式として、方程e=0のzの解を求める	sympy.solve(e, z)
リストxdataとリストydataについてディムグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
散布図に赤いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='r')
n個の数値イテラブル	range(n)
破線グラフの色をダークブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
破線グラフの色をシーグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
リストxdataとリストydataについての散布図を黄色色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
ミディアムブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
破線グラフの色をアイボリーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
データ列dsの欠損値を中央値で埋める	ds.fillna(ds.median())
ゴールド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='gold')
sを長さnでセンタリングにする	s.center(n)
リストxdataとリストydataの折れ線グラフを描画して、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストalistを複製する	alist.copy()
散布図に耐火レンガ色のマーカーを使う	plt.plot(xdata, ydata, c='firebrick')
nからn2までのスライス	slice(n, n2)
青い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='b')
リストxdataとリストydataについての散布図をディムグレー色で描画する	plt.plot(xdata, ydata, c='dimgray')
データフレームdfをカラムcol毎にグループ化して、カラムcol2の要約統計量を求める	df.groupby(col).describe()[col2]
ダークスレートブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkslateblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, color='darkgoldenrod')
ユーザから入力される	int(input())
実線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
データフレームdf中に文字列valueと文字列value2があるか調べる	df.isin([value, value2])
xの自然対数	math.log(x)
データフレームdfのリストalistカラムの欠損値を平均値で埋める	df[alist].fillna(df[alist].mean())
グレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='grey')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategray')
データフレームdfのカラムcolのn分位数	df[col].quantile(n/100)
デックdeqに文字列elementをプッシュする	deq.append(element)
タプルatupleの末尾を取り除く	atuple[:-1]
データフレームdfのカラムcolの欠損値を直前の値で埋める	df[col].fillna(method='ffill')
nがn2以上か調べる	n >= n2
日時dtが何分か知る	dt.minite
データフレームdfのリストalistカラムの欠損値を最小値に設定する	df[alist].fillna(df[alist].min())
ライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
リストxdataとリストydataについてブランチドアーモンド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
カラーコードrgbの下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
エクセルファイルファイルfilenameをデータフレームとして読み込む	pd.read_excel(filename)
データフレームdfのリストalistカラムの欠損値を直前の値で埋める	df[alist].fillna(method='ffill')
リストalistを四分位数ごとにビン分割する	pd.qcut(alist, 4)
nかけるn2	n * n2
ファイルfilenameからバイナリ書き込みストリームをオープンして]、fとする	f = open(filename, mode='wb')
青色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='blue')
sを緑色で表示する	print(f'\033[32m{s}\033[0m')
破線グラフの色をイエローグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をディープスカイブルーに設定する	plt.plot(xdata, ydata, color='deepskyblue')
パパイヤウィップ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='papayawhip')
二進sを整数に変換する	int(s, 2)
グレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='grey')
ミディアムブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
sの英大文字を英小文字に変換する	s.lower()
辞書adictからkeyを取り除く	adict.pop(key)
昨日の日付	datetime.date.today() - datetime.timedelta(days=1)
a(リスト)をflattenする	list(itertools.chain.from_iterable(a))
折れ線グラフの色をホットピンクに設定する	plt.plot(xdata, ydata, color='hotpink')
散布図にコーンフラワーブルー色のマーカーを使う	plt.plot(xdata, ydata, c='cornflowerblue')
折れ線グラフのバツマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
リストxdataとリストydataについての散布図をホットピンク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムブルーに設定する	plt.plot(xdata, ydata, c='mediumblue')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
パウダーブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='powderblue')
ダークブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkblue')
散布図にグレー色のマーカーを使う	plt.plot(xdata, ydata, c='grey')
イエローグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='yellowgreen')
リストxdataとリストydataの折れ線グラフに、黒い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
リストxdataとリストydataについて折れ線グラフを描画して、その色をサンディーブラウンに設定する	plt.plot(xdata, ydata, color='sandybrown')
数式として、sをシンボルにして、zにする	z = sympy.symbol(s)
リストxdataをコーラル色のヒストグラムで描画する	plt.hist(xdata, color='coral')
リストxdataとリストydataについて折れ線グラフを描画して、その色をタンに設定する	plt.plot(xdata, ydata, color='tan')
リストxdataをオーキッド色のヒストグラムで描画する	plt.hist(xdata, color='orchid')
n年n2月を日時に変換する	datetime.datetime(year=n, month=n2, day=1)
リストxdataとリストydataについての散布図にカラーコードrgbのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストxdataとリストydataについての散布図をティール色で描画する	plt.plot(xdata, ydata, c='teal')
セットaset⊃セットaset2	aset > aset2
リストxdataとリストydataについての散布図をイエローグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
データ列dsのタイムゾーンを日本に設定する	ds.tz_convert('Asia/Tokyo')
xの小数点以下'1'桁までを表示する	print(':.1f'.format(x))
nからn2までのn3ごとによるスライス	slice(n, n2, n3)
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトイエローに設定する	plt.plot(xdata, ydata, color='lightyellow')
数式として、eの展開を行う	sympy.expand(e)
リストxdataとリストydataの折れ線グラフに、大きさnの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markersize=n)
ダークシアグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
nとn2の差	n - n2
ライトグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgray')
タプルatupleの先頭	atuple[0]
xの仮数	math.frexp(x)[0]
散布図にカラーコードrgbの左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c=rgb)
データフレームdfのカラムcolとカラムcol2毎の最大値	df.groupby([col, col2], as_index=False).max()
リストxdataをオールドレース色のヒストグラムで描画する	plt.hist(xdata, color='oldlace')
スカイブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
商と余りを同時に計算する	divmod(x, x2)
カラーバーを横向きで付ける	plt.colorbar(orientation='horizontal')
データフレームdfをタブ区切りでJSONLファイルfilenameに保存する	df.to_csv(filename, sep='\t')
n2がnより大きく、かつ、n3未満か調べる	n < n2 and n2 < n3
リストxdataをスラグレー色のヒストグラムで描画する	plt.hist(xdata, color='slategrey')
折れ線グラフの色をライトスカイブルーに設定する	plt.plot(xdata, ydata, color='lightskyblue')
ファイルfilenameをUTF8でオープンする]	open(filename, encoding='utf-8')
現在が何秒か知る	datetime.date.today().second
ダークシアグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
リストxdataをブランチドアーモンド色のヒストグラムで描画する	plt.hist(xdata, color='blanchedalmond')
本日の日付	datetime.date.today()
データフレームdfのリストalistカラムが正規分布からどの程度、尖っているか見る	df[alist].skew()
破線グラフの色をダークスラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
オレンジ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='orange')
日時dtをsでフォーマットする	dt.strftime()
日付adateをn時間前に戻す	adate - datetime.timedelta(hours=n)
nを切り捨てながら半分にする	n //= 2
ライトグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色をマゼンタに設定する	plt.plot(xdata, ydata, c='magenta')
サーモン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
日時dtが日時dt2より後ろか調べる	dt > dt2
ライムグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='limegreen')
辞書adictのコピーを得る	dict(adict)
リストxdataとリストydataについての散布図をインディアンレッド色で描画する	plt.plot(xdata, ydata, c='indianred')
一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot')
散布図にシャルトルーズ色のマーカーを使う	plt.plot(xdata, ydata, c='chartreuse')
リストxdataとリストydataについて折れ線グラフを描画して、その色をグリーンに設定する	plt.plot(xdata, ydata, color='green')
リストxdataとリストydataについての散布図をディープスカイブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
リストxdataをミディアムアクアマリン色のヒストグラムで描画する	plt.hist(xdata, color='mediumaquamarine')
リストxdataとリストydataについてハニーデュー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
日時dtにn秒分、加算する	dt + datetime.timedelta(seconds=n)
散布図にカーキ色のマーカーを使う	plt.plot(xdata, ydata, c='khaki')
現在が何時か知る	datetime.date.today().hour
リストxdataとリストydataの折れ線グラフに、線幅nのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
リストxdataをオレンジ色のヒストグラムで描画する	plt.hist(xdata, color='orange')
レモンシフォン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lemonchiffon')
散布図にタン色のマーカーを使う	plt.plot(xdata, ydata, c='tan')
破線グラフの色をブルーバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
要素数5の空配列を作る	np.empty(5)
破線グラフの色をゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
オレンジ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='orange')
リストxdataとリストydataについての散布図をライトイエロー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
nが5で割り切れるか調べる	n % 5 == 0
リストxdataとリストydataについて折れ線グラフを描画して、その色をスノーに設定する	plt.plot(xdata, ydata, color='snow')
nの順列の総数	math.perm(n)
レモンシフォン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
データフレームdfから重複ありでランダムにn行を抽出する	df.sample(n, replace=True)
リストalistをビン数nでビン分割する	pd.cut(alist, n)
グラフ中の縦軸の軸ラベルをsに設定する	plt.ylabel(s)
ダークシアグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkseagreen')
オレンジ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orange')
データフレームdfからカテゴリデータのカラムを抽出する	df.select_dtypes('object')
最大長nの両端キューを新しく作る	X = collections.deque(maxlen=n)
辞書adictからカウンタを新規に作る	collections.Counter(adict)
カウンタaCounterから最頻出の項目を使う	aCounter.most_common(0)[0]
リストxdataとリストydataについてオレンジレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orangered')
折れ線グラフの色をsに設定する	plt.plot(xdata, ydata, color=s)
ライトスレイグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
sの末尾からs2を探す	s.rfind(s2)
sのn番目からs2を探す	s.find(s2, start=n)
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
ティール色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='teal')
リストxdataをディープスカイブルー色のヒストグラムで描画する	plt.hist(xdata, color='deepskyblue')
ミディアムアクアマリン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
貝殻色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
sを左トリムする	s.lstrip()
データフレームdfのカラムcolをsにリネームする	df.rename(columns={col: s})
リストxdataとリストydataについて折れ線グラフを描画して、その色をハリウッドに設定する	plt.plot(xdata, ydata, color='burlywood')
リストxdataとリストydataの線幅nの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
散布図にアンティークホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='antiquewhite')
空のカウンタを新しく作る	collections.Counter()
ハローワールドと表示する	print('Hello World')
点線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dotted', color='r')
数式として、eを数値に変換する	float(e)
破線グラフの色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
データ列dsの第三四分位数	ds.quantile(0.75)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークサーモンに設定する	plt.plot(xdata, ydata, c='darksalmon')
リストxdataとリストydataについて折れ線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(xdata, ydata, color='goldenrod')
ダークゴールデンロッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkgoldenrod')
sの末尾	s[-1]
散布図に黒い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='k')
折れ線グラフの四角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
リストalist中の最小値	min(alist)
リストxdataとリストydataについて破線グラフを描画して、その色をシャルトルーズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
データフレームdf中に文字列valueがあるか調べる	df.isin([value])
リストalistの長さ	len(alist)
破線グラフの色をチョコレートに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークオレンジに設定する	plt.plot(xdata, ydata, c='darkorange')
スラグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategray')
リストxdataとリストydataについての散布図をダークスラテグレー色で描画する	plt.plot(xdata, ydata, c='darkslategray')
ミディアムオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
折れ線グラフのダイアモンドマーカーを黒くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
パールゴールデンロッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='palegoldenrod')
コーラル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='coral')
デックdeqの末尾	deq[-1]
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークオーキッドに設定する	plt.plot(xdata, ydata, c='darkorchid')
データフレームdfのカラムcolを抽出する	df[col]
xの小数点以下'5'桁までを表示する	print(':.5f'.format(x))
セットasetがセットaset2と交わりを持たないか調べる	aset.isdisjoint(aset2)
データ列ds中の欠損値の合計を数える	ds.isna().sum()
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして外部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='outer')
ビスク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='bisque')
リストxdataとリストydataについてタン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tan')
リストxdataをスレートブルー色のヒストグラムで描画する	plt.hist(xdata, color='slateblue')
データフレームdfのカラムcolがx以上かつx2未満の行を抽出する	df[(x <= df[col]) & (df[col] < x2)]
__X__カラーパレットをグラフに使う	sns.set(pallete='dark')
n年n2月の日付	datetime.date(year=n, month=n2, day=1)
リストxdataとリストydataについてピーチパフ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
ライトコーラル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
折れ線グラフの色をカデットブルーに設定する	plt.plot(xdata, ydata, color='cadetblue')
リストxdataとリストydataについて散布図を描画して、下三角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストxdataとリストydataについてミントクリーム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
リストxdataとリストydataの折れ線グラフに、大きさnのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markersize=n)
破線グラフの色をダークサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
折れ線グラフの色をダークブルーに設定する	plt.plot(xdata, ydata, color='darkblue')
フローラルホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='floralwhite')
sをISO書式で日時に変換する	datetime.datetime.fromisoformat(s)
リストxdataとリストydataについて散布図を描画して、マーカーの色をオレンジレッドに設定する	plt.plot(xdata, ydata, c='orangered')
リストxdataとリストydataについて散布図を描画して、マーカーの色をスレートブルーに設定する	plt.plot(xdata, ydata, c='slateblue')
itertoolsモジュールをインポートする	import itertools
本日をタプルに変換する	datetime.datetime.today().timetuple()
データフレームdfから重複を削除する	df.drop_duplicates()
日時dtの秒数	dt.second
ライムグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='limegreen')
リストxdataをバイオレット色のヒストグラムで描画する	plt.hist(xdata, color='violet')
cに辞書adictを追加する	aCounter.update(adict)
全ての句読点文字	string.punctuation
リストxdataとリストydataについての散布図をライムグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
ライトスチールブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
リストxdataとリストydataについてミディアムターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
ライトコーラル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightcoral')
貝殻色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seashell')
日時dtが何日か知る	dt.day
アリスブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='aliceblue')
折れ線グラフの色を黄色に設定する	plt.plot(xdata, ydata, color='yellow')
タプルatupleをミュータブルにする	list(atuple)
x,x2の複素数	complex(x, x2)
データ列dsが何日か見る	ds.dt.day
sとs2を英大文字英小文字を無視して比較する	s.casefold() == s2.casefold()
本日が水曜日か調べる	datetime.datetime.today().weekday() == 2
折れ線グラフの色をダークグリーンに設定する	plt.plot(xdata, ydata, color='darkgreen')
xが一桁の数か調べる	-9 <= x <= 9
リストxdataとリストydataについて折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgrey')
ダークグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkgrey')
ダークマゼンタ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkmagenta')
データフレームdfの平均値	df.mean()
データフレームdfをカラムcolとカラムcol2によって破壊的にソートする	df.sort_values(by=[col,col2], inplace=True)
nが正の数か調べる	n > 0
散布図にダークマゼンタ色のマーカーを使う	plt.plot(xdata, ydata, c='darkmagenta')
空のチェーンマップを作成する	collections.ChainMap()
リストxdataとリストydataについて折れ線グラフを描画して、その色をラベンダーに設定する	plt.plot(xdata, ydata, color='lavender')
データフレームdfを1000の位で丸める	df.round(-3)
xの双曲線正接	math.tanh(x)
nが2で割り切れるか調べる	n % 2 == 0
リストxdataとリストydataについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
デックdeqの先頭	deq[0]
日付adateにn秒分、加算する	adate + datetime.timedelta(seconds=n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, color='cornflowerblue')
デックdeqの要素を右にn個分ローテートする	deq.rotate(n)
リストxdataとリストydataについての散布図をオリベドラブ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
バイオレット色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='violet', alpha=0.5)
ハリウッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
折れ線グラフのマーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
アンティークホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='antiquewhite')
データ列dsを100の位で丸めて、整数型にする	ds.round(-2).astype(int)
カラーバーを横向きで描画する	plt.colorbar(orientation='horizontal')
破線グラフの色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライムグリーンに設定する	plt.plot(xdata, ydata, color='limegreen')
データ列ds中に文字列valueと文字列value2があるか調べる	ds.isin([value, value2])
ローングリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')
セットasetとセットaset2の積集合	aset.intersection(aset2)
赤い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='r')
散布図にダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D')
データフレームdfをJSONLファイルfilenameに保存する	df.to_excel(filename)
リストxdataとリストydataの折れ線グラフに星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
データフレームdfのリストalistカラム中に文字列valueと文字列value2があるか調べる	df[alist].isin([value, value2])
ライトイエロー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightyellow')
ダークターコイズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkturquoise')
標準入力を使う	sys.stdin
折れ線グラフの丸マーカーを青くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
リストxdataとリストydataについて破線グラフを描画して、その色をダークシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
データ列dsが正規分布からどの程度、歪んでいるか見る	ds.kurt()
データフレームdfのカラムcol毎の関数適用した値	df.groupby(col).agg(func)
リストxdataとリストydataについて破線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
カラーコードrgbの右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
カウンタaCounterの正の数のみ残す	+aCounter
リストxdataとリストydataについて小麦色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='wheat')
データフレームdfをカラムcol毎にグループ化して、標準偏差を求める	df.groupby(col).std()
オーキッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='orchid')
リストxdataとリストydataについての散布図をダークスラテグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、青い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
散布図にダークスレートブルー色のマーカーを使う	plt.plot(xdata, ydata, c='darkslateblue')
リストxdataとリストydataについての散布図をドジャーブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
リストxdataとリストydataについて貝殻色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seashell')
リストxdataをダークシアグリーン色のヒストグラムで描画する	plt.hist(xdata, color='darkseagreen')
リストxdataとリストydataについて破線グラフを描画して、その色をオリーブに設定する	plt.plot(xdata, ydata, linestyle='dash', color='olive')
リストxdataとリストydataについて散布図を描画して、マーカーの色をホットピンクに設定する	plt.plot(xdata, ydata, c='hotpink')
リストxdataとリストydataについて折れ線グラフを描画して、その色をゴールドに設定する	plt.plot(xdata, ydata, color='gold')
リストxdataとリストydataについて紺碧色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='azure')
ダークゴールデンロッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgoldenrod')
ペールグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
辞書adictに辞書adict2のエントリを追加更新する	adict.update(adict2)
オプションで、改行コードをUNIXに設定する	newline = '\n'
破線グラフの色をアザミに設定する	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
リストxdataをダークオリーブグリーン色のヒストグラムで描画する	plt.hist(xdata, color='darkolivegreen')
データフレームdfのリストalistカラムの欠損値をxに設定する	df[alist].fillna(x)
リストxdataとリストydataについて破線グラフを描画して、その色をシーグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
リストxdataとリストydataについての散布図をオレンジ色で描画する	plt.plot(xdata, ydata, c='orange')
実線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
折れ線グラフのマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストxdataをピンク色のヒストグラムで描画する	plt.hist(xdata, color='pink')
破線グラフの色をスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
リネン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='linen')
ダークグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkgrey')
散布図にライトシアン色のマーカーを使う	plt.plot(xdata, ydata, c='lightcyan')
リストxdataとリストydataについて散布図を描画して、三角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
データフレームdfをカラムcolによって昇順にソートする	df.sort_values(by=col, ascending=True)
ファイルfilenameをオープンする]	open(filename)
カウンタaCounterにリストiterableを追加する	aCounter.update(iterable)
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')
オプションで、バイナリ書き込みモードを使う	mode = 'wb'
データ列dsをリストalistを境界値としてビン分割する	pd.cut(ds, alist)
折れ線グラフの左三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
リストxdataとリストydataの一点鎖線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
cからリストiterableを引く	aCounter.subtract(iterable)
データフレームdfのカラムcolがx以下の行を抽出する	df[df[col] <= x]
リストxdataとリストydataの折れ線グラフを描画して、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
リストxdataをミディアムシアグリーン色のヒストグラムで描画する	plt.hist(xdata, color='mediumseagreen')
本日が金曜日か調べる	datetime.datetime.today().weekday() == 4
リストxdataとリストydataについて破線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
デックdeqを空にする	deq.clear()
日付adateををn月後に進める	adate + datetime.timedelta(months=n)
リストxdataとリストydataについてカーキ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='khaki')
リストxdataをドジャーブルー色のヒストグラムで描画する	plt.hist(xdata, color='dodgerblue')
リストalistを等間隔でn個にビン分割する	pd.cut(alist, n)
ファイルfilenameをバイナリモードでオープンして]、fとする	f = open(filename, mode='rb')
シーグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='seagreen')
データ列dsの曜日数	ds.dt.dayofweek
sのnからn2までの範囲でs2の出現回数	s.count(s2, start=n, end=n2)
散布図にスノー色のマーカーを使う	plt.plot(xdata, ydata, c='snow')
ファイルfilenameの絶対パス	os.path.abspath(filename)
ディムグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
リストxdataとリストydataについて破線グラフを描画して、その色をトマトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
リストxdataとリストydataについて散布図を描画して、マーカーの色をパープルに設定する	plt.plot(xdata, ydata, c='purple')
折れ線グラフの色をパープルに設定する	plt.plot(xdata, ydata, color='purple')
散布図に大バツマーカーを使う	plt.plot(xdata, ydata, marker='X')
折れ線グラフの色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgrey')
折れ線グラフのダイアモンドマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
散布図にブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='brown')
リストxdataとリストydataについての散布図をミディアムアクアマリン色で描画する	plt.plot(xdata, ydata, c='mediumaquamarine')
データフレームdfの先頭n行	df.head(n)
サドルブラウン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='saddlebrown')
パレットトルコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')
パウダーブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='powderblue')
ミスティローズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mistyrose')
リストxdataとリストydataについて折れ線グラフを描画して、その色をパパイヤウィップに設定する	plt.plot(xdata, ydata, color='papayawhip')
データ列をインポートする	from sympy import substitution
データフレームdfに重複があるか見る	df.duplicated()
散布図にブラック色のマーカーを使う	plt.plot(xdata, ydata, c='black')
リストxdataとリストydataについて折れ線グラフを描画して、その色を紺碧に設定する	plt.plot(xdata, ydata, color='azure')
リストxdataとリストydataについて破線グラフを描画して、その色をホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='white')
グラフを使う	import matplotlib.pyplot as plt
アリスブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='aliceblue')
ロージーブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
リストxdataとリストydataについての散布図をシルバー色で描画する	plt.plot(xdata, ydata, c='silver')
sが全て英小文字か調べる	s.islower()
リストxdataとリストydataについて破線グラフを描画して、その色をバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='violet')
リストxdataとリストydataについてライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
散布図にダークターコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='darkturquoise')
リストxdataとリストydataについての散布図をダークサーモン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
データフレームdf中のカラムcolを等量でビン数nでビン分割する	pd.qcut(df[col], n)
日付adateにn年分、加算する	adate + datetime.timedelta(years=n)
nを表示する	print(n)
破線グラフの色をシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
日付adateををn秒後に進める	adate + datetime.timedelta(seconds=n)
ダークオレンジ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkorange')
データフレームdfのの中で、カラムcolの重複を見る	df.duplicated(subset=col)
リストxdataとリストydataについてライトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
デックdeqの末尾に文字列elementを追加する	deq.append(element)
リストxdataとリストydataについてライム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lime')
xが有限か調べる	math.isfinite(x)
nをn2分の一にする	n /= n2
ダークサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
qの分母	q.denominator
折れ線グラフの丸マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='o', markersize=n)
タプルatuple中の最大値	max(atuple)
クリムゾン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
スレートブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='slateblue')
ライトシアン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightcyan')
ダークバイオレット色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkviolet')
ミディアムパープル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumpurple')
リストiterableから両端キューを新しく作って、Xに代入する	X = collections.deque(iterable)
リストxdataをディムグレー色のヒストグラムで描画する	plt.hist(xdata, color='dimgray')
リストxdataとリストydataについて散布図を描画して、マーカーの色をインディアンレッドに設定する	plt.plot(xdata, ydata, c='indianred')
リストxdataとリストydataの赤い折れ線グラフを描画する	plt.plot(xdata, ydata, color='r')
Pandasで、エポック秒のデータ列dsから日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
リストxdataとリストydataについて散布図を描画して、マーカーの色を耐火レンガに設定する	plt.plot(xdata, ydata, c='firebrick')
日時dtが何秒か知る	dt.second
データフレームdfのカラムcol中にいくつ欠損値があるか数える	df[col].isna().sum()
リストxdataをアクアマリン色のヒストグラムで描画する	plt.hist(xdata, color='aquamarine')
散布図に右三角マーカーを使う	plt.plot(xdata, ydata, marker='>')
本日が何年か知る	datetime.datetime.today().year
ファイルfilenameを追加モードでオープンして]、fとする	f = open(filename, mode='a')
リストxdataとリストydataについて折れ線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(xdata, ydata, color='indianred')
ダークオレンジ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムパープルに設定する	plt.plot(xdata, ydata, color='mediumpurple')
ファイルfilenameをBOM付きで書き込み用にオープンする]	open(filename, mode='w', encoding='utf_8_sig')
折れ線グラフの四角マーカーを黒くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
リストxdataとリストydataについて破線グラフを描画して、その色を紺碧に設定する	plt.plot(xdata, ydata, linestyle='dash', color='azure')
ブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='brown')
破線グラフの色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
リストxdataとリストydataについて破線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
データフレームを表示するとき、カラムの最大幅をnに設定する	pd.set_option('max_colwidth', n)
データフレームdfの欠損値が含まれる箇所に色を付ける	df.style.highlight_null()
最大長nの両端キューを新しく作る	collections.deque(maxlen=n)
リストxdataとリストydataについて散布図を描画して、バツマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
データフレームdfのカラムcolを0と1にマップする	df[col].map({s: 1, s2: 0})
破線グラフの色をスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
xにおけるガンマ関数の値	math.gamma(x)
インディアンレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='indianred')
グラフのカラーパレットを淡くする	sns.set(pallete='muted')
リストxdataとリストydataの折れ線グラフを描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
スレートブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='slateblue')
データフレームdfのカラムcolの空文字を欠損値に変換し、ドロップする	df[col].replace('', np.nan).dropna()
シアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cyan')
リストxdataとリストydataについての散布図をロージーブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
データ列dsの空文字を欠損値に変換し、ドロップする	ds.replace('', np.nan).dropna()
破線グラフの色をプラムに設定する	plt.plot(xdata, ydata, linestyle='dash', color='plum')
リストxdataをハニーデュー色のヒストグラムで描画する	plt.hist(xdata, color='honeydew')
折れ線グラフの色をライムに設定する	plt.plot(xdata, ydata, color='lime')
折れ線グラフの左三角マーカーを黒くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
オプションで、出力先を標準出力に設定する	file = sys.stdout
折れ線グラフの色を白くする	plt.plot(xdata, ydata, color='w')
グラフの背景色を暗くする	sns.set(style='darkgrid')
散布図に赤い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='r')
リストxdataをモカシン色のヒストグラムで描画する	plt.hist(xdata, color='moccasin')
リストxdataとリストydataの折れ線グラフに、青いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
ダークターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
TSVファイルfilenameを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
日付adateにn時間分、加算する	adate + datetime.timedelta(hours=n)
カウンタaCounter内の文字列element項目を増やす	aCounter[element] += 1
ブラック色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='black')
データフレームdfのカラムcolをヒストグラムで描画する	plt.hist(df[col])
ファイルfilenameをディレクトリ名とファイル名に分割する	os.path.split(filename)
リストxdataとリストydataについての散布図をダークレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
散布図に丸マーカーを使う	plt.plot(xdata, ydata, marker='o')
ロージーブラウン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='rosybrown')
nを半分にする	n /= 2
リストxdataとリストydataの折れ線グラフに、青いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
リストalistとリストalist2を連結する	alist + alist2
nが一桁の正の数か調べる	0 <= n <= 9
リストxdataとリストydataについて破線グラフを描画して、その色をペルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peru')
折れ線グラフの色をカーキに設定する	plt.plot(xdata, ydata, color='khaki')
折れ線グラフの三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
ブラウン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)
破線グラフの色をホワイトスモークに設定する	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
データフレームdfのカラムcolの欠損値を最小値に設定する	df[col].fillna(df[col].min())
n年n2月n3日を日時に変換する	datetime.datetime(year=n, month=n2, day=n3)
データフレームdfのカラムcolのタイムゾーンを日本に設定する	df[col].tz_convert('Asia/Tokyo')
リストxdataをフクシア色のヒストグラムで描画する	plt.hist(xdata, color='fuchsia')
オプションで、エンコーディングエラーを無視するように設定する	errors = 'ignore'
カウンタaCounterをペアリストに変換する	aCounter.items()
リストxdataとリストydataについての散布図をスラグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
現在のミリ秒	int(time.time() * 1000)
nの三乗	n ** 3
折れ線グラフのポイントマーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='.', markersize=n)
リストxdataとリストydataについての散布図をアザミ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
xからx2を引く	x - x2
セットasetにおけるセットaset2の補集合	aset.difference(aset2)
リストxdataとリストydataについてスラグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategray')
xの正弦の逆数	math.asin(x)
ナバホホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
ライトグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
日時dtをタプルに変換する	dt.timetuple()
ブルーバイオレット色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='blueviolet')
リストxdataとリストydataについて散布図を描画して、マーカーの色を黄色に設定する	plt.plot(xdata, ydata, c='yellow')
リストxdataとリストydataについての散布図をディープスカイブルー色で描画する	plt.plot(xdata, ydata, c='deepskyblue')
arrayを等量でn個にビン分割する	pd.qcut(array, n)
データフレームdfから数値データのカラムを抽出する	df.select_dtypes('number')
オプションで、namesをカラムの名前に設定する	names = names
リストxdataとリストydataの点線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='dotted', color='r')
リストxdataとリストydataについての散布図をミディアムオーキッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
リストxdataとリストydataについてディープスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
リストalistとリストalist2から辞書	dict(zip(alist, alist2))
辞書adictをJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False)
sを末尾から空白で区切る	s.rsplit()
数式として、eの部分分数化を行う	sympy.apart(e)
ミディアムシアグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
xの小数点以下'3'桁までを表示する	print(':.3f'.format(x))
リストxdataとリストydataについての散布図をダークオリーブグリーン色で描画する	plt.plot(xdata, ydata, c='darkolivegreen')
リストxdataをスラグレー色のヒストグラムで描画する	plt.hist(xdata, color='slategray')
折れ線グラフに丸マーカーを使う	plt.plot(xdata, ydata, marker='o')
折れ線グラフの色を黄色くする	plt.plot(xdata, ydata, color='y')
sのn以降にs2が含まれるか調べる	s.find(s2, start=n) != -1
スプリンググリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='springgreen')
線幅nの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
整数nの各桁の総和	sum(map(int, str(int(n))))
日時dtををn日後に進める	dt + datetime.timedelta(days=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をディムグレーに設定する	plt.plot(xdata, ydata, c='dimgray')
日時dtにn年分、加算する	dt + datetime.timedelta(years=n)
リストxdataをパレットトルコイズ色のヒストグラムで描画する	plt.hist(xdata, color='paleturquoise')
スラグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='slategrey')
ビスク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bisque')
ライトスレイグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightslategrey')
折れ線グラフの色をライトサーモンに設定する	plt.plot(xdata, ydata, color='lightsalmon')
破線グラフの色をクリムゾンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
淡いピンク色色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightpink')
アクアマリン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='aquamarine')
折れ線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightgreen')
データフレームdfのリストalistカラムの空文字を欠損値に変換し、ドロップする	df[alist].replace('', np.nan).dropna()
破線グラフの色をグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='green')
リストxdataとリストydataについてダーク・スラテグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
折れ線グラフの色を赤くする	plt.plot(xdata, ydata, color='r')
ダークグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgray')
破線グラフの色をミディアムターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
データ列dsを10の位で丸める	ds.round(-1)
リストxdataとリストydataの折れ線グラフを描画して、点線に設定する	plt.plot(xdata, ydata, linestyle='dotted')
ラベンダー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lavender')
データフレームdfをリストalistで指定されたカラムによって昇順にソートする	df.sort_values(by=alist, ascending=True)
コーラル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='coral')
ロイヤルブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
リストxdataとリストydataについてダークゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
sを複数行対応のパターンpatternで分割する	re.split(pattern, s, flags=re.MULTILINE)
0から9までの配列を作る	np.arange(10)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgray')
ダークオーキッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkorchid')
日時dtの分数	dt.minite
リストxdataとリストydataについてパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='purple')
数式として、方程e=0を解く	sympy.solve(e)
バイオレット色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='violet')
リストxdataとリストydataについての散布図をシエナ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
データ列dsのsを欠損値に変換する	ds.replace(s, np.nan)
折れ線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, color='mediumvioletred')
ダークグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkgray')
文字列elementがセットasetに含まれないか調べる	element not in aset
散布図にグリーンイエロー色のマーカーを使う	plt.plot(xdata, ydata, c='greenyellow')
リストxdataとリストydataについて折れ線グラフを描画して、その色を小麦に設定する	plt.plot(xdata, ydata, color='wheat')
リストxdataとリストydataの折れ線グラフに左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
リストxdataとリストydataについての散布図に黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
ケンドール相関係数でデータフレームdfのリストalistカラムの相関行列	df[alist].corr(method='kendall')
オブジェクトobjをユーザ向けの文字列に変換する	str(obj)
原点からの(x,x2)の距離	math.hypot(x, x2)
オールドレース色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
リストiterableを累積する	itertools.accumulate(iterable, operator.mul)
パウダーブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='powderblue')
デックdeqの末尾にリストiterableの各要素を追加する	deq.extend(iterable)
破線グラフの色をローングリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
ロージーブラウン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトブルーに設定する	plt.plot(xdata, ydata, color='lightblue')
破線グラフの色をミディアムパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
リストxdataとリストydataについて折れ線グラフを描画して、その色を貝殻に設定する	plt.plot(xdata, ydata, color='seashell')
リストxdataとリストydataについて折れ線グラフを描画して、その色を青に設定する	plt.plot(xdata, ydata, color='blue')
リストxdataとリストydataの折れ線グラフにポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
ファイルfilenameを読み込みモードでオープンする]	open(filename, mode='r')
nからn2までのひとつ飛ばしの整数列	list(range(n, n2+1, 2))
s内にひとつでもアルファベットが含まれるか調べる	any(c.isalpha() for c in s)
黒い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='k')
カーキ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
データ列dsをn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
マルーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='maroon')
リストxdataとリストydataについて散布図を描画して、星マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
データフレームdfのカラムcolの月	df[col].dt.month
リストxdataとリストydataについて破線グラフを描画して、その色をライトシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
イテレータAとBを連続して繰り返す	for X in itertools.chain(A, B):
リストxdataとリストydataについてロイヤルブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
散布図にミスティローズ色のマーカーを使う	plt.plot(xdata, ydata, c='mistyrose')
nのn2乗	n ** n2
データフレームdfのカラムcolがリストalistに含まれる行を抽出する	df[df[col].isin(alist)]
日付adateが土曜日か調べる	adate.weekday() == 5
リストxdataとリストydataについてハリウッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
リストxdataとリストydataについて散布図を描画して、マーカーの色を紺碧に設定する	plt.plot(xdata, ydata, c='azure')
ライム色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lime')
カウンタaCounterを辞書に変換する	dict(aCounter)
リストxdataとリストydataについてダークカーキ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
文字コードnの文字	chr(n)
リストxdataとリストydataの折れ線グラフに四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
リストxdataをイエローグリーン色のヒストグラムで描画する	plt.hist(xdata, color='yellowgreen')
リストiterableから重複を取り除く	set(iterable)
破線グラフの色をスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
リストiterableの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
本日の曜日を整数で使う	datetime.datetime.today().weekday()
折れ線グラフのマーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
グラフのカラーパレットをsで指定する	sns.set(pallete=s)
セットasetからエラーなく文字列elementを取り除く	aset.discard(element)
Pandasで、フォーマットでデータフレームdfのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
ミディアムパープル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
x2をxとする	x = x2
散布図にアザミ色のマーカーを使う	plt.plot(xdata, ydata, c='thistle')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトシアンに設定する	plt.plot(xdata, ydata, color='lightcyan')
リストxdataとリストydataの一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot')
散布図に黒い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='k')
折れ線グラフの色をベージュに設定する	plt.plot(xdata, ydata, color='beige')
{x2の符号を/xに}コピーする	math.copysign(x, x2)
リストalistをビン数nでビン分割して、namesのラベルをつける	pd.cut(alist, n, labels=names)
リストxdataとリストydataの実線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
シーグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
シエナ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
データ列dsのどの値が頻出か見る	ds.mode()
sというサブディレクトリをPythonパスに加える	sys.path.append(os.path.join(os.path.dirname(__file__), s))
リストxdataとリストydataについてサドルブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
リストxdataとリストydataの折れ線グラフに、黄色い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
破線グラフの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
ダーク・スラテグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
日付adateからn月分、減算する	adate - datetime.timedelta(months=n)
リストxdataとリストydataについての散布図をオレンジレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
ダークマゼンタ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkmagenta')
リストxdataとリストydataについての散布図をライトブルー色で描画する	plt.plot(xdata, ydata, c='lightblue')
リストxdataとリストydataの折れ線グラフに、緑色の下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
折れ線グラフを実線に設定する	plt.plot(xdata, ydata, linestyle='solid')
numpyを使う	import numpy as np
日付adateをn分前に戻す	adate - datetime.timedelta(minutes=n)
本日をISO形式の文字列に変換する	datetime.datetime.today().isoformat()
sが全てアスキー文字か調べる	s.isascii()
散布図にトマト色のマーカーを使う	plt.plot(xdata, ydata, c='tomato')
リストxdataとリストydataについての散布図をダークターコイズ色で描画する	plt.plot(xdata, ydata, c='darkturquoise')
リストxdataとリストydataについての散布図をグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='green', alpha=0.5)
データフレームdfのの中で、カラムcolとカラムcol2に重複があるか見る	df.duplicated(subset=[col1, col2])
ダークオーキッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkorchid')
リストxdataとリストydataについて折れ線グラフを描画して、その色をシャルトルーズに設定する	plt.plot(xdata, ydata, color='chartreuse')
リストxdataとリストydataについての散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
データフレームdfのカラムcolがx以上の行を抽出する	df[df[col] >= x]
耐火レンガ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='firebrick')
スラグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
dfのcolがxの行を抽出する	df[df[col] == x]
改行なしにリストalistを表示する	print(alist, end='')
データ列dsが何曜日か見る	ds.dt.weekday_name
データフレームdfのカラムcolを10の位で丸める	df[col].round(-1)
nがn2以下か調べる	n <= n2
破線グラフの色をオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
データフレームdfからランダムに抽出する	df.sample()
タプルatuple内の要素が全て真か調べる	all(atuple)
散布図にドジャーブルー色のマーカーを使う	plt.plot(xdata, ydata, c='dodgerblue')
リストxdataとリストydataについて破線グラフを描画して、その色をアリスブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
xの符号をx2と同じにする	math.copysign(x, x2)
ベージュ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='beige', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、線幅nのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
ティール色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='teal')
リストxdataとリストydataについて折れ線グラフを描画して、その色をグレーに設定する	plt.plot(xdata, ydata, color='gray')
パールバイオレットレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
ダークスラテグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
データフレームdfのsを欠損値に変換する	df.replace(s, np.nan)
リストxdataとリストydataについて散布図を描画して、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
リストalistの先頭	alist[0]
折れ線グラフの色をターコイズに設定する	plt.plot(xdata, ydata, color='turquoise')
スラグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
綺麗なグラフを描画する	import seaborn as sns
本日の日時	datetime.datetime.today()
リストxdataとリストydataの折れ線グラフに、黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
リストxdataとリストydataについての散布図をレベッカパープル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
レモンシフォン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lemonchiffon')
散布図にプラム色のマーカーを使う	plt.plot(xdata, ydata, c='plum')
リストiterableのイミュータブルな集合	frozenset(iterable)
散布図にスラグレー色のマーカーを使う	plt.plot(xdata, ydata, c='slategray')
散布図にアクア色のマーカーを使う	plt.plot(xdata, ydata, c='aqua')
ダークオリーブグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkolivegreen')
折れ線グラフのマーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストxdataとリストydataについて破線グラフを描画して、その色をピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pink')
散布図に黒いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='k')
破線グラフの色をダークカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
破線グラフの色をナバホホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
リストiterableのテイルフィルタを作る	collections.deque(iterable, maxlen=n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(xdata, ydata, color='yellowgreen')
リストxdataとリストydataについて破線グラフを描画して、その色をチョコレートに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
折れ線グラフのバツマーカーを緑色に設定する	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
リストxdataとリストydataについて破線グラフを描画して、その色をサンディーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
リストxdataとリストydataについての散布図をライム色で描画する	plt.plot(xdata, ydata, c='lime')
リストxdataとリストydataについての散布図に赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
リストxdataとリストydataについての散布図をミディアムスレートブルー色で描画する	plt.plot(xdata, ydata, c='mediumslateblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をスラグレーに設定する	plt.plot(xdata, ydata, c='slategray')
データフレームdfの数値をまとめて小数点以下n桁で丸めて、インプレイスする	df.round(n, inplace=True)
Pandasで、データ列dsを日付データに変換する	pd.to_datetime(ds)
ミスティローズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mistyrose')
ホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='white')
日付adateをsでフォーマットする	adate.strftime()
sをコロンで分割し、文字列リストに変換する	s.split(':')
リストxdataとリストydataについての散布図をホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='white', alpha=0.5)
散布図にシーグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='seagreen')
リストxdataをサーモン色のヒストグラムで描画する	plt.hist(xdata, color='salmon')
ペルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='peru')
n年を日時に変換する	datetime.datetime(year=n, month=1, day=1)
日付adateの月数	adate.month
最大長をnにして両端キューを新しく作る	collections.deque(maxlen=n)
ダークマゼンタ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
ダークオリーブグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
折れ線グラフの色をダークバイオレットに設定する	plt.plot(xdata, ydata, color='darkviolet')
リストxdataとリストydataについて散布図を描画して、マーカーの色をビスクに設定する	plt.plot(xdata, ydata, c='bisque')
破線グラフの色をデピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')
データフレームを表示するとき、表示可能な最大列数を変更する	pd.set_option('display.max_columns', n)
インディアンレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='indianred')
ミディアムパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
オプションで、破壊的に操作する	inplace = True
ライトグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をピーチパフに設定する	plt.plot(xdata, ydata, color='peachpuff')
リストxdataをダークグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkgray')
リストxdataとリストydataについての散布図をチョコレート色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
コマンドの第一引数を得る	sys.argv[1]
パールゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
リストxdataとリストydataの折れ線グラフに、線幅nの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
ライトスカイブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightskyblue')
データフレームdfのカラムcolがsで始まらない行を抽出する	df[not df[col].str.startswith(s)]
xの正接の逆数	math.atan(x)
リストxdataとリストydataについて黄色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellow')
リストxdataとリストydataについてターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
データフレームdfをJSONLファイルfilenameに保存する	df.to_csv(filename)
文字列elementと文字列element2をカンマで区切って表示する	print(element, element2, sep=',')
リストxdataとリストydataについて破線グラフを描画して、その色をブラックに設定する	plt.plot(xdata, ydata, linestyle='dash', color='black')
xの双曲線正接の逆数	math.atanh(x)
グラフで使える色の一覧	matplotlib.colors.cnames
タプルatupleとタプルatuple2を連結する	atuple + atuple2
sを走査し、パターンpatternに大文字・小文字を無視してマッチするか見る	re.search(pattern, s, flags=re.IGNORECASE)
ディムグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dimgray')
リストxdataとリストydataについての散布図をハニーデュー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
ターコイズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='turquoise')
データ列dsを10の位で丸めて、整数型にする	ds.round(-1).astype(int)
スノー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='snow', alpha=0.5)
データフレームdfのリストalistカラムの欠損値を直前の値に設定する	df[alist].fillna(method='ffill')
データフレームdfから型tyのカラムの名前の一覧	df.select_dtypes(ty).columns
データフレームdfの最頻値の出現回数	df.freq()
折れ線グラフに四角マーカーを使う	plt.plot(xdata, ydata, marker='s')
データフレームdfの末尾n行を抽出する	df.tail(n)
破線グラフの色をロイヤルブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
セットasetをイミュータブルに変換する	frozenset(aset)
データフレームdfのリストalistカラムを丸めて、整数型にする	df[alist].round().astype(int)
辞書adictをJSON形式でファイル出力foutに保存する	json.dump(adict, fout, ensure_ascii=False)
シャルトルーズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
データフレームdfのカラムcolの値をdictでまとめて置き換える	df[col].replace(adict)
デピンク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='deeppink')
リストxdataを淡いピンク色色のヒストグラムで描画する	plt.hist(xdata, color='lightpink')
ライトゴールドロディイエロー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgoldenrodyellow')
黒いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='k')
リストxdataとリストydataについての散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
データ列dsを1000の位で丸めて、整数型にする	ds.round(-3).astype(int)
ファイルfilenameのファイルサイズ	os.path.get_size(filename)
データフレームdfをカラムcolによって昇順にソートして、更新する	df.sort_values(by=col, ascending=True, inplace=True)
リストxdataとリストydataについて散布図を描画して、マーカーの色をアクアに設定する	plt.plot(xdata, ydata, c='aqua')
青い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='b')
折れ線グラフの色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgrey')
ライトブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightblue')
セットasetからセットaset2を引いた差集合	aset.difference(aset2)
折れ線グラフの三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='^', markersize=n)
リストxdataとリストydataについて破線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
データフレームdfのインデックスの名前の一覧	df.index
カウンタaCounterをリセットする	aCounter.clear()
スプリンググリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='springgreen')
セットasetがセットaset2の真上位集合か調べる	aset > aset2
データ列dsの欠損値を中央値に設定する	ds.fillna(ds.median())
リストxdataとリストydataについて折れ線グラフを描画して、その色をティールに設定する	plt.plot(xdata, ydata, color='teal')
折れ線グラフのマーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
ターコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
ファイルfilenameとtextを結合する	os.path.join(filename, text)
リストxdataとリストydataについての散布図をダークバイオレット色で描画する	plt.plot(xdata, ydata, c='darkviolet')
リストxdataとリストydataの折れ線グラフに、青い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
リストxdataとリストydataについて散布図を描画して、マーカーの色をグリーンイエローに設定する	plt.plot(xdata, ydata, c='greenyellow')
データ列dsを等間隔でn個にビン分割する	pd.cut(ds, n)
黄色色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='yellow')
デックdeqをデキューする	deq.popleft()
リストxdataとリストydataについてティール色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='teal')
データ列dsの欠損値を平均値に設定する	ds.fillna(ds.mean())
破線グラフの色をオリーブに設定する	plt.plot(xdata, ydata, linestyle='dash', color='olive')
スプリンググリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='springgreen')
タプルatupleの末尾	atuple[-1]
タプルatupleの平均値	sum(atuple)/len(atuple)
カデットブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='cadetblue')
ライトグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(xdata, ydata, color='lightskyblue')
データフレームdfのカラムcolの欠損値を中央値で埋める	df[col].fillna(df[col].median())
ラベンダー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lavender')
n個からn2個取り出したときの順列の総数	math.perm(n, n2)
ライトスチールブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightsteelblue')
グレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='grey', alpha=0.5)
リストxdataとリストydataについての散布図をグリーンイエロー色で描画する	plt.plot(xdata, ydata, c='greenyellow')
ミディアムバイオレットレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
数式として、連立方程e=0,e2の解を求める	sympy.solve([e, e2])
リストxdataとリストydataについてミディアムバイオレットレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
リストxdataとリストydataについての散布図をスラグレー色で描画する	plt.plot(xdata, ydata, c='slategrey')
arrayをn個にビン分割して、namesのラベルをつける	pd.cut(array, n, labels=names)
データフレームdfのカラムcolとカラムcol2毎の標準偏差	df.groupby([col, col2], as_index=False).std()
フローラルホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
sを黄色で表示する	print(f'\033[33m{s}\033[0m')
青色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='blue')
リストxdataとリストydataについての散布図をミディアムスプリンググリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, color='blanchedalmond')
デックdeqの要素をインプレースに反転する	deq.reverse()
リストxdataとリストydataについて破線グラフを描画して、その色をオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
インディアンレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indianred')
リストxdataとリストydataについてダークサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
リストxdataをnからn2の範囲でヒストグラムにする	plt.hist(xdata, range=(n, n2))
リストxdataとリストydataについての散布図をスチールブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
リストxdataとリストydataの折れ線グラフを描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストalistの合計値	sum(alist)
sの中からs2を探す	s.find(s2)
ラベンダー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、赤い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
データフレームdfのカラムcol中の欠損値の合計を数える	df[col].isna().sum()
リストxdataをオリベドラブ色のヒストグラムで描画する	plt.hist(xdata, color='olivedrab')
リストxdataとリストydataについてアンティークホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
線幅nの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, c='mediumseagreen')
散布図にスラグレー色のマーカーを使う	plt.plot(xdata, ydata, c='slategrey')
ライトサーモン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightsalmon')
日時dtと日時dt2の時間差が何分か知る	(dt - dt2).total_seconds()//60
データフレームdf中のカラムcolを中央値でビン分割する	pd.qcut(df[col], 2)
データフレームを表示するとき、表示可能な最大行数をnに設定する	pd.set_option('display.max_rows', n)
オブジェクトobjは整数クラスか調べる	isinstance(obj, int)
オプションで、先頭のカラムをインデックスに設定する	index_col = 0
リストxdataとリストydataについて破線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
データフレームを表示するとき、小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
破線グラフの色をレベッカパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
折れ線グラフの色を紺碧に設定する	plt.plot(xdata, ydata, color='azure')
Pythonのバージョン	sys.version
リストalistを逆順にする	alist[::-1]
データフレームdfの重複していない行のみを抽出する	df[not df.duplicated(keep=False)]
ミディアムスレートブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
sのの中で大文字・小文字を無視したパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s, flags=re.IGNORECASE)
リストxdataとリストydataについて破線グラフを描画して、その色をミントクリームに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')
文字列elementがリストalistに含まれないか調べる	element not in alist
散布図に赤い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='r')
日付adateにn月分、加算する	adate + datetime.timedelta(months=n)
折れ線グラフの色をダークレッドに設定する	plt.plot(xdata, ydata, color='darkred')
カーキ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='khaki')
リストxdataとリストydataについてライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
リストxdataとリストydataについてミディアムオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
リストxdataとリストydataについての散布図をフクシア色で描画する	plt.plot(xdata, ydata, c='fuchsia')
データフレームdf中の欠損値を削除する	df.dropna()
ダークシアン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkcyan')
一点鎖線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
リストxdataとリストydataについての散布図をミスティローズ色で描画する	plt.plot(xdata, ydata, c='mistyrose')
ダークゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
スカイブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='skyblue')
右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>')
nをn2だけ増加させる	n += n2
日付adateの日数	adate.day
データフレームdfのカラムcolを丸めて、整数型にする	df[col].round().astype(int)
sを太字にする	f'\033[1m{s}\033[0m'
オプションで、改行コードを旧Macに設定する	newline = '\r'
折れ線グラフのマーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
データフレームdfのカラムcolが何日か見る	df[col].dt.day
Pandasで、フォーマットでsを日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
データフレームdfのn行以降を抽出する	df[n:]
s中のパターンpatternによるで置き換える	re.sub(pattern, repl, s)
リストxdataとリストydataについて散布図を描画して、マーカーの色をスプリンググリーンに設定する	plt.plot(xdata, ydata, c='springgreen')
赤色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='red')
リストxdataとリストydataについて散布図を描画して、マーカーの色をハニーデューに設定する	plt.plot(xdata, ydata, c='honeydew')
サドルブラウン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='saddlebrown')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムターコイズに設定する	plt.plot(xdata, ydata, c='mediumturquoise')
エラーを無視してsをバイト列に変換する	s.encode(errors='ignore')
リストxdataを縦軸、リストydataを横軸として、散布図を描画する	plt.scatter(xdata, ydata)
Pandasで、フォーマットfmtでデータフレームdfのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
データフレームdfをカラムcol毎にグループ化して、カラムcol2の標準偏差を求める	df.groupby(col)[col2].std()
リストxdataとリストydataについてダークスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
ネイビー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='navy')
リストxdataとリストydataについて散布図を描画して、右三角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
ネイビー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='navy')
ライトグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightseagreen')
sを白色で表示する	print(f'\033[37m{s}\033[0m')
リストiterableからカウンタを新規に作って、Xに代入する	X = collections.Counter(iterable)
リストxdataとリストydataについて散布図を描画して、マーカーの色をターコイズに設定する	plt.plot(xdata, ydata, c='turquoise')
オプションで、欠損値を先頭にする	na_position = 'first'
破線グラフの色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
データフレームdfとデータフレームdf2を縦方向に連結する	pd.concat([df, df2])
データフレームdf中のカラムcolをビン数nでビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
ブランチドアーモンド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='blanchedalmond')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
リストxdataとリストydataの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid')
データフレームdfの欠損値をxに設定する	df.fillna(x)
データフレームdfをカラムcol毎にグループ化する	df.groupby(col)
リストxdataをパウダーブルー色のヒストグラムで描画する	plt.hist(xdata, color='powderblue')
大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X')
カウンタaCounterから最頻出の項目回数	aCounter.most_common(0)[1]
ライトブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightblue')
散布図にカラーコードrgbのポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c=rgb)
リストxdataをライムグリーン色のヒストグラムで描画する	plt.hist(xdata, color='limegreen')
タプルatupleをリストに変換する	list(atuple)
Pandasで、データ列dsのエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
nが5の倍数か調べる	n % 5 == 0
s内のs2をn回だけs3に置き換える	s.replace(s2, s3, n)
セットasetにリストiterableの要素を全て追加する	aset.update(iterable)
アザミ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='thistle')
xはx2に近いか調べる	math.isclose(x, x2)
リストxdataとリストydataについて破線グラフを描画して、その色を淡いピンク色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
文字列elementがn回繰り返すイテラブル	itertools.repeat(element, n)
赤い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='r')
ビスク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
折れ線グラフの色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategrey')
ダークオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
リストxdataとリストydataの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークオーキッドに設定する	plt.plot(xdata, ydata, color='darkorchid')
リストxdataとリストydataについて破線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
xとx2の値をスワップする	x, x2 = x2, x
現在の作業ディレクトリをfilenameに変更する	os.chdir(os.dirname(filename))
リストxdataとリストydataについて折れ線グラフを描画して、その色をスプリンググリーンに設定する	plt.plot(xdata, ydata, color='springgreen')
リストxdataとリストydataについての散布図に赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
データフレームdfのカラムcol毎の個数	df.groupby(col).count()
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトスカイブルーに設定する	plt.plot(xdata, ydata, c='lightskyblue')
破線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色をパパイヤウィップに設定する	plt.plot(xdata, ydata, c='papayawhip')
綺麗なグラフを使う	import seaborn as sns
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークカーキに設定する	plt.plot(xdata, ydata, c='darkkhaki')
変数名をキーとして、辞書	dict(name=element)
グローバル変数の一覧	globals()
リストalistをナンバリングする	enumerate(alist)
xが無限大か調べる	math.isinf(x)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークシアグリーンに設定する	plt.plot(xdata, ydata, c='darkseagreen')
フクシア色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
破線グラフの色をライトスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
nから無限にカウントダウンする	itertools.count(start=n, step=-1)
日時dtにn分分、加算する	dt + datetime.timedelta(minutes=n)
リストxdataとリストydataについての散布図を小麦色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, c='lightslategray')
データフレームdfのカラムcol中に文字列valueと文字列value2があるか調べる	df[col].isin([value, value2])
リストxdataとリストydataについて折れ線グラフを描画して、その色をホワイトスモークに設定する	plt.plot(xdata, ydata, color='whitesmoke')
破線グラフの色をアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
散布図にイエローグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='yellowgreen')
折れ線グラフの色をシーグリーンに設定する	plt.plot(xdata, ydata, color='seagreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(xdata, ydata, color='paleturquoise')
リストxdataとリストydataについての散布図をサンディーブラウン色で描画する	plt.plot(xdata, ydata, c='sandybrown')
ホットピンク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
リストxdataとリストydataの折れ線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, color=rgb)
ミディアムオーキッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumorchid')
散布図にカラーコードrgbの星マーカーを使う	plt.plot(xdata, ydata, marker='*', c=rgb)
リストxdataとリストydataについて散布図を描画して、マーカーの色をロイヤルブルーに設定する	plt.plot(xdata, ydata, c='royalblue')
散布図にフクシア色のマーカーを使う	plt.plot(xdata, ydata, c='fuchsia')
日付adateををn週間後に進める	adate + datetime.timedelta(weeks=n)
日時dtの年数	dt.year
折れ線グラフの色を貝殻に設定する	plt.plot(xdata, ydata, color='seashell')
赤い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='r')
コマンドのn番目の引数を得る	sys.argv[n]
散布図にダークブルー色のマーカーを使う	plt.plot(xdata, ydata, c='darkblue')
ダークスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
フクシア色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='fuchsia')
カウンタaCounterとカウンタaCounter2の積集合	aCounter & aCounter2
マゼンタ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
グリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='green')
リストxdataとリストydataについての散布図をミッドナイトブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、青い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
リストxdataとリストydataについて散布図を描画して、マーカーの色をカーキに設定する	plt.plot(xdata, ydata, c='khaki')
リストxdataとリストydataについての散布図をティール色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='teal', alpha=0.5)
折れ線グラフの下三角マーカーを黒くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
オブジェクトobjが名前付きタプルか調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
データフレームdfのの中で何行、重複するか見る	df.duplicated().sum()
デックdeqが空か調べる	len(deq) == 0
リストxdataとリストydataの折れ線グラフに、線幅nのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
nの桁数	len(str(n))
散布図にポイントマーカーを使う	plt.plot(xdata, ydata, marker='.')
数式として、eを因数分解する	sympy.factor(e)
タプルatupleの各要素を関数funcに適用した結果でソートする	sorted(atuple, key=func)
ホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='white')
データフレームdf中のカラムcolを等量でn個にビン分割する	pd.qcut(df[col], n)
破線グラフの色をトマトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
改行	'\n'
リストxdataとリストydataについて散布図を描画して、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
破線グラフの色をダークスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
書式textをmappingでフォーマットする	text.format_map(mapping)
散布図に赤色のマーカーを使う	plt.plot(xdata, ydata, c='red')
リストxdataをホワイトスモーク色のヒストグラムで描画する	plt.hist(xdata, color='whitesmoke')
リストiterableを累加したイテラブル	itertools.accumulate(iterable)
データフレームdfを配列に変換する	df.values
xのラジアン	math.radians(x)
リストxdataとリストydataについて破線グラフを描画して、その色をライトサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
偽	False
リストalistの全ての要素をクリアにする	alist.clear()
散布図に下三角マーカーを使う	plt.plot(xdata, ydata, marker='v')
オリーブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olive')
sを右トリムする	s.rstrip(s2)
sを赤色で表示する	print(f'\033[31m{s}\033[0m')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategrey')
データ列dsのユニークな値	ds.unique()
nをn2だけ右シフトする	n >> n2
本日をsでフォーマットして文字列に変換する	datetime.datetime.today().strftime()
リストxdataとリストydataの折れ線グラフを描画して、色をsに設定する	plt.plot(xdata, ydata, color=s)
データフレームdfのカラムcolの欠損値を直後の値で埋める	df[col].fillna(method='bfill')
日付adateの年数	adate.year
散布図に黒い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='k')
破線グラフの色を淡いピンク色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
リストxdataとリストydataについての散布図をミスティローズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をスレートブルーに設定する	plt.plot(xdata, ydata, color='slateblue')
データフレームdfをカラムcolとカラムcol2によって昇順にソートして、更新する	df.sort_values(by=[col,col2], ascending=True, inplace=True)
リストiterableとリストiterable2をペアリングする	itertools.zip_longest(iterable, iterable2)
sを白色にする	f'\033[37m{s}\033[0m'
リストxdataとリストydataについて折れ線グラフを描画して、その色をサドルブラウンに設定する	plt.plot(xdata, ydata, color='saddlebrown')
ファイルfilenameをバイナリモードでオープンする]	open(filename, mode='rb')
リストxdataとリストydataについての散布図をターコイズ色で描画する	plt.plot(xdata, ydata, c='turquoise')
データフレームdfのカラムcolが何分か見る	df[col].dt.minute
オブジェクトobjがsという名前のプロパティを持つか調べる	hasattr(obj, s)
折れ線グラフの色をシャルトルーズに設定する	plt.plot(xdata, ydata, color='chartreuse')
折れ線グラフの色をラベンダーに設定する	plt.plot(xdata, ydata, color='lavender')
データフレームdfのカラムcolの欠損値を平均値に設定する	df[col].fillna(df[col].mean())
ライトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
データフレームdfのの中で、カラムcolとカラムcol2の重複を削除する	df.drop_duplicates(subset=[col, col2])
arrayを等量でビン数nでビン分割する	pd.qcut(array, n)
データ列dsの欠損値をxで埋める	ds.fillna(x)
折れ線グラフの色をダークマゼンタに設定する	plt.plot(xdata, ydata, color='darkmagenta')
辞書adictにキーワード引数kwargsを追加更新する	adict.update(**kwargs)
グラフを綺麗にする	import seaborn as sns
ローングリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
リストxdataとリストydataについての散布図をシャルトルーズ色で描画する	plt.plot(xdata, ydata, c='chartreuse')
散布図にマゼンタ色のマーカーを使う	plt.plot(xdata, ydata, c='magenta')
リストxdataをデピンク色のヒストグラムで描画する	plt.hist(xdata, color='deeppink')
ゴーストホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='ghostwhite')
リストxdataとリストydataについて散布図を描画して、マーカーの色をアリスブルーに設定する	plt.plot(xdata, ydata, c='aliceblue')
クリムゾン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='crimson')
ファイルfilenameをSJISで書き込み用にオープンする]	open(filename, mode='w', encoding='shift_jis')
プラム色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='plum')
xを印字できる文字列にする	ascii(x)
青い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='b')
sの右側から空白を取り除く	s.rstrip()
折れ線グラフの色をライトスチールブルーに設定する	plt.plot(xdata, ydata, color='lightsteelblue')
本日が何月か知る	datetime.datetime.today().month
データフレームdfのカラムcolがxより大きい行を抽出する	df[df[col] > x]
ファイルfilenameが存在しないか調べる	not os.path.exists(filename)
オプションで、標準出力に出力する	file = sys.stdout
nをn2で割った結果の切り上げ	(n + n2 - 1) // n2
リストxdataとリストydataについての散布図をレベッカパープル色で描画する	plt.plot(xdata, ydata, c='rebeccapurple')
ダークブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkblue')
リストiterableの長さnの順列	itertools.permutations(iterable, n)
黒い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
破線グラフの色をコーンズシルクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
タプルatupleの末尾のn要素を取り除く	atuple[:-n]
リストxdataとリストydataについての散布図をコーンフラワーブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
xにおけるガンマ関数の絶対値に自然対数をとった値	math.lgamma(x)
リストxdataとリストydataについてダークグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
データ列dsが何分か見る	ds.dt.minute
オプションで、ファイルを使う	file = sys.open(filename, 'w')
リストiterableからサンプリングする	random.sample(iterable)
グリーンイエロー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
スノー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='snow')
グラフ中の横軸にsという軸ラベルを付ける	plt.xlabel(s)
本日が何日か知る	datetime.datetime.today().day
パウダーブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
__X__カラーパレットをグラフに使う	sns.set(pallete='colorblind')
リストxdataとリストydataの折れ線グラフに、赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')
リストxdataとリストydataについてブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='brown')
リストxdataとリストydataについて折れ線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(xdata, ydata, color='antiquewhite')
リストxdataとリストydataについての散布図をオレンジレッド色で描画する	plt.plot(xdata, ydata, c='orangered')
データフレームdfのカテゴリデータをダミー変数に変換する	pd.get_dummies(df)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトグレーに設定する	plt.plot(xdata, ydata, c='lightgray')
プラットホーム	sys.platform
ミディアムスプリンググリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, c='darkslategrey')
リストxdataとリストydataについての散布図をネイビー色で描画する	plt.plot(xdata, ydata, c='navy')
nがn2で割り切れないか調べる	n % n2 != 0
点線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='dotted', color='b')
xの床	math.floor(x)
sは全て識別子名か調べる	s.isidentifier()
リストxdataとリストydataについて破線グラフを描画して、その色をダークレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
リストxdataとリストydataについての散布図をミディアムパープル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
リストxdataとリストydataの折れ線グラフをsとラベル付けして描画する	plt.plot(xdata, ydata, label=s)
オプションで、UTF8を使う	encoding = 'utf-8'
オールドレース色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='oldlace')
リストxdataとリストydataについての散布図をライトグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
CSVファイルfilenameを読み込む	pd.read_csv(filename, sep=',')
本日が土曜日か調べる	datetime.datetime.today().weekday() == 5
リストxdataとリストydataについて散布図を描画して、マーカーの色をパレットトルコイズに設定する	plt.plot(xdata, ydata, c='paleturquoise')
n×n2の二次元リスト	[[0] * n for _ in range(n2)]
リストxdataとリストydataについての散布図をアクアマリン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightgreen')
リストxdataとリストydataについての散布図をコーラル色で描画する	plt.plot(xdata, ydata, c='coral')
淡いピンク色色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightpink')
ダークレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkred')
リストiterableからカウンタを新規に作る	collections.Counter(iterable)
リストxdataとリストydataについての散布図をサドルブラウン色で描画する	plt.plot(xdata, ydata, c='saddlebrown')
リストxdataをクリムゾン色のヒストグラムで描画する	plt.hist(xdata, color='crimson')
ピアソン相関係数でデータフレームdfのカラムcolとカラムcol2の相関行列	df[[col, col2]].corr(method='pearson')
青い折れ線グラフを描画する	plt.plot(xdata, ydata, color='b')
リストxdataをブラウン色のヒストグラムで描画する	plt.hist(xdata, color='brown')
タプルatupleを逆順にする	atuple[::-1]
データフレームdfをCSVファイルでJSONLファイルfilenameに保存する	df.to_csv(filename)
ファイルfilenameの拡張子をtextに変更する	os.path.splitext(filename)[0] + text
本日が何曜日か知る	datetime.datetime.today().weekday()
カウンタaCounterの項目一覧	aCounter.keys()
データフレームdfのリストalistカラムを1000の位で丸める	df[alist].round(-3)
リストxdataとリストydataについての散布図に赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='r')
三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^')
sの文字リスト	list(s)
xの双曲線正弦	math.sinh(x)
リストxdataとリストydataの折れ線グラフを描画して、色を黄色くする	plt.plot(xdata, ydata, color='y')
折れ線グラフのバツマーカーを青くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
折れ線グラフの色をサーモンに設定する	plt.plot(xdata, ydata, color='salmon')
折れ線グラフの色をピーチパフに設定する	plt.plot(xdata, ydata, color='peachpuff')
不揃いな長さののzip	itertools.zip_longest(iterable, iterable2)
リストxdataをライトスレイグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightslategray')
表データを使う	import pandas as pd
データフレームdfのリストalistカラムを100の位で丸めて、整数型にする	df[alist].round(-2).astype(int)
トマト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='tomato')
文字列elementと文字列element2をタブで区切って表示する	print(element, element2, sep='\t')
セットasetの浅いコピー	aset.copy()
リストalistの末尾から要素をポップする	alist.pop()
xはx2である	x = x2
オプションで、改行コードをWindowsに設定する	newline = '\r\n'
リストxdataとリストydataについて破線グラフを描画して、その色をカデットブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
タプルatupleの長さ	len(atuple)
疑似乱数を生成する	random.random()
リストxdataとリストydataについて破線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
プラットフォームのユニコードの最大コードポイント	sys.maxunicode
リストxdataとリストydataについてダークブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
ピンク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pink', alpha=0.5)
ブルーバイオレット色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
sはキーワードか調べる	keyword.iskeyword(s)
sのs2をカウントする	s.count(s2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をアンティークホワイトに設定する	plt.plot(xdata, ydata, c='antiquewhite')
NaNも加えてxをダミー変数に変換する	pd.get_dummies(x, dummy_na=True)
タン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='tan')
標準エラーを使う	sys.stderr
ミディアムオーキッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumorchid')
折れ線グラフの色をアンティークホワイトに設定する	plt.plot(xdata, ydata, color='antiquewhite')
折れ線グラフの色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
リストiterableとリストiterable2の全組み合わせを繰り返す	"for x, y in itertools.product(iterable, iterable2):
    pass"
オレンジ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='orange')
オプションで、降順にする	ascending = False
リストiterableからひとつランダムに選ぶ	random.choice(iterable)
折れ線グラフの色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, color='darkolivegreen')
リストxdataとリストydataの折れ線グラフを透明度xで描画する	plt.plot(xdata, ydata, alpha=x)
リストxdataをグリーンイエロー色のヒストグラムで描画する	plt.hist(xdata, color='greenyellow')
リストalistの最初の文字列elementを探す	alist.index(element)
セットaset⊇セットaset2	aset.issuperset(aset2)
ディープスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
折れ線グラフの色をバイオレットに設定する	plt.plot(xdata, ydata, color='violet')
ライトシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
折れ線グラフに三角マーカーを使う	plt.plot(xdata, ydata, marker='^')
カデットブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='cadetblue')
nからn2を引く	n - n2
マルーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
B(イテレータ)をA(イテレータ)に続けて繰り返す	for X in itertools.chain(A, B):
リストxdataとリストydataについての散布図をラベンダー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
オプションで、エンコーディングをSJISに設定する	encoding = 'shift_jis'
散布図にシエナ色のマーカーを使う	plt.plot(xdata, ydata, c='sienna')
タプルatupleの要素を昇順にソートする	sorted(atuple, reverse=True)
ホットピンク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='hotpink')
s内にひとつでも非アスキー文字が含まれるか調べる	any(not c.isascii() for c in s)
パールゴールデンロッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='palegoldenrod')
散布図にミディアムオーキッド色のマーカーを使う	plt.plot(xdata, ydata, c='mediumorchid')
リストxdataをベージュ色のヒストグラムで描画する	plt.hist(xdata, color='beige')
1からnまでの整数列	list(range(1, n+1))
二次元リストalistをフラット化する	sum(alist)
データフレームdfのカラムcolのユニークな値	df[col].unique()
オレンジレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='orangered')
アザミ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='thistle')
sを黄色にする	f'\033[33m{s}\033[0m'
データフレームdfがどの程度、分散しているか見る	df.var()
リストxdataについてのヒストグラムを描画する際にビン数をnに設定する	plt.hist(xdata, bins=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をサーモンに設定する	plt.plot(xdata, ydata, c='salmon')
スピアマン相関係数でデータフレームdfのカラムcolとカラムcol2の相関行列	df[[col, col2]].corr(method='spearman')
日付adateからn年分、減算する	adate - datetime.timedelta(years=n)
リストxdataとリストydataについてラベンダー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavender')
ブラウン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='brown')
xの千の位で丸める	round(x, -3)
sをキャピタライズする	s.capitalize()
Pythonパスにsを追加する	sys.path.append(s)
リストxdataとリストydataについての散布図をインディアンレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
赤い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
データフレームdfのリストalistカラムのsを欠損値に変換する	df[alist].replace(s, np.nan)
折れ線グラフの色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をリネンに設定する	plt.plot(xdata, ydata, color='linen')
シャルトルーズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='chartreuse')
全ての大文字	string.ascii_uppercase
ディムグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='dimgrey')
グラフの用途を論文に設定する	sns.set(context='paper')
ペールグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='palegreen')
リストxdataとリストydataについての散布図をリネン色で描画する	plt.plot(xdata, ydata, c='linen')
リストxdataとリストydataについてインディゴ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indigo')
リストxdataをターコイズ色のヒストグラムで描画する	plt.hist(xdata, color='turquoise')
リストxdataをカーキ色のヒストグラムで描画する	plt.hist(xdata, color='khaki')
ダーク・スラテグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkslategrey')
リストxdataをナバホホワイト色のヒストグラムで描画する	plt.hist(xdata, color='navajowhite')
破線グラフの色をライトシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
アクア色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, color='mediumvioletred')
再帰エラーを防ぐために、上限をnに設定する	sys.setrecursionlimit(n)
リストxdataとリストydataの折れ線グラフを描画して、sとラベル付けする	plt.plot(xdata, ydata, label=s)
xの小数点以下'4'桁までの文字列に変換する	':.4f'.format(x)
nがn2か調べる	n == n2
コーラル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='coral', alpha=0.5)
データフレームdfのカラムの名前をカラムcolからsに付け直す	df.rename(columns={col: s})
散布図にピンク色のマーカーを使う	plt.plot(xdata, ydata, c='pink')
nがn2の倍数か調べる	n % n2 == 0
リストxdataとリストydataについて淡いピンク色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
折れ線グラフの星マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='*', markersize=n)
sの先頭でパターンpatternにASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgray')
xを実部、x2を虚部とした複素数	complex(x, x2)
リストalistの要素を昇順にソートする	sorted(alist, reverse=False)
データフレームを表示するとき、折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
リストalistから文字列elementを取り除く	alist.remove(element)
グラフを描画する	import matplotlib.pyplot as plt
データ列dsのタイムゾーンをsに設定する	ds.tz_convert(s)
ファイルパスのセパレータ記号	os.sep
リストxdataとリストydataについて散布図を描画して、マーカーの色をペルーに設定する	plt.plot(xdata, ydata, c='peru')
データフレームdfのの中で、カラムcolとカラムcol2の重複を削除する	df.drop_duplicates(subset=col)
リストalistをリストalistを境界値としてビン分割する	pd.cut(alist, alist)
データ列dsの欠損値を直後の値に設定する	ds.fillna(method='bfill')
散布図にダークサーモン色のマーカーを使う	plt.plot(xdata, ydata, c='darksalmon')
散布図にホットピンク色のマーカーを使う	plt.plot(xdata, ydata, c='hotpink')
点線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dotted', color='k')
リストxdataとリストydataの折れ線グラフに、赤い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
xのx2乗のx3剰余	pow(x, x2, x3)
リストxdataとリストydataの折れ線グラフを描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
ユーザの入力を整数として受け取る	int(input())
青色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)
データフレームdfのリストalistで指定されたカラムを抽出する	df[alist]
nの階乗	math.factorial(n)
折れ線グラフの色をモカシンに設定する	plt.plot(xdata, ydata, color='moccasin')
ミスティローズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
オプションで、バッファリングのサイズをnに設定する	buffering = n
sの先頭でパターンpatternにマッチさせる	re.match(pattern, s)
散布図にミディアムターコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='mediumturquoise')
リストxdataとリストydataについての散布図をライトシアン色で描画する	plt.plot(xdata, ydata, c='lightcyan')
折れ線グラフの色をダークシアグリーンに設定する	plt.plot(xdata, ydata, color='darkseagreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色をタンに設定する	plt.plot(xdata, ydata, c='tan')
ダークブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
カウンタaCounterをリストに変換する	list(aCounter)
リストiterableを累加する	itertools.accumulate(iterable)
破線グラフの色をレモンシフォンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
ブランチドアーモンド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
sがs2で始まるか調べる	s.startswith(s2)
ダークブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkblue')
リストxdataとリストydataの折れ線グラフに、緑色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
標準入力から1行だけ改行なしで読む	sys.stdin.readline().rstrip()
コーンフラワーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をロイヤルブルーに設定する	plt.plot(xdata, ydata, color='royalblue')
エクセルファイルファイルfilenameからエクセルファイルを読み込む	pd.read_excel(filename)
日時dtが日時dt2と同時か調べる	dt == dt2
データフレームdfのカラムcolをリストに変換する	df[col].values.tolist()
Pandasで、フォーマットfmtでデータ列dsを日付データに変換する	pd.to_datetime(ds, format=fmt)
デックdeqのn〜n2の部分要素	collections.deque(itertools.islice(deq, n, n2))
改行する	print()
ハニーデュー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='honeydew')
リストxdataとリストydataについてピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pink')
折れ線グラフの色をシエナに設定する	plt.plot(xdata, ydata, color='sienna')
ヒストグラムを使ってデータフレームdfのカラムcolを描画する	plt.hist(df[col])
s全体をASCII限定としてパターンpatternにマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)
ミディアムブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をスチールブルーに設定する	plt.plot(xdata, ydata, c='steelblue')
リストxdataをコーンズシルク色のヒストグラムで描画する	plt.hist(xdata, color='cornsilk')
Pandasで、エポック秒のsから日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで、sのエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
折れ線グラフの色をダークスレートブルーに設定する	plt.plot(xdata, ydata, color='darkslateblue')
リストxdataとリストydataについてコーンフラワーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
ロイヤルブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='royalblue')
セットasetから全ての要素を取り除く	aset.clear()
データフレームdfのカラムcol毎の最大値	df.groupby(col).max()
データ列を使う	from sympy import substitution
s内にひとつでも数字が含まれるか調べる	any(c.isdigit() for c in s)
データフレームdfのカラムcolをドロップして、更新する	df.drop(col, axis=1, inplace=True)
リストxdataとリストydataについて破線グラフを描画して、その色をロイヤルブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, color='mediumorchid')
データフレームdfから重複した行を削除する	df.drop_duplicates()
xにx2を掛ける	x * x2
セットasetをイミュータブルなセットに変換する	frozenset(aset)
ゴールド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='gold')
折れ線グラフの色をマルーンに設定する	plt.plot(xdata, ydata, color='maroon')
リストxdataとリストydataについての散布図をダークカーキ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
alistn番目から要素をポップする	alist.pop(n)
n年n2月n3日n4時n5分を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)
データフレームdfの重複した行数のマスク	df.duplicated()
リストxdataとリストydataについて散布図を描画して、マーカーの色をインディゴに設定する	plt.plot(xdata, ydata, c='indigo')
散布図にアクアマリン色のマーカーを使う	plt.plot(xdata, ydata, c='aquamarine')
データフレームdfのカテゴリデータの要約統計量	df.describe(include='O')
リストxdataとリストydataの折れ線グラフに、青い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
パープル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='purple', alpha=0.5)
リストxdataとリストydataについての散布図を小麦色で描画する	plt.plot(xdata, ydata, c='wheat')
散布図に青色のマーカーを使う	plt.plot(xdata, ydata, c='blue')
n割るn2を切り上げる	(n + n2 - 1) // n2
破線グラフの色をディープスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
正規表現を使う	import re
折れ線グラフのポイントマーカーを赤くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')
リストxdataとリストydataについての散布図をダークバイオレット色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
データフレームdfをカラムcol毎にグループ化して、sというグループを使う	df.groupby(col).get_group(s)
浮動小数点数の最小値	sys.float_info.min
破線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
リストxdataとリストydataについて折れ線グラフを描画して、その色をナバホホワイトに設定する	plt.plot(xdata, ydata, color='navajowhite')
keyが辞書adict上で未定義か調べる	key not in adict
リストxdataとリストydataについて散布図を描画して、マーカーの色をフローラルホワイトに設定する	plt.plot(xdata, ydata, c='floralwhite')
オブジェクトobjのイテレータ	iter(obj)
散布図にスカイブルー色のマーカーを使う	plt.plot(xdata, ydata, c='skyblue')
整数nを八進表現に変換する	oct(n)
JSONLファイルfilenameからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
s全体を大文字・小文字を無視してパターンpatternにマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
nとn2の商	n / n2
インディアンレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='indianred')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライムに設定する	plt.plot(xdata, ydata, color='lime')
リストxdataとリストydataについてパールバイオレットレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
s2の文字コード	ord(s2)
nをn2で割った余り	n % n2
データフレームdfのsを欠損値に変換する	df.replace(s, np.nan)
sを隔離する	sys.intern(s)
破線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
リストxdataとリストydataの実線グラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='solid', color='k')
リストxdataとリストydataの点線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dotted', color='b')
リストalistの文字列elementの位置をエラーなく使う	alist.index(element) if element in alist else -1
セットasetから文字列elementを取り除く	aset.remove(element)
数式として、sをシンボルに変換する	sympy.symbol(s)
文字列elementがタプルatupleの要素か調べる	element in atuple
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークターコイズに設定する	plt.plot(xdata, ydata, color='darkturquoise')
リストxdataとリストydataについての散布図をオリーブ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='olive', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をゲインズボロに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
セットasetから任意の要素を取り出す	aset.pop()
JSONファイルのファイル入力finを辞書に変換する	json.load(fin)
ダークグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
リストxdataとリストydataについての散布図を貝殻色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
ホワイトスモーク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='whitesmoke')
リストxdataをネイビー色のヒストグラムで描画する	plt.hist(xdata, color='navy')
フォレストグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='forestgreen')
破線グラフの色をインディアンレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indianred')
s全体がパターンpatternに大文字・小文字を無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
日付adateからn秒分、減算する	adate - datetime.timedelta(seconds=n)
リストxdataとリストydataについて破線グラフを描画して、その色をスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
ライトゴールドロディイエロー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
ネイビー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='navy', alpha=0.5)
データフレームdfの相関行列をヒートマップで描画する	sns.heatmap(df.corr())
オレンジレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orangered')
黒い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='k')
リストxdataとリストydataについて破線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークシアンに設定する	plt.plot(xdata, ydata, c='darkcyan')
リストxdataとリストydataについて散布図を描画して、マーカーの色をプラムに設定する	plt.plot(xdata, ydata, c='plum')
リストxdataとリストydataについて散布図を描画して、マーカーの色をフクシアに設定する	plt.plot(xdata, ydata, c='fuchsia')
散布図にミントクリーム色のマーカーを使う	plt.plot(xdata, ydata, c='mintcream')
リストxdataをラベンダーブラッシュ色のヒストグラムで描画する	plt.hist(xdata, color='lavenderblush')
リストxdataをライム色のヒストグラムで描画する	plt.hist(xdata, color='lime')
データフレームdfのカラムcolが正規表現sにマッチする行を抽出する	df[df[col].str.match(s)]
リストalistをタプルに変換する	tuple(alist)
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして左結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='left')
散布図にネイビー色のマーカーを使う	plt.plot(xdata, ydata, c='navy')
sの先頭で大文字・小文字を無視してパターンpatternにマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
オプションで、n番目のカラムをインデックスに設定する	index_col = n
リストxdataとリストydataについて破線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
ダークカーキ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkkhaki')
破線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='dashed', color='b')
辞書adictからkeyの値をエラーなく得る	adict.get(key, None)
fを改行を取り除いて一行ずつ読み込む	f.readline()
リストxdataとリストydataについての散布図をミディアムターコイズ色で描画する	plt.plot(xdata, ydata, c='mediumturquoise')
データフレームdfのカラムcolとカラムcol2を抽出する	df[[col, col2]]
オリーブ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='olive', alpha=0.5)
データフレームdfをJSONLファイルfilenameに小数点以下3桁まで保存する	df.to_csv(filename, float_format='%.3f')
x以下の最大の整数	math.floor(x)
リストxdataとリストydataについての散布図にカラーコードrgbの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
オプションで、sの示すエンコーディングを使う	encoding = s
バイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='violet')
ミディアムバイオレットレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumvioletred')
リストxdataとリストydataについてミディアムブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
ヒストグラムを半透明にする	plt.hist(xdata, alpha=0.5)
s中の大文字・小文字を無視したパターンpatternよって置き換える	re.sub(pattern, repl, s, flags=re.IGNORECASE)
データフレームdfの値を正規表現patternでまとめてsに置き換える	df.replace(pattern, s, regex=True)
折れ線グラフの色をインディゴに設定する	plt.plot(xdata, ydata, color='indigo')
散布図にダークシアン色のマーカーを使う	plt.plot(xdata, ydata, c='darkcyan')
データフレームdfのカラムcolの母標準偏差	df[col].std(ddof=0)
散布図にダークオーキッド色のマーカーを使う	plt.plot(xdata, ydata, c='darkorchid')
ダークターコイズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkturquoise')
データフレームdfのカラムcolの欠損値を最大値で埋める	df[col].fillna(df[col].max())
sが平仮名か調べる	('ぁ' <= s <= 'ん')
リストxdataとリストydataについて破線グラフを描画して、その色をフローラルホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
リストxdataとリストydataについて破線グラフを描画して、その色をリネンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='linen')
逆順のデックdeqを使う	reversed(deq)
破線グラフの色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
リストxdataとリストydataについての散布図をマルーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='brown')
散布図にパールゴールデンロッド色のマーカーを使う	plt.plot(xdata, ydata, c='palegoldenrod')
ファイルfilenameを追加モードでオープンする]	open(filename, mode='a')
リストxdataをペールグリーン色のヒストグラムで描画する	plt.hist(xdata, color='palegreen')
xの小数点以下'3'桁までの文字列に変換する	':.3f'.format(x)
数式として、eを部分分数に展開する	sympy.apart(e)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトコーラルに設定する	plt.plot(xdata, ydata, c='lightcoral')
散布図にライトスレイグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightslategray')
データ列dsの欠損値を平均値で埋める	ds.fillna(ds.mean())
貝殻色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='seashell')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgrey')
リストxdataとリストydataについてライトゴールドロディイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
sのの中で複数行対応のパターンpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
リストxdataとリストydataについての散布図を青色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
ライトスチールブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightsteelblue')
ライトグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightseagreen')
カウンタaCounterのユニークな項目を列挙する	list(aCounter)
全ての８進数字	string.octdigits
xの十の位で丸める	round(x, -1)
ベージュ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='beige')
リストxdataをライトグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightgray')
リストxdataとリストydataについての散布図にカラーコードrgbのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
__X__カラーパレットをグラフに使う	sns.set(pallete='deep')
リストxdataとリストydataについて破線グラフを描画して、その色をサドルブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
折れ線グラフの色をスチールブルーに設定する	plt.plot(xdata, ydata, color='steelblue')
日時dtが火曜日か調べる	dt.weekday() == 1
zがマイナス無限大に近づくときのeの極限値を求める	sympy.limit(e, z, -oo)
折れ線グラフの色をダークカーキに設定する	plt.plot(xdata, ydata, color='darkkhaki')
ミディアムターコイズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumturquoise')
データフレームdfのリストalistカラムの相関行列をヒートマップで描画する	sns.heatmap(df[alist].corr())
パールバイオレットレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
デックdeqに文字列elementをエンキューする	deq.appendleft(element)
リストxdataとリストydataについて折れ線グラフを描画して、その色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, color='lavenderblush')
リストalistをランダムにシャッフルする	random.shuffle(alist)
リストxdataとリストydataについて破線グラフを描画して、その色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
破線グラフの色をリネンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='linen')
ファイルfilenameから追加ストリームをオープンして]、fとする	f = open(filename, mode='a')
辞書adictのエントリの一覧	adict.items()
散布図にダークシアグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='darkseagreen')
リストxdataとリストydataについての散布図をローングリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
破線グラフの色をサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
リストxdataとリストydataについての散布図をダークシアン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をホワイトスモークに設定する	plt.plot(xdata, ydata, c='whitesmoke')
データフレームdf中のカラムcolを四分位数ごとにビン分割する	pd.qcut(df[col], 4)
日時dtをタイムスタンプに変換する	dt.timestamp()
既存のファイルfilenameをEUCで追加できるようにオープンする]	open(filename, mode='a', encoding='euc_jp')
破線グラフの色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
散布図にフォレストグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='forestgreen')
リストxdataとリストydataについての散布図をゲインズボロ色で描画する	plt.plot(xdata, ydata, c='gainsboro')
円周率	math.pi
データフレームdfのカラムcol2を型tyに変換し、カラムcolに代入する	df[col] = df[col2].astype(ty)
リストxdataとリストydataについて破線グラフを描画して、その色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
破線グラフの色をドジャーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
リストxdataとリストydataについてダークシアグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
データフレームdfをリストalistで指定されたカラムによって降順に破壊的にソートする	df.sort_values(by=alist, ascending=False, inplace=True)
リストxdataとリストydataについて折れ線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(xdata, ydata, color='dodgerblue')
リストxdataとリストydataについて破線グラフを描画して、その色をハリウッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
リストxdataとリストydataについてペルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peru')
リストalist内の要素が全て真か調べる	all(alist)
リストxdataをパープル色のヒストグラムで描画する	plt.hist(xdata, color='purple')
リストxdataとリストydataについてミディアムスプリンググリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
データフレームdfの欠損値を直後の値で埋める	df.fillna(method='bfill')
リストalistの末尾からn番目以前の部分を取り出す	alist[:-n]
データフレームdfの数値をまとめて丸める	df.round()
sを最後のs2で二分し、前半の文字列を使う	s.rpartition(s2)[0]
ミディアムシアグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumseagreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色をグレーに設定する	plt.plot(xdata, ydata, c='gray')
折れ線グラフの色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, color='cornflowerblue')
数式として、eのzを微分する	sympy.diff(e, z)
リストxdataとリストydataについての散布図をグリーンイエロー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
ホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='white', alpha=0.5)
データフレームdfをカラムcol毎にグループ化して、カラムcol2の分散を求める	df.groupby(col)[col2].var()
散布図にパールバイオレットレッド色のマーカーを使う	plt.plot(xdata, ydata, c='palevioletred')
日時dtと日時dt2の時間差を秒数で求める	(dt - dt2).total_seconds()//60
リストxdataとリストydataについての散布図をスノー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='snow', alpha=0.5)
整数nがタプルatupleのどれかか調べる	n in atuple
データ列dsが何月か見る	ds.dt.month
日時dtからn秒分、減算する	dt - datetime.timedelta(seconds=n)
リストxdataをオリーブ色のヒストグラムで描画する	plt.hist(xdata, color='olive')
リストalistにリストalist2を追加して拡張する	alist.extend(alist2)
リストxdataとリストydataについての散布図をダーク・スラテグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
最大長をnにして両端キューを新しく作って、Xに代入する	X = collections.deque(maxlen=n)
10を底とするxの対数	math.log10(x)
リストxdataとリストydataの折れ線グラフに大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
リストxdataとリストydataについて散布図を描画して、マーカーの色をロージーブラウンに設定する	plt.plot(xdata, ydata, c='rosybrown')
aとa2を好き	a.index = a / 1
日付adateにn週間分、加算する	adate + datetime.timedelta(weeks=n)
ミディアムアクアマリン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumaquamarine')
リストxdataとリストydataについての散布図をミッドナイトブルー色で描画する	plt.plot(xdata, ydata, c='midnightblue')
日付adateををn年後に進める	adate + datetime.timedelta(years=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークバイオレットに設定する	plt.plot(xdata, ydata, c='darkviolet')
文字コードnを文字に変換する	chr(n)
オプションで、どの行もヘッダにしない	header = None
データ列dsの分	ds.dt.minute
タプルatupleの先頭を取り除く	atuple[1:]
破線グラフの色をマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='magenta')
プラム色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='plum')
破線グラフの色をライトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
データフレームdfのカラムcol、カラムcol2、カラムcol3を抽出する	df[[col, col2, col3]]
ダークマゼンタ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkmagenta')
ファイルfilenameをオープンして]、バイナリ書き込みストリームを使う	open(filename, mode='wb')
折れ線グラフの色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, color='mediumorchid')
リストxdataをダークサーモン色のヒストグラムで描画する	plt.hist(xdata, color='darksalmon')
リストxdataとリストydataについて散布図を描画して、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
リストxdataとリストydataについてシーグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
sを空白で区切って文字列リストに変換する	s.split()
折れ線グラフの色をアリスブルーに設定する	plt.plot(xdata, ydata, color='aliceblue')
日付adateと日付adate2の時間差が何分か知る	(adate - adate2).total_seconds()//60
リストalistの末尾	alist[-1]
オレンジレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
データフレームdfの欠損値を直後の値に設定する	df.fillna(method='bfill')
黒い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
スラグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='slategrey')
リストiterableからクラスCのインスタンスを新しく作る	C._make(iterable)  # issubclass(C, tuple)
リストalistが空でないか調べる	len(alist) != 0
ライトスカイブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
数式として、eの簡略化を行う	sympy.sympify(e)
リストxdataとリストydataについて散布図を描画して、マーカーの色をディープスカイブルーに設定する	plt.plot(xdata, ydata, c='deepskyblue')
ハニーデュー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='honeydew')
sのHEXから浮動小数点数に変換する	float.fromhex(s)
リストxdataとリストydataについての散布図をダークオレンジ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
fをクローズする	f.close()
sからs2のパターンで日時に変換する	datetime.datetime.strptime(s, s2)
ピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pink')
折れ線グラフのポイントマーカーを黄色くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして右結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='right')
日時dtと日時dt2の時間差を秒数で求める	(dt - dt2).total_seconds()
リストxdataをミッドナイトブルー色のヒストグラムで描画する	plt.hist(xdata, color='midnightblue')
リストxdataとリストydataについての散布図をロイヤルブルー色で描画する	plt.plot(xdata, ydata, c='royalblue')
散布図にグレー色のマーカーを使う	plt.plot(xdata, ydata, c='gray')
リストxdataをハリウッド色のヒストグラムで描画する	plt.hist(xdata, color='burlywood')
破線グラフの色をライトスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, color='mediumspringgreen')
現在の最大の再帰数	sys.getrecursionlimit()
データフレームdfのn分位数	df.quantile(n/100)
ライトグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightgray')
ダークブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
リストxdataとリストydataについての散布図をダークサーモン色で描画する	plt.plot(xdata, ydata, c='darksalmon')
小麦色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='wheat')
リストxdataとリストydataの折れ線グラフを描画する	plt.plot(xdata, ydata)
sの平仮名を片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x')
サイコロ	random.randint(1, 6)
折れ線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgray')
カデットブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
コーンフラワーブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='cornflowerblue')
プラム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='plum')
日時dtからn時間分、減算する	dt - datetime.timedelta(hours=n)
sのn番目より前にs2が含まれるか調べる	s.find(s2, end=n) != -1
fにxを文字列に変換して書き込む	f.write(str(x))
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightseagreen')
リストxdataとリストydataの折れ線グラフに、黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
パープル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='purple')
ミディアムターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
リストxdataとリストydataについて折れ線グラフを描画して、その色をプラムに設定する	plt.plot(xdata, ydata, color='plum')
リストxdataをゲインズボロ色のヒストグラムで描画する	plt.hist(xdata, color='gainsboro')
オプションで、ファイルに出力する	file = sys.open(filename, 'w')
正規表現をインポートする	import re
データフレームdfのn行目を抽出する	df.loc[n]
文字列elementの出力を改行なしに行う	print(n, end='')
リストxdataとリストydataについて破線グラフを描画して、その色を小麦に設定する	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
ゲインズボロ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='gainsboro')
リストxdataとリストydataについての散布図をゴールデンロッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
データフレームdfをカラムcolによってソートして、更新する	df.sort_values(by=col, inplace=True)
散布図にライトグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightgrey')
sのn番目	s[n]
nから無限にカウントアップする	itertools.count(start=n)
日付adateをsでフォーマットして文字列に変換する	adate.strftime()
折れ線グラフのラベルをsに設定する	plt.plot(xdata, ydata, label=s)
ライトイエロー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightyellow')
折れ線グラフの三角マーカーを赤くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
リストxdataとリストydataについてホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='white')
ダークグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
データフレームdfのカラムcolの欠損値をxで埋める	df[col].fillna(x)
リストxdataをダークスラテグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkslategray')
データ列dsを小数点以下n桁で丸める	ds.round(n)
ゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
リストxdataとリストydataについて破線グラフを描画して、その色をコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='coral')
n個の整数列	list(range(n))
リストxdataとリストydataについての散布図をミディアムブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
データフレームdfの欠損値を最大値で埋める	df.fillna(df.max())
ダークサーモン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darksalmon')
散布図にオレンジ色のマーカーを使う	plt.plot(xdata, ydata, c='orange')
sのnからとn2までの間にs2が含まれるか調べる	s.find(s2, start=n, end=n2) != -1
日時dtををn時間後に進める	dt + datetime.timedelta(hours=n)
データ列dsを等量でビン数nでビン分割する	pd.qcut(ds, n)
サーモン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='salmon')
紺碧色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='azure')
sをUTF8でバイト列に変換する	s.encode(encoding='utf-8', errors='strict')
オリベドラブ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='olivedrab')
黒い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='k')
オプションで、エンコーディングをUTF8に設定する	encoding = 'utf-8'
リストxdataとリストydataの折れ線グラフに、大きさnのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markersize=n)
ふたつの辞書を合体する	adict | adict2
データ列dsの欠損値をxに設定する	ds.fillna(x)
タプルatupleの最初の文字列elementを探す	atuple.index(element)
リストxdataとリストydataについてライトスチールブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
リストxdataとリストydataの折れ線グラフに、緑色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
xの小数点以下第n位で丸める	round(x, n)
黄色色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
日時dtをsでフォーマットして文字列に変換する	dt.strftime()
データ列dsからユニークな要素を抽出し、リスト化する	ds.unique().tolist()
リストxdataをライトスカイブルー色のヒストグラムで描画する	plt.hist(xdata, color='lightskyblue')
リストxdataをダークターコイズ色のヒストグラムで描画する	plt.hist(xdata, color='darkturquoise')
データフレームdfのデータ型の一覧	df.dtypes
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークスレートブルーに設定する	plt.plot(xdata, ydata, c='darkslateblue')
リストxdataとリストydataについての散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
nを切り捨てながらn2分の一にする	n //= n2
JSON形式のsを辞書に変換する	json.loads(s)
ブラック色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)
黒い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='k')
ライトグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgreen')
リネン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='linen', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトグレーに設定する	plt.plot(xdata, ydata, c='lightgrey')
スカイブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='skyblue')
折れ線グラフの色をゴーストホワイトに設定する	plt.plot(xdata, ydata, color='ghostwhite')
折れ線グラフの色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, color='palegoldenrod')
一点鎖線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
破線グラフの色をライトコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
ネイビー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='navy')
ゴールド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='gold')
リストxdataとリストydataの実線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color='r')
リストxdataとリストydataについて破線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
リストxdataとリストydataについての散布図にカラーコードrgbの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
スクリプトファイルと同じディレクトリのファイルfilenameのパス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filename)
日付adateが何月か知る	adate.month
オブジェクトobjのtextプロパティを削除する	delattr(obj, text)
デピンク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をプラムに設定する	plt.plot(xdata, ydata, linestyle='dash', color='plum')
ブルーバイオレット色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='blueviolet')
nからn間隔で無限にカウントアップする	itertools.count(start=n, step=n2)
ディープスカイブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='deepskyblue')
ミディアムターコイズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumturquoise')
AとBの二重ループを単ループにする	"for x, y in itertools.product(iterable, iterable2):
    pass"
散布図に赤い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='r')
リストxdataとリストydataについてグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='green')
デックdeqが空でないか調べる	len(deq) != 0
リストxdataとリストydataの折れ線グラフに、大きさnの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markersize=n)
リストxdataとリストydataについての散布図をオールドレース色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
リストxdataとリストydataの折れ線グラフをsの色で描画する	plt.plot(xdata, ydata, color=s)
名前付きタプルオブジェクトobjを辞書に変換する	obj._asdict()  # isinstance(obj, NamedTuple)
現在のタイムスタンプ	int(time.time())
リストxdataとリストydataについての散布図をラベンダーブラッシュ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
黒い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='k')
入力から1行読み取る	input()
リストxdataとリストydataについての散布図をライトスカイブルー色で描画する	plt.plot(xdata, ydata, c='lightskyblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をリネンに設定する	plt.plot(xdata, ydata, c='linen')
リストiterableの全順列	itertools.permutations(iterable)
既存のファイルfilenameをUTF8で追加できるようにオープンする]	open(filename, mode='a', encoding='utf-8')
xの絶対値	abs(x)
データ列dsとデータ列ds2から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
ファイルfilenameを書き込みモードでオープンして]、fとする	f = open(filename, mode='w')
リストxdataとリストydataについての散布図をブランチドアーモンド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
リストxdataをミスティローズ色のヒストグラムで描画する	plt.hist(xdata, color='mistyrose')
折れ線グラフのバツマーカーを黒くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
散布図にミディアムアクアマリン色のマーカーを使う	plt.plot(xdata, ydata, c='mediumaquamarine')
{タプルatupleを/ひとつ置きに}取り出す	atuple[::2]
タン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='tan', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、線幅nの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
データフレームdfをカラムcolとカラムcol2によってソートして、更新する	df.sort_values(by=[col,col2], inplace=True)
リストxdataとリストydataについてシルバー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='silver')
リストalistの先頭のn要素を取り除く	alist[n:]
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトサーモンに設定する	plt.plot(xdata, ydata, c='lightsalmon')
日時dtをn週間前に戻す	dt - datetime.timedelta(weeks=n)
リストxdataをミディアムバイオレットレッド色のヒストグラムで描画する	plt.hist(xdata, color='mediumvioletred')
ハリウッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='burlywood')
シエナ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='sienna')
散布図にディープスカイブルー色のマーカーを使う	plt.plot(xdata, ydata, c='deepskyblue')
リストalistのn番目の要素を削除する	del alist[n]
リストxdataとリストydataについての散布図をミディアムオーキッド色で描画する	plt.plot(xdata, ydata, c='mediumorchid')
データフレームdfから破壊的に重複した行を削除する	df.drop_duplicates(inplace=True)
タブ	'\t'
リストxdataとリストydataについて折れ線グラフを描画して、その色をミントクリームに設定する	plt.plot(xdata, ydata, color='mintcream')
x以上の最小の整数	math.ceil(x)
sを積極的に英小文字に変換する	s.casefold()
x2をxに設定する	x = x2
リストxdataとリストydataについての散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
sの左側からs2を取り除く	s.lstrip(s2)
折れ線グラフのマーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
リストalistを中央値でビン分割する	pd.qcut(alist, 2)
リストxdataとリストydataについて折れ線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(xdata, ydata, color='cornsilk')
リストxdataとリストydataについての散布図をライトブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
折れ線グラフの星マーカーを黄色くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
データフレームdfを転置する	df.T
文字列element∉セットaset	element not in aset
スプリンググリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
リストxdataとリストydataについての散布図をアクアマリン色で描画する	plt.plot(xdata, ydata, c='aquamarine')
データ列dsをカテゴリデータに変換する	ds.astype(object)
リストxdataとリストydataの黒い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='k')
リストiterableとリストiterable2をペアのリストにする	itertools.zip_longest(iterable, iterable2)
本日が火曜日か調べる	datetime.datetime.today().weekday() == 1
散布図にコーラル色のマーカーを使う	plt.plot(xdata, ydata, c='coral')
sをs2で二分し、、後半の文字列を使う	s.partition(s2)[-1]
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして内部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='inner')
破線グラフの色をブラックに設定する	plt.plot(xdata, ydata, linestyle='dash', color='black')
リストiterableのコンビネーション	itertools.combinations(iterable, n)
リストxdataとリストydataの破線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='dashed', color='r')
s2パターンのsを日時に変換する	datetime.datetime.strptime(s, s2)
散布図にラベンダー色のマーカーを使う	plt.plot(xdata, ydata, c='lavender')
データフレームdfのリストalistカラムの歪度	df[alist].kurt()
リストxdataとリストydataについて破線グラフを描画して、その色をオレンジレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
空の両端キューを新しく作る	collections.deque()
折れ線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightseagreen')
タン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tan')
文字列elementがタプルatupleに含まれないか調べる	element not in atuple
データフレームdfのカラムcolを丸める	df[col].round()
カデットブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
データフレームdfの最頻値	df.mode()
nからn2までの整数乱数を生成する	random.randint(n, n2)
リストxdataとリストydataについて破線グラフを描画して、その色をオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orange')
リストxdataとリストydataについてダークターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
リストxdataとリストydataの折れ線グラフを描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
リストxdataとリストydataについての散布図をアクア色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
グレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='grey')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
sがs2と同じか比較する	s == s2
文字列elementが無限に繰り返すイテラブル	itertools.repeat(element)
データフレームdfのカラムcolの欠損値を最小値で埋める	df[col].fillna(df[col].min())
s全体がパターンpatternにマッチするか見る	re.fullmatch(pattern, s)
破線グラフの色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
ナバホホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
リストxdataを耐火レンガ色のヒストグラムで描画する	plt.hist(xdata, color='firebrick')
リストxdataとリストydataについての散布図をフローラルホワイト色で描画する	plt.plot(xdata, ydata, c='floralwhite')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライムグリーンに設定する	plt.plot(xdata, ydata, c='limegreen')
TSVファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
フローラルホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
ペアリストpairsからカウンタを作る	collections.Counter(dict(pairs))
ダークグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
折れ線グラフの右三角マーカーを赤くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')
日付adateが水曜日か調べる	adate.weekday() == 2
NaN	math.nan
リストxdataとリストydataについての散布図をダークオーキッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
リストxdataをアリスブルー色のヒストグラムで描画する	plt.hist(xdata, color='aliceblue')
リストxdataとリストydataについてロージーブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
リストxdataとリストydataについての散布図をディムグレー色で描画する	plt.plot(xdata, ydata, c='dimgrey')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, color='mediumslateblue')
日付adateと日付adate2の時間差を秒数で求める	(adate - adate2).total_seconds()//60
リストxdataとリストydataについての散布図をスレートブルー色で描画する	plt.plot(xdata, ydata, c='slateblue')
sのの中でパターンpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s)
cから辞書adictを引く	aCounter.subtract(adict)
リストxdataとリストydataについての散布図をダークグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
データフレームdfのリストalistカラム中の欠損値の合計を数える	df[alist].isna().sum()
データ列dsの欠損値を最大値に設定する	ds.fillna(ds.max())
リストxdataとリストydataについての散布図をペールグリーン色で描画する	plt.plot(xdata, ydata, c='palegreen')
ディムグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='dimgrey')
セットasetがセットaset2の部分集合か調べる	aset.issubset(aset2)
ダークスラテグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
カウンタaCounterを低頻出順に列挙する	aCounter.most_common()[::-1]
データ列dsの文字列長を列として使う	ds.str.len()
リストxdataをダークスレートブルー色のヒストグラムで描画する	plt.hist(xdata, color='darkslateblue')
散布図にシルバー色のマーカーを使う	plt.plot(xdata, ydata, c='silver')
リストxdataとリストydataの折れ線グラフに、大きさnの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markersize=n)
xとx2から成るペア	(x, x2)
折れ線グラフに大バツマーカーを使う	plt.plot(xdata, ydata, marker='X')
リストxdataとリストydataについてダークオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
xの余弦	math.cos(x)
リストxdataとリストydataの折れ線グラフに、線幅nの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
sを式として評価する	eval(s)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライムに設定する	plt.plot(xdata, ydata, c='lime')
カウンタaCounterのそれぞれの項目を、そのカウント回数	aCounter.elements()
リストxdataとリストydataについて散布図を描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
sの先頭でASCII限定としてパターンpatternにマッチさせる	re.match(pattern, s, flags=re.ASCI)
データフレームdfのカラムcolの最頻値	df[col].mode()
データフレームdfのカラムcolが何年か見る	df[col].dt.year
データフレームdfの歪度	df.kurt()
リストxdataとリストydataについての散布図をブラック色で描画する	plt.plot(xdata, ydata, c='black')
リストxdataとリストydataについて散布図を描画して、マーカーの色をローングリーンに設定する	plt.plot(xdata, ydata, c='lawngreen')
折れ線グラフにポイントマーカーを使う	plt.plot(xdata, ydata, marker='.')
sが全て英大文字か調べる	s.isupper()
リストxdataとリストydataについてライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
タプルatupleをナンバリングする	enumerate(atuple)
リストxdataとリストydataについて散布図を描画して、マーカーの色をアザミに設定する	plt.plot(xdata, ydata, c='thistle')
データフレームdfの相関行列	df.corr()
パパイヤウィップ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='papayawhip')
sをシアンにする	f'\033[36m{s}\033[0m'
ライトシアン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightcyan')
ライトサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
リストxdataとリストydataについて破線グラフを描画して、その色をシルバーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='silver')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークサーモンに設定する	plt.plot(xdata, ydata, color='darksalmon')
リストxdataとリストydataについての散布図をダークブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
データフレームdfの尖度	df.skew()
リストxdataとリストydataについてサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='salmon')
破線グラフの色をミディアムブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
散布図にインディゴ色のマーカーを使う	plt.plot(xdata, ydata, c='indigo')
nプラスn2	n + n2
ダークオリーブグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkolivegreen')
ネイビー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navy')
オプションで、標準エラーに出力する	file = sys.stderr
辞書adictのエントリ数	len(adict)
x2をxに代入する	x = x2
リストxdataをライトスレイグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightslategrey')
n2がn以上、かつ、n3以下か調べる	n <= n2 and n2 <= n3
ティール色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='teal', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
折れ線グラフの色をレモンシフォンに設定する	plt.plot(xdata, ydata, color='lemonchiffon')
名前付きタプルオブジェクトobjのフィールド名の一覧	"if isinstance(obj, NamedTuple):
    obj._fields"
無限にカウントアップする	itertools.count()
データフレームdfのカラムcolがどの程度、分散しているか見る	df[col].var()
リストxdataとリストydataについて折れ線グラフを描画して、その色をオーキッドに設定する	plt.plot(xdata, ydata, color='orchid')
データ列dsを四分位数ごとにビン分割する	pd.qcut(ds, 4)
xをx2で割った剰余	math.remainder(x, x2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークグレーに設定する	plt.plot(xdata, ydata, c='darkgray')
リストxdataとリストydataの折れ線グラフに、黄色い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
リストxdataとリストydataの折れ線グラフに、大きさnの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markersize=n)
データ列dsの要約統計量	ds.describe()
x2を底とするxの対数	math.log(x, x2)
浮動小数点数の最大値	sys.float_info.max
データフレームdfのリストalistカラムの欠損値を直後の値で埋める	df[alist].fillna(method='bfill')
データフレームdfとデータフレームdf2をカラムcolをキーにして左結合する	pd.merge(df, df2, on=col, how='left')
破線グラフの色をパレットトルコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
TSVファイルfilenameを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
xの小数点以下'2'桁までの文字列に変換する	':.2f'.format(x)
日付adateをn年前に戻す	adate - datetime.timedelta(years=n)
ファイルfilenameを書き込みできるようにオープンする]	open(filename, mode='w')
赤いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')
ピアソン相関係数でデータフレームdfのリストalistカラムの相関行列	df[alist].corr(method='pearson')
リストxdataとリストydataについての散布図をインディゴ色で描画する	plt.plot(xdata, ydata, c='indigo')
折れ線グラフを破線に設定する	plt.plot(xdata, ydata, linestyle='dashed')
ナバホホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='navajowhite')
sを大文字・小文字を無視したパターンpatternで分割する	re.split(pattern, s, flags=re.IGNORECASE)
日時dtからn週間分、減算する	dt - datetime.timedelta(weeks=n)
リストxdataとリストydataについての散布図にカラーコードrgbの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
データフレームdfのリストalistカラムの要約統計量	df[alist].describe()
データフレームdfのインデックスがnの行を抽出する	df.loc[n]
sは全て印字できるか調べる	s.isprintable()
散布図にミディアムスレートブルー色のマーカーを使う	plt.plot(xdata, ydata, c='mediumslateblue')
リストxdataとリストydataの一点鎖線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
ゲインズボロ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='gainsboro')
第nコマンド引数を得る	sys.argv[n]
データフレームdfのカラムcolとカラムcol2毎の合計	df.groupby([col, col2], as_index=False).sum()
カウンタaCounterを集合に変換する	set(aCounter)
データフレームを表示するとき、n列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)
リストalistを引数として展開して表示する	print(*alist, sep=',')
リストxdataとリストydataについて散布図を描画して、マーカーの色をサンディーブラウンに設定する	plt.plot(xdata, ydata, c='sandybrown')
データフレームdfのインデックスをリセットする	df.reset_index()
3×3の単位行列を作る	np.eye(3)
リストxdataとリストydataについての散布図をダークスレートブルー色で描画する	plt.plot(xdata, ydata, c='darkslateblue')
パープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='purple')
リストxdataとリストydataについての散布図をパールバイオレットレッド色で描画する	plt.plot(xdata, ydata, c='palevioletred')
折れ線グラフの色をサンディーブラウンに設定する	plt.plot(xdata, ydata, color='sandybrown')
データ列dsを中央値でビン分割する	pd.qcut(ds, 2)
プラム色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='plum')
破線グラフの色をマルーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
整数nのビット長	n.bit_length()
sの両端からs2を取り除く	s.strip(s2)
データフレームdfのカラムcol中にいくつ文字列valueがあるか数える	df[col].isin([value]).sum()
リストxdataとリストydataについて破線グラフを描画して、その色をマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='magenta')
リストxdataとリストydataについての散布図をダークオリーブグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
リストxdataとリストydataについての散布図をパパイヤウィップ色で描画する	plt.plot(xdata, ydata, c='papayawhip')
グラフ中のフォントを日本語表示に設定する	sns.set(font='IPAexGothic')
データフレームdfをカラムcol毎にグループ化して、カラムcol2の合計を求める	df.groupby(col)[col2].sum()
データフレームdfのカラムcolが正規表現sにマッチしない行を抽出する	df[not df[col].str.match(s)]
オリーブ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='olive')
デピンク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='deeppink')
散布図にティール色のマーカーを使う	plt.plot(xdata, ydata, c='teal')
データフレームdfのリストalistカラムの欠損値を最頻値に設定する	df[alist].fillna(df[alist].mode().iloc[0])
折れ線グラフの色をスカイブルーに設定する	plt.plot(xdata, ydata, color='skyblue')
リストxdataを黄色色のヒストグラムで描画する	plt.hist(xdata, color='yellow')
リストxdataとリストydataの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
タプルatupleをn回、連結する	atuple * n
スクリプトファイルの絶対パス	os.path.abspath(__file__)
sをユニコードエスケープでバイト列に変換する	s.encode(encoding='unicode_escape')
日付adateにn分分、加算する	adate + datetime.timedelta(minutes=n)
ハニーデュー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
リストxdataをゴールド色のヒストグラムで描画する	plt.hist(xdata, color='gold')
リストxdataとリストydataについてダークバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
折れ線グラフの四角マーカーを黄色くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
赤い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='r')
辞書adictのキーの一覧	adict.keys()
nからn2の範囲	range(n, n2)
有理数を使う	import fractions
全ての印字文字	string.printable
リストxdataとリストydataの折れ線グラフに、黄色いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
最大長をnにしてリストiterableから両端キューを作って、Xに代入する	X = collections.deque(iterable, maxlen=n)
データフレームdfの欠損値をxで埋める	df.fillna(x)
リストxdataとリストydataについて折れ線グラフを描画して、その色をシーグリーンに設定する	plt.plot(xdata, ydata, color='seagreen')
グラフの用途をスライドに設定する	sns.set(context='talk')
ミディアムブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumblue')
辞書adictをチェーンマップに変換する	collections.ChainMap(adict)
ライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
データフレームdfのリストalistカラム中に文字列valueと文字列value2がいくつあるか数える	df[alist].isin([value, value2]).sum()
ピンク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='pink')
破線グラフの色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gray')
リストxdataとリストydataについて折れ線グラフを描画して、その色を赤に設定する	plt.plot(xdata, ydata, color='red')
リストalistをイミュータブルにする	tuple(alist)
破線グラフの色をパウダーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
オリーブ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='olive')
数式として、eを数値計算する	float(e)
sをトリムする	s.strip()
データフレームdfのカラムcolの時	df[col].dt.hour
xの百の位で丸める	round(x, -2)
リストxdataとリストydataについての散布図をホワイトスモーク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
リストxdataとリストydataについての散布図をシアン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
オブジェクトobjは辞書クラスか調べる	isinstance(obj, dict)
データフレームdfをカラムcolとカラムcol2によって昇順に破壊的にソートする	df.sort_values(by=[col,col2], ascending=True, inplace=True)
赤い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
本日の年数	datetime.datetime.today().year
小麦色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
ファイルfilenameからバイナリストリームをオープンして]、fとする	f = open(filename, mode='rb')
リストxdataを貝殻色のヒストグラムで描画する	plt.hist(xdata, color='seashell')
ダークスラテグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkslategray')
ゴールド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='gold', alpha=0.5)
リストxdataとリストydataについての散布図をダークスレートブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
数式として、eのzをe2で置き換える	e.subs(z, e2)
sが片仮名か調べる	('ァ' <= s <= 'ン')
データ列をインポートする	import pandas as pd
データフレームを表示するとき、小数点以下の表示精度を設定する	pd.set_option('precision', n)
辞書adictからカウンタを新規に作って、Xに代入する	X = collections.Counter(adict)
データフレームdfのカラムの名前の一覧を使う	df.columns
数式として、eを展開する	sympy.expand(e)
折れ線グラフの色をダークスラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategray')
データフレームdfのカラムcolとカラムcol2を削除する	df.drop([col, col2], axis=1)
Pandasのバージョンを表示する	print(pd.__version__)
ミッドナイトブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
散布図にローングリーン色のマーカーを使う	plt.plot(xdata, ydata, c='lawngreen')
チョコレート色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をチョコレートに設定する	plt.plot(xdata, ydata, c='chocolate')
散布図に赤いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='r')
リストiterableのそれぞれを関数predicatefuncでフィルタする	map(func, iterable)
破線グラフの色をペルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peru')
ファイルfilenameの拡張子	os.path.splitext(filename)[1].lstrip('.')
データフレームdfのカラムcolの欠損値を最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
データフレームdfのカラムcolが何曜日か見る	df[col].dt.weekday_name
ロイヤルブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
リストiterableを無限に繰り返す	itertools.cycle(iterable)
折れ線グラフに下三角マーカーを使う	plt.plot(xdata, ydata, marker='v')
リストxdataとリストydataについて折れ線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(xdata, ydata, color='greenyellow')
カラーコードrgbの四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
xの絶対値	math.fabs(x)
散布図にデピンク色のマーカーを使う	plt.plot(xdata, ydata, c='deeppink')
データ列dsの曜日が何日目か見る	ds.dt.dayofweek
数式として、eのzにnを代入する	e.subs(z, n)
散布図にインディアンレッド色のマーカーを使う	plt.plot(xdata, ydata, c='indianred')
リストxdataとリストydataについての散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
ライトシアン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightcyan')
改行なしにオブジェクトobjを表示する	print(obj, end='')
コーンズシルク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='cornsilk')
リストxdataとリストydataについて折れ線グラフを描画して、その色をスチールブルーに設定する	plt.plot(xdata, ydata, color='steelblue')
ピンク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='pink')
パールバイオレットレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='palevioletred')
リストxdataとリストydataについての散布図をホワイト色で描画する	plt.plot(xdata, ydata, c='white')
折れ線グラフの色をデピンクに設定する	plt.plot(xdata, ydata, color='deeppink')
散布図に淡いピンク色色のマーカーを使う	plt.plot(xdata, ydata, c='lightpink')
リストxdataとリストydataの折れ線グラフに、黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')
ダークグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
辞書adictからkeyの値	adict.get(key)
ファイルfilenameをベース名と拡張子に分割する	os.path.splitext(filename)
xとx2をそれぞれnとn2とする	x, x2 = n, n2
全ての十六進数字	string.hexdigits
グラフにx=0の一点鎖線を付ける	plt.axvline(x=0, linestyle='dashbot')
破線グラフの色をサンディーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
データフレームdfの各次元の大きさを見る	df.shape
リストxdataについてのヒストグラムを描画して、半透明ににする	plt.hist(xdata, alpha=0.5)
リストxdataとリストydataについてライトグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
データフレームdfのカラムcolを100の位で丸める	df[col].round(-2)
ミッドナイトブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='midnightblue')
折れ線グラフの色をオレンジに設定する	plt.plot(xdata, ydata, color='orange')
日付adateからn日分、減算する	adate - datetime.timedelta(days=n)
JSON形式のbを辞書に変換する	json.loads(b.decode('unicode-escape'))
nからn2未満の間でn3ステップの整数群から整数乱数を生成する	random.randrange(n, n2, n3)
データフレームdfのカラムcolの欠損値を直後の値に設定する	df[col].fillna(method='bfill')
グラフのカラーパレットをパステル調にする	sns.set(pallete='pastel')
既存のファイルfilenameを文字コードtextで追加できるようにオープンする]	open(filename, mode='a', encoding=text)
s内にひとつでも英数字が含まれるか調べる	any(c.isalnum() for c in s)
リストxdataとリストydataについて散布図を描画して、マーカーの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, c='palevioletred')
リストxdataとリストydataについて折れ線グラフを描画して、その色をホットピンクに設定する	plt.plot(xdata, ydata, color='hotpink')
リストxdataとリストydataについてパレットトルコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')
リストxdataとリストydataについて破線グラフを描画して、その色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
最大長nの両端キューをリストiterableから作る	collections.deque(iterable, maxlen=n)
ライム色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lime')
データフレームdfのカラムcolをカテゴリデータに変換する	df[col].astype(object)
スラグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
nとn2の論理積	n & n2
折れ線グラフの下三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフの四角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='s', markersize=n)
折れ線グラフの色を赤に設定する	plt.plot(xdata, ydata, color='red')
リストxdataとリストydataの一点鎖線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
ミディアムバイオレットレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
オプションで、読み込まない列番号をnamesで指定する	skiprows = names
リストxdataとリストydataについて折れ線グラフを描画して、その色をペルーに設定する	plt.plot(xdata, ydata, color='peru')
データフレームdf中に文字列valueと文字列value2がいくつあるか数える	df.isin([value, value2]).sum()
リストxdataとリストydataについて破線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indianred')
描画するグラフのサイズを横n縦n2に設定する	plt.figure(figsize=(n, n2))
日時dtからn日分、減算する	dt - datetime.timedelta(days=n)
リストxdataとリストydataの黒い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='k')
折れ線グラフの色をオーキッドに設定する	plt.plot(xdata, ydata, color='orchid')
折れ線グラフの大バツマーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='X', markersize=n)
リストxdataとリストydataについての散布図をミディアムターコイズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
リストxdataとリストydataについての散布図を耐火レンガ色で描画する	plt.plot(xdata, ydata, c='firebrick')
リストxdataとリストydataについての散布図をミディアムアクアマリン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
リストxdataとリストydataについてスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
モカシン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='moccasin')
リストxdataとリストydataについての散布図をバイオレット色で描画する	plt.plot(xdata, ydata, c='violet')
リストxdataとリストydataについての散布図をライトサーモン色で描画する	plt.plot(xdata, ydata, c='lightsalmon')
データフレームdfを__Y__によってソートする	df.sort_values(by=col)
リストxdataとリストydataについてパパイヤウィップ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
散布図にライム色のマーカーを使う	plt.plot(xdata, ydata, c='lime')
折れ線グラフのマーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
リストxdataをミディアムオーキッド色のヒストグラムで描画する	plt.hist(xdata, color='mediumorchid')
改行なしにnを表示する	print(n, end='')
Pandasで、__Y__を日付データに変換し、dfのインデックスにする	df.index = pd.to_datetime(df)
データフレームdf中にある文字列valueの合計を数える	df.isin([value]).sum()
x、x2、x3の最小値	min(x, x2, x3)
日時dtををn月後に進める	dt + datetime.timedelta(months=n)
オブジェクトobjはリストクラスか調べる	isinstance(obj, list)
破線グラフの色を青に設定する	plt.plot(xdata, ydata, linestyle='dash', color='blue')
nをn2だけ減少させる	n -= n2
リストxdataとリストydataの青い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='b')
散布図にライトスレイグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightslategrey')
リストxdataとリストydataについて折れ線グラフを描画して、その色をデピンクに設定する	plt.plot(xdata, ydata, color='deeppink')
sを最後のs2で二分する	s.rpartition(s2)
オブジェクトobjは集合クラスか調べる	isinstance(obj, set)
エポックtimestampを日時に変換する	datetime.datetime.fromtimestamp(timestamp)
ファイルfilenameの拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filename))[0]
x、x2、x3の最大値	max(x, x2, x3)
セットasetがセットaset2と共通の要素を持たないか調べる	aset.isdisjoint(aset2)
散布図にパレットトルコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='paleturquoise')
リストxdataとリストydataについての散布図をドジャーブルー色で描画する	plt.plot(xdata, ydata, c='dodgerblue')
散布図にカラーコードrgbのダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c=rgb)
データ列dsの母標準偏差	ds.std(ddof=0)
sを走査し、パターンpatternに複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
ファイルfilenameからストリームをオープンして]、fileとする	file = open(filename)
リストxdataとリストydataについてスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
xのx2乗してx3による余り	pow(x, x2, x3)
日付adateの曜日を整数で使う	adate.weekday()
リストxdataとリストydataの折れ線グラフに、赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, c='midnightblue')
データ列dsの曜日の名前	ds.dt.weekday_name
リストiterableのそれぞれを関数funcでフィルタする	filter(func, iterable)
リストxdataとリストydataについて破線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
破線グラフの色をピーチパフに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
リストxdataとリストydataについてスノー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='snow')
データ列dsの欠損値を最頻値に設定する	ds.fillna(ds.mode().iloc[0])
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムブルーに設定する	plt.plot(xdata, ydata, color='mediumblue')
ダークバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
グラフの背景色を白くする	sns.set(style='whitegrid')
データフレームdfをカラムcolによって降順に破壊的にソートする	df.sort_values(by=col, ascending=False, inplace=True)
散布図にコーンズシルク色のマーカーを使う	plt.plot(xdata, ydata, c='cornsilk')
リストxdataとリストydataについてコーンズシルク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
ティール色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='teal')
黄色い折れ線グラフを描画する	plt.plot(xdata, ydata, color='y')
リストxdataとリストydataの折れ線グラフに、線幅nの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
シアン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='cyan')
リストxdataとリストydataについての散布図をコーンズシルク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
データ列dsの秒	ds.dt.second
データフレームdfのカラムcolの要約統計量	df[col].describe()
時間を使う	import time
カウンタaCounterから0以下のカウントを取り除く	+aCounter
nをn2で割った結果を切り上げる	(n + n2 - 1) // n2
データフレームdfのリストalistカラムを1000の位で丸めて、整数型にする	df[alist].round(-3).astype(int)
リストxdataとリストydataの折れ線グラフに丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
データフレームを表示するとき、小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をトマトに設定する	plt.plot(xdata, ydata, color='tomato')
文字列elementの出力を改行なしに行う	print(iterable, end='')
リストxdataとリストydataについてマルーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='maroon')
散布図にライトイエロー色のマーカーを使う	plt.plot(xdata, ydata, c='lightyellow')
データ列dsの標本標準偏差	ds.std()
ビン数をnに設定してリストxdataのヒストグラムを描画する	plt.hist(xdata, bins=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色を赤に設定する	plt.plot(xdata, ydata, c='red')
リストxdataをアイボリー色のヒストグラムで描画する	plt.hist(xdata, color='ivory')
データフレームdfとデータフレームdf2をカラムcolをキーにして内部結合する	pd.merge(df, df2, on=col, how='inner')
セットasetをタプルに変換する	tuple(aset)
ゴーストホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
データフレームdfをカラムcol毎にグループ化して、カラムcol2の最小値を求める	df.groupby(col)[col2].min()
散布図に黒い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='k')
グラフを見やすくする	import seaborn as sns
データフレームdfのカラムcolがxより大きくx2より小さい行を抽出する	df[(x < df[col]) & (df[col] < x2)]
リストalistに応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=alist, cmap='Blues')
破線グラフの色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
データフレームdfのカラムcolについてヒストグラムを描画する	plt.hist(df[col])
破線グラフの色をシルバーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='silver')
折れ線グラフの色をサドルブラウンに設定する	plt.plot(xdata, ydata, color='saddlebrown')
xにx2を加える	x + x2
レモンシフォン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
現在の秒数	datetime.date.today().second
アイボリー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ivory')
カウンタaCounterを高頻出順に列挙する	aCounter.most_common()
リストxdataをグレー色のヒストグラムで描画する	plt.hist(xdata, color='grey')
破線グラフの色をサドルブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
コマンド引数を一案として得る	sys.argv[1:]
sを太字で表示する	print(f'\033[1m{s}\033[0m')
arrayをビン数nでビン分割する	pd.cut(array, n)
データフレームdfとデータフレームdf2をカラムcolをキーにして結合する	pd.merge(df, df2, on=col)
xをの小数点以下第一位で丸める	round(x, 1)
長さnのリスト	[0] * n
リストxdataのヒストグラムを描画する	plt.hist(xdata)
日付adateと日付adate2の時間差を秒数で求める	(adate - adate2).total_seconds()
データフレームdfをカラムcol毎にグループ化して、カラムcol2の最大値を求める	df.groupby(col)[col2].max()
データフレームdfをインデックスによってソートする	df.sort_index()
リストxdataをグレー色のヒストグラムで描画する	plt.hist(xdata, color='gray')
デックdeqをタプルに変換する	tuple(deq)
赤色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='red')
リストxdataとリストydataについて散布図を描画して、マーカーの色をカデットブルーに設定する	plt.plot(xdata, ydata, c='cadetblue')
赤色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='red')
破線グラフの色をダークオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
リストxdataをシーグリーン色のヒストグラムで描画する	plt.hist(xdata, color='seagreen')
リストxdataをピーチパフ色のヒストグラムで描画する	plt.hist(xdata, color='peachpuff')
散布図にオールドレース色のマーカーを使う	plt.plot(xdata, ydata, c='oldlace')
xの角度	math.degrees(x)
スピアマン相関係数でデータフレームdfのリストalistカラムの相関行列	df[alist].corr(method='spearman')
Pandasで、xを日付データに変換する	pd.to_datetime(x)
グラフ中の日本語フォントを有効にする	sns.set(font='IPAexGothic')
n割るn2の切り上げ	(n + n2 - 1) // n2
ダークターコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
リストxdataとリストydataについてコーラル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='coral')
セットasetとセットaset2の対称差集合	aset.symmetric_difference(aset2)
リストxdataとリストydataについてリネン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='linen')
リストxdataとリストydataの折れ線グラフにバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
リストxdataとリストydataについて折れ線グラフを描画して、その色を耐火レンガに設定する	plt.plot(xdata, ydata, color='firebrick')
リストxdataとリストydataについての散布図をライトコーラル色で描画する	plt.plot(xdata, ydata, c='lightcoral')
破線グラフの色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
データフレームdfのカラムcolを100の位で丸めて、整数型にする	df[col].round(-2).astype(int)
オールドレース色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
データフレームdfのカラムcolが正規分布からどの程度、尖っているか見る	df[col].skew()
グラフのカラーパレットを暗くする	sns.set(pallete='dark')
カウンタaCounterを上位n個カウントが多い順に列挙する	aCounter.most_common(n)
線幅nの折れ線グラフを描画する	plt.plot(xdata, ydata, linewidth=n)
一点鎖線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
データフレームdfのリストalistカラムの値が欠損値か調べる	df[alist].isna()
データフレームを表示するとき、ヘッダー行を右寄せに設定する	pd.set_option('colheader_justify', 'right')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
ライムグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='limegreen')
ブラック色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='black')
セットasetからセットaset2の要素を全て取り除く	aset.difference_update(aset2)
折れ線グラフの色をクリムゾンに設定する	plt.plot(xdata, ydata, color='crimson')
データフレームdfをカラムcol毎にグループ化して、カラムcol2の個数を求める	df.groupby(col)[col2].count()
リストxdataとリストydataについてミディアムアクアマリン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
リストxdataとリストydataの一点鎖線グラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
sのの中でパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s)
グリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='green')
リストxdataとリストydataについての散布図をブランチドアーモンド色で描画する	plt.plot(xdata, ydata, c='blanchedalmond')
グラフで使うフォントをsに指定する	sns.set(font=s)
折れ線グラフにダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D')
リストxdataとリストydataについて散布図を描画して、マーカーの色をレモンシフォンに設定する	plt.plot(xdata, ydata, c='lemonchiffon')
リストxdataとリストydataについて散布図を描画して、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
折れ線グラフの丸マーカーを赤くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
n年n2月n3日n4時n5分の日時	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)
n年n2月n3日を日付に変換する	datetime.date(year=n, month=n2, day=n3)
カウンタaCounter内の文字列element項目のカウント	aCounter[element]
点線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
リストxdataとリストydataについての散布図をハニーデュー色で描画する	plt.plot(xdata, ydata, c='honeydew')
デックdeq中の文字列elementのインデックス	deq.index(element)
折れ線グラフの色をビスクに設定する	plt.plot(xdata, ydata, color='bisque')
エクセルファイルファイルfilenameからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
オプションで、出力先を標準エラーに設定する	file = sys.stderr
s全体がパターンpatternにASCII限定としてマッチするか見る	re.fullmatch(pattern, s, flags=re.ASCI)
リストxdataとリストydataについての散布図をライトスレイグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
デックdeqの要素を右にローテートする	deq.rotate()
エクセルファイルファイルfilenameから全てのシートを読み込む	pd.read_excel(filename, sheet_name=None)
ハリウッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
xの小数部	math.modf(x)[0]
折れ線グラフの色をアザミに設定する	plt.plot(xdata, ydata, color='thistle')
リストxdataとリストydataについて折れ線グラフを描画して、その色をブラックに設定する	plt.plot(xdata, ydata, color='black')
リストxdataとリストydataの折れ線グラフに、緑色の大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
リストxdataとリストydataについてリストalistの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=alist, cmap='Blues')
リストxdataとリストydataについて散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストxdataとリストydataについて折れ線グラフを描画して、その色をオレンジレッドに設定する	plt.plot(xdata, ydata, color='orangered')
リストxdataとリストydataの折れ線グラフに、赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
ハリウッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='burlywood')
日時dtからn分、減算する	dt - datetime.timedelta(minutes=n)
破線グラフの色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
折れ線グラフの色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, color='mediumslateblue')
リストxdataとリストydataの折れ線グラフに、黄色い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
青色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='blue')
リストxdataとリストydataについての散布図をアクア色で描画する	plt.plot(xdata, ydata, c='aqua')
ナバホホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='navajowhite')
シーグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='seagreen')
オブジェクトobjをデバッグ向けの文字列に変換する	repr(obj)
リストxdataとリストydataについての散布図をアンティークホワイト色で描画する	plt.plot(xdata, ydata, c='antiquewhite')
破線グラフの色をシエナに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
ペルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='peru', alpha=0.5)
セットasetとセットaset2の和集合	aset.union(aset2)
リストxdataとリストydataについての散布図をサーモン色で描画する	plt.plot(xdata, ydata, c='salmon')
オブジェクトobjを表示する	print(obj)
nの各桁の総和	sum(map(int, str(n)))
Pandasで、データフレームdfのカラムcolをインデックスにする	df.set_index(col, inplace=True)
Pandasで、エポック秒のデータフレームdfのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
nがn2よりも大きいか調べる	n > n2
標準エラーを得る	sys.stderr
リストxdataとリストydataについての散布図をグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='grey', alpha=0.5)
データフレームdfのカラムcolの平均値	df[col].mean()
リストxdataとリストydataのカラーコードrgbの一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
デックdeqの先頭から要素を取り除く	deq.popleft()
データフレームdfが正規分布からどの程度、歪んでいるか見る	df.kurt()
タプルatupleを反転する	reversed(atuple)
ドジャーブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
リストxdataとリストydataについてゴーストホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
散布図に黒い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='k')
小麦色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='wheat')
事前にパターンpatternをコンパイルする	re.compile(pattern)
nがn2と等しいか調べる	n == n2
散布図に黄色色のマーカーを使う	plt.plot(xdata, ydata, c='yellow')
リストxdataとリストydataについて破線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
ロージーブラウン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='rosybrown')
明日の日付	datetime.date.today() + datetime.timedelta(days=1)
リストxdataをライトグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightgrey')
セットasetの濃度	len(aset)
リストxdataとリストydataについて散布図を描画して、マーカーの色をオリーブに設定する	plt.plot(xdata, ydata, c='olive')
セットasetとセットaset2が互いに素か調べる	aset.isdisjoint(aset2)
折れ線グラフの色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, color='blanchedalmond')
ターコイズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='turquoise')
リストxdataとリストydataについて破線グラフを描画して、その色をネイビーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navy')
リストxdataとリストydataの赤い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='r')
リストxdataとリストydataの折れ線グラフに、黄色い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
リストxdataとリストydataについて破線グラフを描画して、その色をモカシンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
折れ線グラフの色をピンクに設定する	plt.plot(xdata, ydata, color='pink')
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして結合する	pd.merge(df, df2, left_on=col, right_on=col2)
データフレームdfのカラムcolを破壊的に削除する	df.drop(col, axis=1, inplace=True)
破線グラフの色をラベンダーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
黒い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
リストxdataとリストydataについての散布図をフォレストグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
データフレームdf中のカラムcolとカラムcol2に重複があれば、マスクする	df.duplicated(subset=[col1, col2])
データフレームdfのカラムcolの欠損値を最大値に設定する	df[col].fillna(df[col].max())
日付adateが日付adate2より前か調べる	adate < adate2
破線グラフの色をダークグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
リストxdataとリストydataについての散布図を大きさnで描画する	plt.scatter(xdata, ydata, s=n)
レベッカパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
リストxdataとリストydataについて折れ線グラフを描画して、その色をサーモンに設定する	plt.plot(xdata, ydata, color='salmon')
ファイルfilenameをバイナリ書き込みモードでオープンして]、fとする	f = open(filename, mode='wb')
リストxdataとリストydataについての散布図に赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
JSONファイルのファイル入力finを読み込んで、dataとする	data = json.load(fin)
インディゴ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indigo')
sのの中でASCII限定のパターンpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
破線グラフの色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, c='mediumslateblue')
グラフにy=0の破線を付ける	plt.axhline(y=0, linestyle='dashed')
下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v')
破線グラフの色をミントクリームに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')
データフレームdfの数値をまとめて丸めて、インプレイスする	df.round(inplace=True)
散布図にベージュ色のマーカーを使う	plt.plot(xdata, ydata, c='beige')
破線グラフの色をペールグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
nをn2倍にする	n *= n2
データフレームdfをカラムcolとカラムcol2によって降順に破壊的にソートする	df.sort_values(by=[col,col2], ascending=False, inplace=True)
sの中からパターンpatternにマッチする文字列を探す	re.search(pattern, s)
チョコレート色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='chocolate')
リストxdataとリストydataについての散布図をミントクリーム色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
オプションで、標準エラーを使う	file = sys.stderr
カーキ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='khaki')
リストxdataをダークゴールデンロッド色のヒストグラムで描画する	plt.hist(xdata, color='darkgoldenrod')
データフレームdfをカラムcolとカラムcol2によって降順にソートする	df.sort_values(by=[col,col2], ascending=False)
リストxdataとリストydataについて破線グラフを描画して、その色をダークオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
データフレームdfをカラムcol毎にグループ化して、列挙する	[(name, group) for name, group in df.groupby(col)]
オプションで、文字コードtextを使う	encoding = text
ミディアムアクアマリン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumaquamarine')
リストxdataとリストydataについて破線グラフを描画して、その色をダークスラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
文字列elementの出力を改行なしに行う	print(s, end='')
データフレームdfをJSONLファイルfilenameにヘッダを付けずに保存する	df.to_csv(filename, header=None)
ミントクリーム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
破線グラフの色をハニーデューに設定する	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
リストxdataとリストydataについて散布図を描画して、マーカーの色をナバホホワイトに設定する	plt.plot(xdata, ydata, c='navajowhite')
sがs2で終わるか調べる	s.endswith(s2)
破線グラフの色をアリスブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
折れ線グラフの右三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
データフレームdf中のカラムcolをリストalistを境界値としてビン分割する	pd.cut(df[col], alist)
カウンタaCounterをカウントが多い順に列挙する	aCounter.most_common()
リストxdataとリストydataについて散布図を描画して、マーカーの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, c='lavenderblush')
xの逆正弦	math.asin(x)
データ列ds中にいくつ文字列valueがあるか数える	ds.isin([value]).sum()
sをASCII限定のパターンpatternで分割する	re.split(pattern, s, flags=re.ASCI)
日付adateが火曜日か調べる	adate.weekday() == 1
ペルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peru')
カウンタaCounterから低頻出項目をn個、リストとして使う	aCounter.most_common()[:-n-1:-1]
リストxdataとリストydataについての散布図をミディアムシアグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
日付adateと日付adate2の時間差が何秒か知る	(adate - adate2).total_seconds()
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgrey')
リストxdataとリストydataについての散布図をライトグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
リストxdataとリストydataについての散布図をライトグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
リストxdataとリストydataについての散布図をグリーン色で描画する	plt.plot(xdata, ydata, c='green')
整数nをn2分の一にする	n //= n2
ダークサーモン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darksalmon')
xの整数部	math.modf(x)[1]
モカシン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='moccasin')
散布図にアイボリー色のマーカーを使う	plt.plot(xdata, ydata, c='ivory')
リストxdataとリストydataについて散布図を描画して、マーカーの色を青に設定する	plt.plot(xdata, ydata, c='blue')
リストxdataをマルーン色のヒストグラムで描画する	plt.hist(xdata, color='maroon')
散布図にミディアムパープル色のマーカーを使う	plt.plot(xdata, ydata, c='mediumpurple')
nとn2の和	n + n2
バイオレット色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='violet')
タプルatupleを引数として展開して表示する	print(*atuple)
破線グラフの色をカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
リストxdataをミディアムブルー色のヒストグラムで描画する	plt.hist(xdata, color='mediumblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をインディゴに設定する	plt.plot(xdata, ydata, color='indigo')
リストxdataとリストydataについての散布図をマルーン色で描画する	plt.plot(xdata, ydata, c='maroon')
パールバイオレットレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='palevioletred')
折れ線グラフの三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
マルーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='maroon')
リストxdataとリストydataについてゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
s中の複数行対応のパターンpatternによる全てのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
sを改行で区切る	s.splitlines()
折れ線グラフの星マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')
リストxdataとリストydataについて散布図を描画して、左三角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
数式として、zについてeの積分を求める	sympy.integrate(e, z)
リストxdataとリストydataについての散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
データフレームを表示するとき、表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
リストxdataとリストydataについての散布図をシーグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
データフレームdfのn行目からn2行目までを抽出する	df[n:n2]
オブジェクトobjのプロパティをsで指定して、その値を使う	getattr(obj, s)
オプションで、改行コードを動作環境依存に設定する	newline = None
リストalistを等量でビン数nでビン分割する	pd.qcut(alist, n)
リストxdataとリストydataの点線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
xが負の数か調べる	x < 0
CSVファイルTSVファイルfilenameをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
リストxdataをライトブルー色のヒストグラムで描画する	plt.hist(xdata, color='lightblue')
データフレームdfの欠損値を中央値で埋める	df.fillna(df.median())
ダーク・スラテグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
グレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='grey')
辞書adictをインデント幅nのJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)
データフレームdfのカラムcol毎の平均値	df.groupby(col).mean()
リストxdataとリストydataについての散布図をオリベドラブ色で描画する	plt.plot(xdata, ydata, c='olivedrab')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトイエローに設定する	plt.plot(xdata, ydata, c='lightyellow')
Pandasで、sを日付データに変換する	pd.to_datetime(s)
リストxdataとリストydataについての散布図をダークグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
散布図にバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='violet')
折れ線グラフの大バツマーカーを赤くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')
リストxdataとリストydataについて破線グラフを描画して、その色をライムグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
オーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orchid')
散布図にモカシン色のマーカーを使う	plt.plot(xdata, ydata, c='moccasin')
リストxdataをティール色のヒストグラムで描画する	plt.hist(xdata, color='teal')
マルーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='maroon')
リストxdataとリストydataについての散布図をサーモン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
破線グラフの色をモカシンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
デックdeqの大きさ	len(deq)
sが全て空白文字からなるか調べる	s.isspace()
赤い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')
ゲインズボロ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
紺碧色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='azure', alpha=0.5)
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
散布図にダークグレー色のマーカーを使う	plt.plot(xdata, ydata, c='darkgray')
ペールグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='palegreen')
データフレームdfとデータフレームdf2をカラムcolをキーにして右結合する	pd.merge(df, df2, on=col, how='right')
リネン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='linen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(xdata, ydata, color='lightsteelblue')
散布図に紺碧色のマーカーを使う	plt.plot(xdata, ydata, c='azure')
破線グラフの色をライムグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategrey')
ファイルfilenameをバイナリできるようにオープンする]	open(filename, mode='rb')
リストxdataとリストydataについての散布図をダークブルー色で描画する	plt.plot(xdata, ydata, c='darkblue')
カーキ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='khaki')
破線グラフの色をホットピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
sにおいてs2をs3に全て置き換える	s.replace(s2, s3)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークブルーに設定する	plt.plot(xdata, ydata, c='darkblue')
リストiterableをカンマ区切りで連結する	','.join(map(str, iterable))
xの逆双曲線余弦	math.acosh(x)
ラベンダーブラッシュ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
散布図にナバホホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='navajowhite')
Pandasで、データ列dsを日付データに変換し、データフレームdfのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
整数nがリストalistのどれかか調べる	n in alist
ミディアムアクアマリン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumaquamarine')
折れ線グラフの色をライトコーラルに設定する	plt.plot(xdata, ydata, color='lightcoral')
コーンズシルク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='cornsilk')
散布図にパパイヤウィップ色のマーカーを使う	plt.plot(xdata, ydata, c='papayawhip')
セットasetの全ての要素がセットaset2に含まれるか調べる	aset.issubset(aset2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をゴールドに設定する	plt.plot(xdata, ydata, c='gold')
ブラウン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='brown')
プログラムの実行を異常終了する	sys.exit(1)
リストxdataとリストydataについて折れ線グラフを描画して、その色を淡いピンク色に設定する	plt.plot(xdata, ydata, color='lightpink')
リストxdataとリストydataについての散布図をダーク・スラテグレー色で描画する	plt.plot(xdata, ydata, c='darkslategrey')
ファイルfilenameをEUCで書き込み用にオープンする]	open(filename, mode='w', encoding='euc_jp')
コーンフラワーブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
データ列dsの欠損値を最大値で埋める	ds.fillna(ds.max())
リストxdataとリストydataについて散布図を描画して、マーカーの色をスノーに設定する	plt.plot(xdata, ydata, c='snow')
xの天井	math.ceil(x)
リストxdataとリストydataについて破線グラフを描画して、その色をラベンダーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
データフレームdfのカラムcolを削除する	df.drop(col, axis=1)
クリムゾン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='crimson')
sからs2を全て取り除く	s.replace(s2, '')
リストxdataをブルーバイオレット色のヒストグラムで描画する	plt.hist(xdata, color='blueviolet')
オプションで、先頭の行をヘッダに設定する	header = 0
リストxdataをパールバイオレットレッド色のヒストグラムで描画する	plt.hist(xdata, color='palevioletred')
折れ線グラフの色をダークターコイズに設定する	plt.plot(xdata, ydata, color='darkturquoise')
TSVファイルfilenameをヘッダを指定せず読み込む	pd.read_csv(filename, header=None)
タプルatupleをnからナンバリングする	enumerate(atuple, start=n)
ホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='white')
リストxdataとリストydataについて破線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
sはタイトルケースか調べる	s.istitle()
折れ線グラフの色をアクアに設定する	plt.plot(xdata, ydata, color='aqua')
折れ線グラフの大バツマーカーを黄色くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
十六進sを整数に変換する	int(s, 16)
リストxdataとリストydataについての散布図をパウダーブルー色で描画する	plt.plot(xdata, ydata, c='powderblue')
整数nの十六進文字列	hex(n)[2:]
カラーコードrgbの丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図にリネン色のマーカーを使う	plt.plot(xdata, ydata, c='linen')
リストxdataとリストydataについての散布図をダークシアグリーン色で描画する	plt.plot(xdata, ydata, c='darkseagreen')
データフレームdfのカラムcolのsを欠損値に変換する	df[col].replace(s, np.nan)
ピアソン相関係数でデータフレームdfの相関行列	df.corr(method='pearson')
小麦色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='wheat')
散布図にブルーバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='blueviolet')
データフレームdfをカラムcol毎にグループ化して、合計を求める	df.groupby(col).sum()
sをマゼンタにする	f'\033[35m{s}\033[0m'
データフレームdfをカラムcolによって降順にソートする	df.sort_values(by=col, ascending=False)
データフレームdfの欠損値を最大値に設定する	df.fillna(df.max())
リストxdataとリストydataのカラーコードrgbの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
ゴールド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gold')
データフレームdfのn行目を削除する	df.drop(n, axis=0)
aとa2	a.index = a / 1
データフレームdfのリストalistカラムの標本標準偏差	df[alist].std()
CSVファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep=',')
sのタブ文字をn個の空白に置き換える	s.expandtabs(tabsize=n)
オーキッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
グラフにx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
リストxdataとリストydataについての散布図をフォレストグリーン色で描画する	plt.plot(xdata, ydata, c='forestgreen')
破線グラフの色をグリーンイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
数式として、eをzについてn階微分する	sympy.diff(e, z, n)
折れ線グラフの色をシルバーに設定する	plt.plot(xdata, ydata, color='silver')
sの接頭辞からs2を取り除く	s.removeprefix(s2)
データフレームdfのn行目をドロップして、更新する	df.drop(n, axis=0, inplace=True)
ファイルfilenameのファイル名	os.path.basename(filename)
リストxdataとリストydataについてレモンシフォン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
nをn2で割る	n / n2
無限大	math.inf
リストxdataとリストydataについて折れ線グラフを描画して、その色をペールグリーンに設定する	plt.plot(xdata, ydata, color='palegreen')
リストxdataをタン色のヒストグラムで描画する	plt.hist(xdata, color='tan')
ISO書式のsを日時に変換する	datetime.datetime.fromisoformat(s)
折れ線グラフの色をアイボリーに設定する	plt.plot(xdata, ydata, color='ivory')
データフレームdfのカラムcol毎の分散	df.groupby(col).var()
ゲインズボロ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
ファイルfilenameを読み込みモードでオープンして]、fとする	f = open(filename, mode='r')
スノー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='snow')
リストydataを横軸と指定して、折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
グレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gray')
リストxdataとリストydataについて散布図を描画して、マーカーの色をアクアマリンに設定する	plt.plot(xdata, ydata, c='aquamarine')
日付adateが木曜日か調べる	adate.weekday() == 3
リストxdataとリストydataについての散布図をベージュ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='beige', alpha=0.5)
リストxdataとリストydataについての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
リストxdataとリストydataについての散布図をライトグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
折れ線グラフの四角マーカーを赤くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')
パールバイオレットレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='palevioletred')
リストxdataとリストydataについてパールゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
オプションで、標準出力を出力にする	file = sys.stdout
データフレームdfのリストalistカラムの最頻値	df[alist].mode()
空文字	''
オプションで、読み込まないフッタをnに設定する	skipfooter = n
折れ線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, color='mediumspringgreen')
