散布図にダークグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='darkgreen')
1行だけ標準入力から読み込む	sys.stdin.readline()
sをASCII限定のパターンpatternで分割する	re.split(pattern, s, flags=re.ASCI)
折れ線グラフのマーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストxdataとリストydataについてライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
リストxdataとリストydataについて破線グラフを描画して、その色を貝殻に設定する	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
データ列dsの中央値	ds.median()
破線グラフの色をゲインズボロに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
adateからn秒分、減算する	adate - datetime.timedelta(seconds=n)
辞書adictを階層化する	collections.ChainMap(adict)
データフレームdfのcolの最頻値を算出する	df[col].mode()
リストxdataとデータ列ydataについて散布図を描画して、色をグレーにする	plt.plot(xdata, ydata, c='gray')
ロイヤルブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
objが浮動小数点数か	isinstance(obj, float)
sのタブ文字をn個の空白に置き換える	s.expandtabs(tabsize=n)
ダークシアン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkcyan')
リストxdataとリストydataについて散布図を描画して、マーカーの色をリネンに設定する	plt.plot(xdata, ydata, c='linen')
折れ線グラフの星マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')
破線グラフの色をスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
TSVfilenameからデータフレームを読む	pd.read_csv(filename, sep='\t')
辞書adictのkeyに対応した値	adict.get(key)
リストxdataとリストydataについて折れ線グラフを描画して、その色をシエナに設定する	plt.plot(xdata, ydata, color='sienna')
リストxdataとリストydataについての散布図をシーグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
dsをビン数nで等量でビン分割する	pd.qcut(ds, n)
リストxdataと配列ydataについてカーキ色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='khaki')
dfをcol列ごとにグループ化して、col2カラムの平均値を調べる	df.groupby(col)[col2].mean()
リストxdataをシーグリーン色のヒストグラムとして描画する	plt.hist(xdata, color='seagreen')
リストxdataとリストydataについて散布図を描画してマーカーを星変える	plt.plot(xdata, ydata, marker='*')
折れ線グラフの色をディープスカイブルーに変更する	plt.plot(xdata, ydata, color='deepskyblue')
リストxdataとイテラブルydataについての散布図をディムグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
折れ線グラフの菱形マーカーを黄色にする	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
サーモン色の折れ線を描画する	plt.plot(xdata, ydata, color='salmon')
破線グラフの色をオリーブに設定する	plt.plot(xdata, ydata, linestyle='dash', color='olive')
リストxdataとリストydataについての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
耐火レンガ色として散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
データ列dsのsを欠損値に変換する	ds.replace(s, np.nan)
ダークレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkred')
ターコイズでヒストグラムを描画する	plt.hist(xdata, color='turquoise')
散布図に赤い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='r')
リストxdataとリストydataについてシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cyan')
Pandasとして文字化けしないようにfilenameを読み込む	pd.read_csv(filename, encoding='shift_jis')
配列xdataと配列ydataの折れ線グラフを描画して印を▲に設定する	plt.plot(xdata, ydata, marker='^')
破線グラフの色をブラックに設定する	plt.plot(xdata, ydata, linestyle='dash', color='black')
折れ線グラフの色をコーンズシルクに設定する	plt.plot(xdata, ydata, color='cornsilk')
赤い左三角印をリストxdataとイテラブルydataの散布図に描画する	plt.plot(xdata, ydata, marker='<', c='r')
折れ線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightseagreen')
リストxdataとリストydataについて散布図を描画して、マーカーをバツに指定する	plt.plot(xdata, ydata, marker='x')
sの左側からs2を取り除く	s.lstrip(s2)
リストxdataとデータ列ydataについて散布図を描画して、マーカーの色をダークレッド変える	plt.plot(xdata, ydata, c='darkred')
整数nを八進数表記化する	oct(n)
ペルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peru')
ミディアムオーキッド色の折れ線を描画する	plt.plot(xdata, ydata, color='mediumorchid')
オプションで、エンコーディングをBOM付きに設定する	encoding = 'utf_8_sig'
折れ線の色をダークブルーに変更する	plt.plot(xdata, ydata, color='darkblue')
フローラルホワイト色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
配列xdataとデータ列ydataの散布図を描画して、色をレベッカパープルに設定する	plt.plot(xdata, ydata, c='rebeccapurple')
折れ線グラフのバツ印を黒色にする	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
ダークターコイズ色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
散布図にネイビー色のマーカーを使う	plt.plot(xdata, ydata, c='navy')
日時dtをn年前に戻す	dt - datetime.timedelta(years=n)
折れ線グラフの色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
書き込みできるようにEUCとしてファイルfilenameをオープンする]	open(filename, mode='w', encoding='euc_jp')
配列xdataとリストydataについての散布図をホワイト色で重なりを見やすく描く	plt.plot(xdata, ydata, c='white', alpha=0.5)
折れ線グラフのダイアモンドマーカーを黒くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
リストxdataとリストydataについての散布図をライトグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
リストxdataとリストydataについてハニーデュー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
ダークオーキッド色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
ドジャーブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='dodgerblue')
リストxdataとリストydataについての散布図をサーモン色で描画する	plt.plot(xdata, ydata, c='salmon')
日付adateが月曜日かテストする	adate.weekday() == 0
データフレームdfのcolについてヒストグラムをプロットする	plt.hist(df[col])
ダークレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkred')
全ての空白文字	string.whitespace
リストalistのn番目に文字列elementを挿入する	alist.insert(n, element)
リストxdataとリストydataについて散布図を描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
データフレームdfのリストalistカラムの欠損値を最頻値に設定する	df[alist].fillna(df[alist].mode().iloc[0])
ダークグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkgreen')
リストxdataとリストydataについて破線グラフを描画して、その色をサンディーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
データ列dsのユニークな値の個数	ds.nunique()
配列xdataとリストydataの散布図をライトコーラル色として重なりを見やすく描く	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
n2がn以上、かつ、n3以下か調べる	n <= n2 and n2 <= n3
スプリンググリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
リストxdataとリストydataについてライムグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
数式として、eのzをe2で置き換える	e.subs(z, e2)
破線グラフの色をダークオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
データ列dsに文字列valueと文字列value2があるか	ds.isin([value, value2])
配列xdataと数列ydataの折れ線グラフに黒色の右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
s内にひとつでも数字が含まれるか調べる	any(c.isdigit() for c in s)
ダークレッドでヒストグラムを描画する	plt.hist(xdata, color='darkred')
データ列xdataとリストydataについて散布図を描画して、マーカーの色をマゼンタに設定する	plt.plot(xdata, ydata, c='magenta')
データフレームdfのn行目をドロップして、更新する	df.drop(n, axis=0, inplace=True)
リストxdataとリストydataについて折れ線グラフを描画して、その色をオールドレースに設定する	plt.plot(xdata, ydata, color='oldlace')
リストxdataをミディアムスプリンググリーン色のヒストグラムで描画する	plt.hist(xdata, color='mediumspringgreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミスティローズに設定する	plt.plot(xdata, ydata, color='mistyrose')
リストxdataと配列ydataの散布図をライトスチールブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
折れ線グラフの四角マーカーを赤くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')
リストxdataとリストydataについて破線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
データ列dsの曜日の名前	ds.dt.weekday_name
データ列dsからユニークな要素を抽出し、リスト化する	ds.unique().tolist()
3数n,n2,n3の最小公倍数	math.lcm(n, n2, n3)
リストxdataをミディアムターコイズ色のヒストグラムで描画する	plt.hist(xdata, color='mediumturquoise')
等量でビン数nを用いてalistを分割する	pd.qcut(alist, n)
n個の整数リスト	list(range(n))
データ列xdataとリストydataの青色の破線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dashed', color='b')
日付adateからn日を減らす	adate - datetime.timedelta(days=n)
リストxdataとリストydataについてミスティローズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
dfの列colを1000の位で丸めて、整数型にする	df[col].round(-3).astype(int)
Pandasで日付データのデータフレームdfのcolをデータフレームdfのインデックスにする	df.index = pd.DatetimeIndex(df[col])
破線グラフの色をイエローグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
ラベンダーブラッシュ色を用いて散布図を描画する	plt.plot(xdata, ydata, c='lavenderblush')
イエローグリーン色でリストxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='yellowgreen')
破線グラフの色をライトスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
ファイルfilenameをEUCでオープンする]	open(filename, encoding='euc_jp')
配列xdataと数列ydataについて散布図を描画して、色をダークスラテグレーに設定する	plt.plot(xdata, ydata, c='darkslategray')
nからn間隔で無限にカウントアップする	itertools.count(start=n, step=n2)
破線グラフの色をシーグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
nからn2未満までの整数乱数を生成する	random.randrange(n, n2)
10を底とするxの対数	math.log10(x)
星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*')
整数nを八進表現に変換する	oct(n)
数列xdataとイテラブルydataについての散布図をブラック色でプロットする	plt.plot(xdata, ydata, c='black')
オレンジ色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='orange')
カウンタaCounterとカウンタaCounter2の交わり	aCounter & aCounter2
ライトブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
xの小数点以下第n位で丸める	round(x, n)
タプルatupleの末尾からn番目以前の部分を取り出す	atuple[:-n]
日時dtが日曜日か調べる	dt.weekday() == 6
リストxdataとリストydataについての散布図をライトグリーン色で描画する	plt.plot(xdata, ydata, c='lightseagreen')
データフレームdfとデータフレームdf2を結合する	pd.merge(df, df2)
リストxdataとリストydataについて折れ線を描画してその色をレベッカパープルに変更する	plt.plot(xdata, ydata, color='rebeccapurple')
散布図にライトグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='lightgreen')
リストxdataとリストydataについて破線グラフを描画してその色をブラックとする	plt.plot(xdata, ydata, linestyle='dash', color='black')
データ列xdataとリストydataについて折れ線グラフを描画してその色をアザミに設定する	plt.plot(xdata, ydata, color='thistle')
ディムグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
全ての十六進数字	string.hexdigits
既存のファイルfilenameをsの示すエンコーディングで追加できるようにオープンする]	open(filename, mode='a', encoding=s)
リストxdataと配列ydataについてラベンダー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavender')
黒色のポイントマーカーで散布図を描く	plt.plot(xdata, ydata, marker='.', c='k')
ミディアムシアグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumseagreen')
グラフのカラーパレットを明るくする	sns.set(pallete='bright')
リストxdataをミントクリーム色のヒストグラムで描画する	plt.hist(xdata, color='mintcream')
赤いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='r')
破線グラフの色をミディアムパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
折れ線グラフの色をマゼンタにセットする	plt.plot(xdata, ydata, color='magenta')
コマンドの一覧を	sys.argv[1:]
リストxdataとリストydataについての散布図をスプリンググリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
タプルatupleの要素を昇順にソートする	sorted(atuple, reverse=False)
データフレームdfをcolカラムとcol2の組み合わせごとにグループ化して、最小値	df.groupby([col, col2], as_index=False).min()
イテラブルxdataとデータ列ydataについての散布図をミディアムアクアマリン色で描画する	plt.plot(xdata, ydata, c='mediumaquamarine')
n年n2月n3日n4時n5分を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)
リストxdataと配列ydataについて折れ線グラフを描画して色をアンティークホワイトに設定する	plt.plot(xdata, ydata, color='antiquewhite')
リストxdataとリストydataについての散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
折れ線グラフの色をダークオリーブグリーンにセットする	plt.plot(xdata, ydata, color='darkolivegreen')
数列xdataとリストydataについての散布図をライムグリーン色で描く	plt.plot(xdata, ydata, c='limegreen')
alist中の一番小さい値を求める	min(alist)
リストxdataとリストydataについてプラム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='plum')
数式として、sをシンボルに変換する	sympy.symbol(s)
数列xdataとリストydataについてオレンジ色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orange')
データ列xdataとデータ列ydataについて散布図を描画して色をスノーに設定する	plt.plot(xdata, ydata, c='snow')
リストxdataとリストydataの折れ線グラフに、赤い三角印を描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
リストxdataをミッドナイトブルー色のヒストグラムで描画する	plt.hist(xdata, color='midnightblue')
グリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='green')
折れ線グラフの下三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
破線グラフの色をアイボリーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
nがn2か調べる	n == n2
データ列dsの空文字をドロップする	ds.replace('', np.nan).dropna()
最大の再帰数をnに設定する	sys.setrecursionlimit(n)
折れ線グラフの色をゲインズボロにセットする	plt.plot(xdata, ydata, color='gainsboro')
リストxdataを淡いピンク色色のヒストグラムで描画する	plt.hist(xdata, color='lightpink')
イテラブルxdataとリストydataについて散布図を描画して、マーカーの色をダークマゼンタに設定する	plt.plot(xdata, ydata, c='darkmagenta')
ブランチドアーモンドでリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='blanchedalmond')
リストxdataとリストydataについてマゼンタ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='magenta')
リストxdataと配列ydataについてダークゴールデンロッド色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
データフレームdfのカラムcolを丸める	df[col].round()
エクセルデータファイルfilenameからすべてのシートを読み込む	pd.read_excel(filename, sheet_name=None)
数列xdataと配列ydataについて散布図を描画してマーカーの色をダークグレーに設定する	plt.plot(xdata, ydata, c='darkgrey')
バイトオーダを調べる	sys.byteorder
数列xdataとリストydataについて破線グラフを描画して、その色をミディアムオーキッドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
ホワイトスモーク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
ライトグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightgrey')
リストxdataとリストydataについて散布図を描画して、マーカーの色をペールグリーンに設定する	plt.plot(xdata, ydata, c='palegreen')
リストxdataとリストydataについての散布図をミディアムスレートブルー色で描画する	plt.plot(xdata, ydata, c='mediumslateblue')
リストxdataとリストydataについての散布図をミッドナイトブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
リストiterableのセット	set(iterable)
リストxdataとリストydataについて散布図を描画して、マーカーの色をターコイズに設定する	plt.plot(xdata, ydata, c='turquoise')
dsの欠損値を最大値で埋める	ds.fillna(ds.max())
xはx2に近いか調べる	math.isclose(x, x2)
データフレームdfのカラムcolをダミー変数に変換する	pd.get_dummies(df[col])
今日が月曜日かどうか調べる	datetime.datetime.today().weekday() == 0
散布図をシーグリーン色のマーカーとして重なりを見やすくプロットする	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
数列xdataとリストydataについてカデットブルー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
数列xdataとリストydataについての散布図をミディアムパープル色で描く	plt.plot(xdata, ydata, c='mediumpurple')
整数nの十六進表現	hex(n)
折れ線グラフの色をロージーブラウンに設定する	plt.plot(xdata, ydata, color='rosybrown')
リストxdataとリストydataの散布図をアクア色としてプロットする	plt.plot(xdata, ydata, c='aqua')
破線グラフの色をドジャーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
セットasetからエラーなく文字列elementを取り除く	aset.discard(element)
リストxdataとリストydataについての散布図をゴールド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='gold', alpha=0.5)
zが無限大に近づくとき、eの極限値を計算する	sympy.limit(e, z, oo)
リストxdataとリストydataについて破線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
__X__カラーパレットをプロットに用いる	sns.set(pallete='bright')
イテラブルxdataとリストydataについて散布図を描画して、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
nとn2の排他的論理和	n ^ n2
散布図に黒いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='k')
ゲインズボロ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
クリムゾン色のヒストグラムを使ってリストxdataを描く	plt.hist(xdata, color='crimson')
ライトグレー色で配列xdataと配列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
ライムグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
スラグレー色で柱状図を描画する	plt.hist(xdata, color='slategray')
リストxdataとリストydataについての散布図をオレンジ色で描画する	plt.plot(xdata, ydata, c='orange')
折れ線グラフの色をスチールブルーに設定する	plt.plot(xdata, ydata, color='steelblue')
リストxdataとリストydataについて破線グラフを描画して、その色をピーチパフに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
dfからn個、サンプリングする	df.sample(n)
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
sを全て英大文字に変換する	s.upper()
データフレームdfのカラムcolのn分位数	df[col].quantile(n/100)
データフレームdf中に文字列valueと文字列value2があるか調べる	df.isin([value, value2])
コーラル色の折れ線を描く	plt.plot(xdata, ydata, color='coral')
データフレームdfのの中で何行、重複するか見る	df.duplicated().sum()
散布図を黒い右三角印として描画する	plt.plot(xdata, ydata, marker='>', c='k')
JSON形式のsをデータに変換する	json.loads(b.decode('unicode-escape'))
オブジェクトobjとオブジェクトobj2は同一オブジェクトか調べる	obj is obj2
ライトスチールブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
最適な位置に凡例を入れる	plt.legend(loc='best')
リストxdataとリストydataについての散布図をライトグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
ライトシアン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightcyan')
リストxdataをイエローグリーン色のヒストグラムで描画する	plt.hist(xdata, color='yellowgreen')
数列xdataと数列ydataについて破線グラフを描画して色をコーンズシルクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
正規表現で、sの中からpatternに複数行対応としてマッチする位置を探す	re.search(pattern, s, flags=re.MULTILINE)
リストxdataとリストydataについての散布図をハリウッド色で描画する	plt.plot(xdata, ydata, c='burlywood')
重なりを見やすくオレンジ色として配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='orange', alpha=0.5)
リストxdataと配列ydataの散布図を描画して、色を小麦に設定する	plt.plot(xdata, ydata, c='wheat')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, color='mediumorchid')
リストxdataとリストydataの折れ線グラフを描画して、実線に設定する	plt.plot(xdata, ydata, linestyle='solid')
文字列elementが無限に続くイテラブル	itertools.repeat(element)
リストxdataとリストydataについての散布図にカラーコードrgbの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
ダークスレートブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkslateblue')
データ列xdataとイテラブルydataについて破線グラフを描画して、色をピーチパフに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
カラーバーを横向きで付ける	plt.colorbar(orientation='horizontal')
グラフの見た目をデフォルトでいい感じにセットする	sns.set()
数列xdataとリストydataについて破線グラフを描画して、その色をシエナに変更する	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
リストxdataとリストydataについての散布図をターコイズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
リストxdataとリストydataについて破線を描画してその色をダークターコイズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
散布図を重なりを見やすくシエナ色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
データフレームdfを見る	df.head()
リストxdataとリストydataについて散布図を描画して、マーカーの色をオーキッドに設定する	plt.plot(xdata, ydata, c='orchid')
折れ線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategrey')
xが真か調べる	bool(x)
リストxdataをハニーデュー色のヒストグラムで描画する	plt.hist(xdata, color='honeydew')
リストxdataとリストydataの折れ線グラフに、黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
プラム色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='plum')
データフレームdfの数値を小数点以下n桁で四捨五入して、更新する	df.round(n, inplace=True)
セットasetからaset2との共通要素を除く	aset.symmetric_difference_update(aset2)
ライトサーモン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightsalmon')
リストxdataとリストydataについて破線グラフを描画して、その色をマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='magenta')
リストxdataとリストydataについての散布図をダークサーモン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
配列xdataとリストydataの破線グラフを描画して、その色をカラーコードrgbにセットする	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
データ列xdataをブラウン色のヒストグラムを用いて描く	plt.hist(xdata, color='brown')
データフレームdfのリストalistで与えられた列を消す	df.drop(alist, axis=1)
それぞれnとn2をxとx2に代入する	x, x2 = n, n2
ラベンダーブラッシュを使って柱状図を描く	plt.hist(xdata, color='lavenderblush')
adateとadate2の時間差を秒で求める	(adate - adate2).total_seconds()
ダークターコイズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkturquoise')
sの最初の文字	s[0]
フローラルホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
乱数生成系列をnで初期化する	random.seed(n)
スレートブルー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='slateblue')
折れ線グラフの左三角マーカーを赤くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')
データ列xdataとリストydataの散布図をダークカーキ色で描く	plt.plot(xdata, ydata, c='darkkhaki')
データフレームdfを関数funcでグループ化する	df.groupby(func)
ダークターコイズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkturquoise')
正規表現で、sの中のASCII限定の正規表現patternよって置き換える	re.sub(pattern, repl, s, flags=re.ASCI)
リストxdataとリストydataについて散布図を描画して、マーカーの色をビスクに設定する	plt.plot(xdata, ydata, c='bisque')
dfのリストalistで指定されたカラムだけ抽出する	df[alist]
辞書adictからカウンタを新規に作って、Xに代入する	X = collections.Counter(adict)
アリスブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
破線グラフの色をシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
プラットフォームの符号付きの最大整数値	sys.maxsize
dsを等量でn個に分割する	pd.qcut(ds, n)
耐火レンガ色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
dfのカラムcol、col2、col3を抽出する	df[[col, col2, col3]]
リストxdataとリストydataについて折れ線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(xdata, ydata, color='goldenrod')
リストxdataとリストydataの折れ線グラフに、線幅nのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトサーモンに設定する	plt.plot(xdata, ydata, c='lightsalmon')
日時dtが何月か知る	dt.month
データフレームdfのリストalistカラムの欠損値を直後の値で埋める	df[alist].fillna(method='bfill')
ミディアムブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumblue')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、合計	df.groupby([col, col2], as_index=False).sum()
ターコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
リネン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='linen')
散布図をグレー色で描く	plt.plot(xdata, ydata, c='gray')
重なりを見やすく配列xdataと配列ydataの散布図をライトグレー色で描画する	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
データフレームdfのリストalistカラムの欠損値をxで埋める	df[alist].fillna(x)
ダークグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
リストxdataとリストydataについて破線グラフを描画して、その色をハニーデューに設定する	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
sを赤色で表示する	print(f'\033[31m{s}\033[0m')
重なりを見やすくライトシアン色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
データ列xdataとイテラブルydataについての散布図をライトスレイグレー色を使って描く	plt.plot(xdata, ydata, c='lightslategray')
ブルーバイオレット色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
リストxdataとリストydataについての散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークスラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategray')
リストxdataとリストydataについての散布図をラベンダー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
アリスブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
xを切り上げる	math.ceil(x)
数列xdataと数列ydataについて折れ線を描画して色をブルーバイオレットとする	plt.plot(xdata, ydata, color='blueviolet')
dfのalist列が正規分布からどの程度、尖っているか確認する	df[alist].skew()
数列xdataとリストydataについて破線を描画して、色を赤に変更する	plt.plot(xdata, ydata, linestyle='dash', color='red')
リストxdataとリストydataについてペールグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
配列iterableを文字列として連結する	''.join(map(str, iterable))
s全体がパターンpatternにASCII限定としてマッチするか見る	re.fullmatch(pattern, s, flags=re.ASCI)
折れ線グラフの色をトマトとする	plt.plot(xdata, ydata, color='tomato')
クリムゾン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
破線グラフの色をゴールドとする	plt.plot(xdata, ydata, linestyle='dash', color='gold')
ゲインズボロ色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
カウンタaCounterから最頻出の項目数	aCounter.most_common(0)[1]
タプルatuple中の一番小さい値	min(atuple)
タプルatuple内の要素が少なくともひとつ真か調べる	any(atuple)
ホワイトスモーク色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='whitesmoke')
リストxdataとリストydataについて貝殻色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seashell')
Pandasで、sを日付データに変換する	pd.to_datetime(s)
リストxdataとリストydataについて折れ線グラフを描画して、その色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, color='lavenderblush')
デックdeqから最初の文字列elementを取り除く	deq.remove(element)
ファイルパスfilenameをオープンして]バイナリ書き込みストリームを求める	open(filename, mode='wb')
sのn番目からとn2番目までの間にs2が含まれるか	s.find(s2, start=n, end=n2) != -1
リストxdataとリストydataについて折れ線を描画して、色をアリスブルー変える	plt.plot(xdata, ydata, color='aliceblue')
リストxdataについてのヒストグラムをタン色としてプロットする	plt.hist(xdata, color='tan')
リストxdataとリストydataについてゴーストホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
dsをPandasの日付型に変換する	pd.to_datetime(ds)
リストalistの文字列elementの位置をエラーなく使う	alist.index(element) if element in alist else -1
点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted')
破線グラフの色をフクシアにする	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
リストxdataとリストydataについての散布図をパパイヤウィップ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
colカラムで降順にdf全体をソートする	df.sort_values(by=col, ascending=False)
データフレームdf中のカラムcolをリストalistを境界値としてビン分割する	pd.cut(df[col], alist)
ブラック色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)
ミディアムパープル色の折れ線グラフを描く	plt.plot(xdata, ydata, color='mediumpurple')
ダークオレンジ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
タプルatupleの末尾	atuple[-1]
リストxdataと配列ydataの点線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
折れ線グラフに下三角マーカーを使う	plt.plot(xdata, ydata, marker='v')
オプションでエンコーディングをSJISに設定する	encoding = 'shift_jis'
代数計算を使う	import sympy
折れ線グラフの色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, color='palegoldenrod')
データ列dsの欠損値を最大値に設定する	ds.fillna(ds.max())
ミディアムブルー色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='mediumblue')
リストxdataとリストydataの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed')
シーグリーンでリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='seagreen')
オブジェクトobjがオブジェクトobj2か調べる	obj == obj2
散布図にミントクリーム色のマーカーを使う	plt.plot(xdata, ydata, c='mintcream')
sのの中でASCII限定のpatternパターンにマッチした文字列をreplで置換する	re.sub(pattern, repl, s, flags=re.ASCI)
リストxdataと数列ydataについて散布図を描画して、マーカーの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, c='lightslategrey')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, c='midnightblue')
折れ線グラフの丸マーカーを赤くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
sを最後のs2でに分割したときの残りの文字列	s.rpartition(s2)[-1]
リストxdataのヒストグラムをプロットする	plt.hist(xdata)
クラスCが名前付きタプルか調べる	issubclass(C, tuple)
ブラウン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)
破線グラフの色をダークブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
破線グラフの色をオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orange')
リストxdataをディープスカイブルー色のヒストグラムで描画する	plt.hist(xdata, color='deepskyblue')
数列xdataとリストydataについて折れ線グラフを描画して、その色をホットピンクにセットする	plt.plot(xdata, ydata, color='hotpink')
ライトグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgrey')
グラフの色を色差別なくする	sns.set(pallete='colorblind')
ペールグリーン色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
ミディアムアクアマリン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
ひとつでも空白がs内に含まれる	any(c.isspace() for c in s)
本日をsでフォーマットして文字列に変換する	datetime.datetime.today().strftime()
リストxdataとリストydataの青い一点鎖線を描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
リストxdataとリストydataについての散布図をデピンク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
nが5で割り切れるか調べる	n % 5 == 0
リストxdataとリストydataの折れ線グラフに、緑色の左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
オブジェクトobjがsという名前のプロパティを持つか調べる	hasattr(obj, s)
dfの内容を確認する	df.head()
リストxdataとリストydataの折れ線グラフに、大きさnの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markersize=n)
折れ線グラフの丸印を黒色に設定する	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
データフレームdfが正規分布からどれだけ、歪んでいるか見る	df.kurt()
sがリストalist内のいづれか調べる	s in alist
データフレームdf中のカラムcolをビン数nでビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
ネイビー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='navy')
オブジェクトobjがtextプロパティを持つか調べる	hasattr(obj, text)
データフレームdfのカラムcolの時	df[col].dt.hour
カラーバーを横向きで描画する	plt.colorbar(orientation='horizontal')
x2をxに代入する	x = x2
データフレームdfのカラムcolの曜日が何日目か見る	df[col].dt.dayofweek
データフレームdfをcolと列col2の組み合わせで集約して、標準偏差	df.groupby([col, col2], as_index=False).std()
リストxdataとリストydataについて散布図を描画して、マーカーの色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, c='blanchedalmond')
Pandasで、データフレームdfのカラムcolを日付データに変換し、データフレームdfのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
JSON形式のsをデータに変換する	json.loads(s)
折れ線グラフの色をドジャーブルーに変更する	plt.plot(xdata, ydata, color='dodgerblue')
データフレームdfをサンプリングする	df.sample()
ケンドール相関係数でデータフレームdfの相関行列	df.corr(method='kendall')
配列xdataと配列ydataについての散布図をホワイト色で描画する	plt.plot(xdata, ydata, c='white')
リストalistの末尾を除く	alist[:-1]
nが正の数か調べる	n > 0
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, c='darkolivegreen')
パパイヤウィップ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='papayawhip')
折れ線のポイントマーカーを黄色に指定する	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
データフレームdfのリストalist列の第三四分位数	df[alist].quantile(0.75)
コーンフラワーブルー色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='cornflowerblue')
f全体を行単位で分割して読み込む	f.readlines()
リストxdataとリストydataの実線グラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='solid', color='k')
xからx2の間の一様な乱数を生成する	random.uniform(x, x2)
折れ線グラフの色をサーモンに設定する	plt.plot(xdata, ydata, color='salmon')
リストxdataとリストydataの折れ線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, color=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
カウンタaCounter内の文字列element項目のカウント	aCounter[element]
ティール色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='teal')
リストxdataとリストydataについて散布図を描画して、マーカーの色をアンティークホワイトに設定する	plt.plot(xdata, ydata, c='antiquewhite')
リストxdataとリストydataの線幅nの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
破線グラフの色をライムに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lime')
デックdeqの要素を左にn個分ローテートする	deq.rotate(-n)
リストiterableの全順列	itertools.permutations(iterable)
日付adateが日付adate2と同時か調べる	adate == adate2
データフレームdfから破壊的に重複した行を削除する	df.drop_duplicates(inplace=True)
グラフ内のタイトルをsに設定する	plt.title(s)
イテラブルxdataとリストydataについての散布図をミスティローズ色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
ダークオレンジ色として散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
nの十六進文字列	hex(n)[2:]
データフレームdfを列col毎でグループ化して、合計を確認する	df.groupby(col).sum()
ファイルパスfilenameをバイナリ書き込み用にオープンして]fとする	f = open(filename, mode='wb')
JSONファイルのファイル入力finを読み込んで、dataとする	data = json.load(fin)
sをs2で二分し、前半の文字列を使う	s.partition(s2)[0]
イエローグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='yellowgreen')
数式として、eのzにnを代入する	e.subs(z, n)
ダークグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkgrey')
オーキッド色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orchid')
リストxdataをシエナ色のヒストグラムで描画する	plt.hist(xdata, color='sienna')
データ列xdataとイテラブルydataを折れ線グラフに描く	plt.plot(xdata, ydata)
カラーバーを水平にプロットする	plt.colorbar(orientation='horizontal')
オブジェクトobjがオブジェクトobj2に等しいか	obj == obj2
カウンタaCounterをリセットする	aCounter.clear()
重なりを見やすく散布図をパパイヤウィップ色で描画する	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
コーンフラワーブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='cornflowerblue')
パールゴールデンロッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='palegoldenrod')
リストxdataと配列ydataについて折れ線グラフを描画して、その色をアクアマリンにする	plt.plot(xdata, ydata, color='aquamarine')
日時dtと日時dt2の時間差は何秒か知る	(dt - dt2).total_seconds()
リストxdataとリストydataについての散布図をラベンダーブラッシュ色で描画する	plt.plot(xdata, ydata, c='lavenderblush')
配列xdataをy座標、配列ydataを横軸として、大きさnの散布図を描く	plt.scatter(xdata, ydata, s=n)
リストxdataとデータ列ydataについて折れ線グラフを描画して、その色をサドルブラウンにセットする	plt.plot(xdata, ydata, color='saddlebrown')
ミディアムスプリンググリーンを使ってイテラブルxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumspringgreen')
リストxdataとリストydataの破線を描画してその色をアザミに設定する	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
sを隔離する	sys.intern(s)
リストxdataと配列ydataの折れ線グラフを描画して、その色をシーグリーンにセットする	plt.plot(xdata, ydata, color='seagreen')
リストiterableの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
n年n2月n3日n4時n5分n6秒を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n6)
配列xdataと配列ydataの散布図を描画して、マーカーの色をスラグレー変える	plt.plot(xdata, ydata, c='slategray')
ヒストグラムをミディアムアクアマリン色で描画する	plt.hist(xdata, color='mediumaquamarine')
リストxdataとリストydataの折れ線グラフにダイアモンド印をプロットする	plt.plot(xdata, ydata, marker='D')
折れ線グラフの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, color='lavenderblush')
ミディアムシアグリーン色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
数式として、連立方程e=0,e2の解を算出する	sympy.solve([e, e2])
折れ線グラフの右三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
リストxdataとリストydataの点線グラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dotted', color='k')
破線の色をネイビー変える	plt.plot(xdata, ydata, linestyle='dash', color='navy')
nが一桁の数か調べる	-9 <= n <= 9
散布図に黒いダイアモンドマーカーを用いる	plt.plot(xdata, ydata, marker='D', c='k')
ホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='white')
配列xdataとリストydataについてライトスチールブルー色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
フォレストグリーン色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、分散	df.groupby([col, col2], as_index=False).var()
散布図にカラーコードrgbの丸マーカーを用いる	plt.plot(xdata, ydata, marker='o', c=rgb)
アクアマリン色でリストxdataについての柱状グラフをプロットする	plt.hist(xdata, color='aquamarine')
ターコイズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='turquoise')
カーキ色としてヒストグラムを描画する	plt.hist(xdata, color='khaki')
標準エラーを使う	sys.stderr
日付adateが金曜日か調べる	adate.weekday() == 4
リストxdataとリストydataについての散布図をピーチパフ色で描画する	plt.plot(xdata, ydata, c='peachpuff')
一点鎖線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
右にデックdeqの順序をローテートする	deq.rotate()
aCounterとカウンタaCounter2に共通する要素からなるカウンタを算出する	aCounter & aCounter2
散布図にダークマゼンタ色のマーカーを使う	plt.plot(xdata, ydata, c='darkmagenta')
nからn2未満の間でn3ステップの整数群から整数乱数を生成する	random.randrange(n, n2, n3)
重なりを見やすくデータ列xdataとリストydataについての散布図をライトスレイグレー色で描画する	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
配列xdataとデータ列ydataについての散布図に星印を描画する	plt.plot(xdata, ydata, marker='*')
ユーザが整数を入力する	int(input())
モカシン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
カウンタaCounterの項目一覧を見る	aCounter.keys()
データ列dsの値を正規表現patternでまとめてsに置き換える	ds.replace(pattern, s, regex=True)
整数nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
リストxdataとリストydataの折れ線グラフに、緑色の三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
破線グラフの色をパウダーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
データフレームdfのリストalistカラムの分散	df[alist].var()
日付adateが土曜日か調べる	adate.weekday() == 5
リストxdataとリストydataについて破線グラフを描画して、その色をダークグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
リストxdataをサンディーブラウン色のヒストグラムで描画する	plt.hist(xdata, color='sandybrown')
ピンク色で散布図を描画する	plt.plot(xdata, ydata, c='pink')
サンディーブラウン色としてリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='sandybrown')
数式として、eを簡略にする	sympy.sympify(e)
リストxdataとリストydataについて散布図を描画して、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
コーラル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='coral', alpha=0.5)
オブジェクトelementがタプルatupleに含まれる	element in atuple
破線グラフの色をシエナにセットする	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
nまたはn2	n or n2
リストxdataと数列ydataの折れ線グラフを描画して、色を黒くする	plt.plot(xdata, ydata, color='k')
ドジャーブルー色として数列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='dodgerblue')
簡易クラスobjを辞書に変換する	obj._asdict()  # isinstance(obj, NamedTuple)
ミディアムアクアマリン色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
リストxdataとリストydataについて折れ線グラフを描画して、その色を紺碧に設定する	plt.plot(xdata, ydata, color='azure')
ミディアムブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumblue')
グラフ中の縦軸の軸ラベルをsに設定する	plt.ylabel(s)
リストxdataとリストydataについて破線グラフを描画して、その色をナバホホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
インデント幅nで、辞書adictをJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)
プラム色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='plum')
データフレームdfのカラムcolを削除する	df.drop(col, axis=1)
リストxdataとリストydataについてホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='white')
データフレームdfをJSONLファイルfilenameに小数点以下3桁まで保存する	df.to_csv(filename, float_format='%.3f')
リストxdataとリストydataについての散布図をオールドレース色で描画する	plt.plot(xdata, ydata, c='oldlace')
ガンマ関数	math.gamma(x)
リストxdataとリストydataについてスカイブルー色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
1+xの自然対数	math.log1p(x)
データ列dsは何年か見る	ds.dt.year
データフレームdfをJSONLファイルfilenameにBOM付きで保存する	df.to_csv(filename, encoding='utf_8_sig')
atupleとタプルatuple2を加える	atuple + atuple2
ライトスレイグレー色で配列xdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='lightslategrey')
配列xdataとリストydataについての散布図をダークシアン色で重なりを見やすく描く	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
データフレームdfのカラムcolの最頻値の出現回数を求める	df[col].freq()
折れ線グラフの右三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
リストxdataとリストydataについてターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
日付adateをnヶ月前に戻す	adate - datetime.timedelta(months=n)
フクシア色でデータ列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='fuchsia')
リストxdataとリストydataについての散布図をライトスカイブルー色で描画する	plt.plot(xdata, ydata, c='lightskyblue')
サンディーブラウン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='sandybrown')
データフレームdfのカラムcolとカラムcol2毎の平均値	df.groupby([col, col2], as_index=False).mean()
リストxdataとリストydataについての散布図をアンティークホワイト色で描画する	plt.plot(xdata, ydata, c='antiquewhite')
折れ線グラフの色をハリウッドにする	plt.plot(xdata, ydata, color='burlywood')
折れ線グラフを一点鎖線に設定する	plt.plot(xdata, ydata, linestyle='dashbot')
アクア色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aqua')
xが一桁の数か調べる	-9 <= x <= 9
データフレームを表示するとき、ヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
配列xdataとイテラブルydataの散布図を描画して、色をダークグレーに変更する	plt.plot(xdata, ydata, c='darkgray')
カーキ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='khaki')
リストxdataとリストydataについての散布図をリネン色を用いて描画する	plt.plot(xdata, ydata, c='linen')
折れ線グラフの色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, color='mediumseagreen')
配列iterableの要素をデックdeqの先頭に追加する	deq.extendleft(iterable)
sの左端はs2か確認する	s.startswith(s2)
イテラブルxdataとリストydataについて散布図を描画して、マーカーの色をライトイエローに設定する	plt.plot(xdata, ydata, c='lightyellow')
リストxdataとリストydataの折れ線を描画して、その色をプラムに変更する	plt.plot(xdata, ydata, color='plum')
sとs2と凡例を表示する	plt.legend([s, s2])
散布図にマルーン色のマーカーを使う	plt.plot(xdata, ydata, c='maroon')
リストxdataとリストydataについて破線グラフを描画して、その色をブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='brown')
配列xdataとリストydataの散布図をオーキッド色で描画する	plt.plot(xdata, ydata, c='orchid')
データフレームdfに文字列valueと文字列value2があるかどうかテストする	df.isin([value, value2])
日時dtからn秒分、減算する	dt - datetime.timedelta(seconds=n)
ラベンダー色としてデータ列xdataについての柱状図を描画する	plt.hist(xdata, color='lavender')
辞書adictからkeyの値か、もしくは文字列elementを得る	adict.get(key, element)
nがn2	n == n2
ライムグリーン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='limegreen')
データフレームdfのカラムcolとカラムcol2のヒートマップを描画する	sns.heatmap(df[[col, col2]].corr())
折れ線グラフを実線に設定する	plt.plot(xdata, ydata, linestyle='solid')
リストxdataをライトグリーン色のヒストグラムで描画する	plt.hist(xdata, color='lightgreen')
リストxdataとリストydataについての散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
ライトブルー色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
散布図にカラーコードrgbの丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c=rgb)
リストxdataをパウダーブルー色の柱状図で描画する	plt.hist(xdata, color='powderblue')
データ列xdataと数列ydataの散布図をパールバイオレットレッド色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
zがマイナス無限大に近づく場合のeの極限値を求める	sympy.limit(e, z, -oo)
デックdeqの右から要素を取り除く	deq.pop()
配列xdataとデータ列ydataについてオリベドラブ色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
ピンク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='pink')
リストxdataとリストydataについて散布図を描画して、マーカーの色をサドルブラウンに設定する	plt.plot(xdata, ydata, c='saddlebrown')
リストxdataとリストydataについて点線グラフを描画してその色を黒にする	plt.plot(xdata, ydata, linestyle='dotted', color='k')
レモンシフォン色の折れ線を描画する	plt.plot(xdata, ydata, color='lemonchiffon')
リストxdataとリストydataについての散布図をパレットトルコイズ色で描画する	plt.plot(xdata, ydata, c='paleturquoise')
データフレームdf中のカラムcolとカラムcol2に重複があれば、削除する	df.drop_duplicates(subset=col)
ロイヤルブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
破線グラフの色を貝殻変える	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
配列xdataをミディアムブルー色のヒストグラムで描画する	plt.hist(xdata, color='mediumblue')
データ列xdataとデータ列ydataの破線を描画して、その色をレベッカパープルにセットする	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
日付adateにn月分、加算する	adate + datetime.timedelta(months=n)
データフレームdfのリストalistカラムの空文字をドロップする	df[alist].replace('', np.nan).dropna()
リストxdataとリストydataについて折れ線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(xdata, ydata, color='blueviolet')
リストxdataとリストydataについて折れ線グラフを描画してその色をシャルトルーズに設定する	plt.plot(xdata, ydata, color='chartreuse')
パールゴールデンロッド色の折れ線を描画する	plt.plot(xdata, ydata, color='palegoldenrod')
ダークマゼンタ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkmagenta')
重なりを見やすくライムグリーン色で配列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
データ列dsを丸めて、整数型にする	ds.round().astype(int)
ファイルfilenameを文字コードtextでオープンする]	open(filename, encoding=text)
デピンク色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='deeppink')
colカラムとcol2でデータフレームdfをソートして、NaNを先頭に来るようにする	df.sort_values(by=[col,col2], na_position='first')
リストxdataとリストydataについて折れ線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(xdata, ydata, color='ghostwhite')
データフレームdfを100の位で丸めて、整数型にする	df.round(-2).astype(int)
n年n2月n3日を日付に変換する	datetime.date(year=n, month=n2, day=n3)
配列xdataとリストydataについて折れ線を描画して、その色をナバホホワイトに設定する	plt.plot(xdata, ydata, color='navajowhite')
セットasetがセットaset2の上位集合か調べる	aset.issuperset(aset2)
リストiterableをダミー変数に変換する	pd.get_dummies(iterable)
リストxdataとリストydataの点線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='dotted', color='r')
既存のファイルfilenameを文字コードtextを用いて追加できるようにオープンする]	open(filename, mode='a', encoding=text)
リストxdataとリストydataについての散布図を赤色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='red', alpha=0.5)
ダークオレンジ色の度数分布図としてリストxdataをプロットする	plt.hist(xdata, color='darkorange')
リストxdataとリストydataについて破線グラフを描画して、その色をプラムに設定する	plt.plot(xdata, ydata, linestyle='dash', color='plum')
既存のファイルfilenameを文字コードtextで追加できるようにオープンする]	open(filename, mode='a', encoding=text)
配列xdataとリストydataについて破線グラフを描画して、色をリネンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='linen')
xにおけるガンマ関数の絶対値に自然対数をとった値	math.lgamma(x)
アルファベットがs内に含まれるか	any(c.isalpha() for c in s)
名前付きタプルオブジェクトobjを辞書に変換する	obj._asdict()  # isinstance(obj, NamedTuple)
散布図に黒いポイントマーカーを用いる	plt.plot(xdata, ydata, marker='.', c='k')
リストxdataとリストydataについて散布図を描画して、マーカーの色をホワイトスモークに設定する	plt.plot(xdata, ydata, c='whitesmoke')
赤い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')
リストxdataとリストydataについての散布図をスノー色で描画する	plt.plot(xdata, ydata, c='snow')
dfの列colをカテゴリデータに変換する	df[col].astype(object)
データ列dsが何日か確認する	ds.dt.day
オブジェクトobjのバイト長	sys.getsizeof(obj)
ファイルfilenameをバイナリ書き込みできるようにオープンする]	open(filename, mode='wb')
xのラジアン	math.radians(x)
sは全て数値か調べる	s.isnumeric()
スプリンググリーン色のマーカーを用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
データフレームdfを列colとcol2を用いてソートして、更新する	df.sort_values(by=[col,col2], inplace=True)
リストxdataとリストydataの折れ線グラフを描画して、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
データフレームを表示するとき、折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
データフレームdfのカラムcolとカラムcol2を折れ線グラフとして描画する	plt.plot(df[col], df[col2])
リストxdataとリストydataについての散布図をカデットブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
カウンタaCounterを低頻出順に列挙する	aCounter.most_common()[::-1]
リストxdataとリストydataの散布図をオーキッド色で重なりを見やすく描く	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
リストiterableからクラスCのインスタンスを新しく作る	C._make(iterable)  # issubclass(C, tuple)
AとBの二重ループを単ループにする	"for x, y in itertools.product(iterable, iterable2):
    pass"
辞書adictのキーと値を入れ替える	{v: k for k, v in adict.items()}
リストxdataとリストydataについて破線グラフを描画して、その色を紺碧に設定する	plt.plot(xdata, ydata, linestyle='dash', color='azure')
ネイビー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='navy')
ライトグリーン色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
リストxdataとリストydataについてディムグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
リストxdataをダークオーキッド色のヒストグラムで描画する	plt.hist(xdata, color='darkorchid')
リストxdataとリストydataについての散布図をホワイトスモーク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
リストxdataとリストydataの折れ線グラフを描画して、色をsに設定する	plt.plot(xdata, ydata, color=s)
オブジェクトobjをデバッグ向けの文字列に変換する	repr(obj)
サドルブラウン色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='saddlebrown')
データ列dsをリストalistを境界値としてビン分割する	pd.cut(ds, alist)
再帰エラーを防ぐために、上限をnに設定する	sys.setrecursionlimit(n)
ライトスレイグレー色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
リストxdataとリストydataについて破線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
赤い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='r')
グラフにy=0の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
タプルatupleを逆順にする	atuple[::-1]
有理数を使う	import fractions
リストxdataとリストydataについての散布図を青色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)
破線グラフの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
sにまとめて正規表現でデータ列dsを置換する	ds.replace(pattern, s, regex=True)
xとx2のノルムを計算する	math.hypot(x, x2)
セットasetとセットaset2に共通する要素からなる集合	aset.intersection(aset2)
配列xdataとリストydataについて折れ線グラフを描画して、その色をラベンダーブラッシュ変える	plt.plot(xdata, ydata, color='lavenderblush')
数列xdataと数列ydataについて破線グラフを描画してその色をダークブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
xが無限大か調べる	math.isinf(x)
改行なしに列iterableを出力する	print(iterable, end='')
リストxdataとリストydataについて散布図を描画して、マーカーの色を黄色に設定する	plt.plot(xdata, ydata, c='yellow')
文字コードnを文字に変換する	chr(n)
淡いピンク色色でデータ列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='lightpink')
リストxdataとリストydataについての散布図をダークシアグリーン色で描画する	plt.plot(xdata, ydata, c='darkseagreen')
リストxdataとイテラブルydataについて散布図を描画してマーカーの色をイエローグリーンにする	plt.plot(xdata, ydata, c='yellowgreen')
青い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='b')
ハリウッド色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
リストxdataとデータ列ydataの折れ線グラフに右三角印を描画する	plt.plot(xdata, ydata, marker='>')
散布図にオーキッド色のマーカーを用いる	plt.plot(xdata, ydata, c='orchid')
カウンタaCounterをペアリストに変換する	aCounter.items()
ダークスレートブルー色として散布図を描画する	plt.plot(xdata, ydata, c='darkslateblue')
データフレームdfのcolの欠損値を最頻値に指定する	df[col].fillna(df[col].mode().iloc[0])
折れ線グラフの色を赤に設定する	plt.plot(xdata, ydata, color='red')
リストxdataとリストydataについて破線グラフを描画して、その色をラベンダーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
リストxdataとリストydataの折れ線グラフに、青い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
セットasetがセットaset2の上位集合か確認する	aset.issuperset(aset2)
破線グラフの色を青に変更する	plt.plot(xdata, ydata, linestyle='dash', color='blue')
本日が水曜日か調べる	datetime.datetime.today().weekday() == 2
シアン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='cyan')
バイオレット色でデータ列xdataについての柱状グラフを描く	plt.hist(xdata, color='violet')
オーキッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='orchid')
点線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dotted', color='r')
ダークオレンジ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkorange')
リストxdataとリストydataについて散布図を描画して、左三角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
散布図にカラーコードrgbの下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c=rgb)
黒い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
データフレームを表示するとき、小数点以下の表示精度を設定する	pd.set_option('precision', n)
折れ線グラフの色をハリウッドに設定する	plt.plot(xdata, ydata, color='burlywood')
折れ線グラフの色をタンにセットする	plt.plot(xdata, ydata, color='tan')
データフレームdfのcol列とcol2を抽出する	df[[col, col2]]
スカイブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
リストxdataとリストydataについての散布図にsという凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
コーラル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='coral')
ローングリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lawngreen')
スチールブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='steelblue')
リストxdataとリストydataについて破線グラフを描画して、その色をシルバーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='silver')
リストxdataとリストydataについての散布図に赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
データ列xdataとデータ列ydataの赤い破線を描く	plt.plot(xdata, ydata, linestyle='dashed', color='r')
sを走査し、パターンpatternに大文字・小文字を無視してマッチするか見る	re.search(pattern, s, flags=re.IGNORECASE)
ナバホホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='navajowhite')
リストxdataとリストydataについてミディアムバイオレットレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
数列xdataとイテラブルydataについてプラム色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='plum')
データフレームdfのリストalistカラム中に文字列valueと文字列value2がいくつあるか数える	df[alist].isin([value, value2]).sum()
データ列ds中にある文字列valueと文字列value2の合計を数える	ds.isin([value, value2]).sum()
Pandasとしてfilenameをデータフレームとして読み込む	pd.read_excel(filename)
散布図にオーキッド色のマーカーを使う	plt.plot(xdata, ydata, c='orchid')
dfを各colカラム毎にまとめた標準偏差を確認する	df.groupby(col).std()
s全体をASCII限定としてパターンpatternにマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)
リストiterableを無限に繰り返す	itertools.cycle(iterable)
ペールグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='palegreen')
リストxdataをスカイブルー色のヒストグラムで描画する	plt.hist(xdata, color='skyblue')
リストxdataをベージュ色の柱状図で描く	plt.hist(xdata, color='beige')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークバイオレットに設定する	plt.plot(xdata, ydata, c='darkviolet')
ハリウッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='burlywood')
カーキ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
リストxdataとリストydataの青い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='b')
破線グラフの色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
貝殻色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seashell')
ミディアムアクアマリン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumaquamarine')
リストxdataとリストydataの一点鎖線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
グラフの見た目をデフォルトでいい感じに設定する	sns.set()
配列xdataとリストydataについてフローラルホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
オプションで、標準エラーを使う	file = sys.stderr
データフレームdfをJSONLファイルfilenameにインデックスを付けずに保存する	df.to_csv(filename, index=None)
数列xdataをスレートブルー色のヒストグラムで描く	plt.hist(xdata, color='slateblue')
マルーン色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='maroon')
オブジェクトobjにsという名前のプロパティが存在するか調べる	hasattr(obj, s)
タプルatupleの文字列elementが最初に見つかるインデックスを使う	atuple.index(element)
折れ線グラフの色をオリベドラブに設定する	plt.plot(xdata, ydata, color='olivedrab')
最大長をnにしてリストiterableから両端キューを作って、Xに代入する	X = collections.deque(iterable, maxlen=n)
日付adateが木曜日かどうか調べる	adate.weekday() == 3
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
日付と時間dtからn分、減算する	dt - datetime.timedelta(minutes=n)
データフレームdfを関数funcとしてグループ化する	df.groupby(func)
データフレームdf中のカラムcolとカラムcol2に重複があれば、マスクする	df.duplicated(subset=[col1, col2])
赤色の左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='r')
データ列ds中の欠損値の合計を数える	ds.isna().sum()
nがn2未満、またはn3以上か調べる	n < n2 or n >= n3
ヘッダを指定せずfilenameを読み込む	pd.read_csv(filename, header=None)
データ列dsの平均値	ds.mean()
シルバー色を用いて配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='silver')
リストxdataとリストydataについて破線グラフを描画して、その色を小麦に設定する	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
ダークスレートブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkslateblue')
リストxdataとリストydataについての散布図をミディアムパープル色で描画する	plt.plot(xdata, ydata, c='mediumpurple')
リストxdataとデータ列ydataについて折れ線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(xdata, ydata, color='indianred')
破線グラフの色をホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='white')
散布図に赤色のマーカーを使う	plt.plot(xdata, ydata, c='red')
atupleを昇順にソートする	sorted(atuple, reverse=False)
折れ線グラフの色をマゼンタに設定する	plt.plot(xdata, ydata, color='magenta')
破線グラフの色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
arrayを四分位数ごとにビン分割する	pd.qcut(array, 4)
リストxdataとリストydataの折れ線グラフに、赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
リストiterableから両端キューを新しく作って、Xに代入する	X = collections.deque(iterable)
折れ線の下三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
Pandasでdfのカラムcolを日付データに変換し、インデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
散布図にホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='white')
リストxdataとリストydataについて散布図を描画して、マーカーの色をクリムゾンに設定する	plt.plot(xdata, ydata, c='crimson')
リストxdataとリストydataの散布図をサーモン色としてプロットする	plt.plot(xdata, ydata, c='salmon')
紺碧色の折れ線を描画する	plt.plot(xdata, ydata, color='azure')
データフレームdfのcolの文字列長を列として求める	df[col].str.len()
折れ線グラフの色を赤くする	plt.plot(xdata, ydata, color='r')
カウンタaCounterにリストiterableを追加する	aCounter.update(iterable)
リストxdataとリストydataについての散布図を大きさnで描画する	plt.scatter(xdata, ydata, s=n)
散布図に下三角マーカーを使う	plt.plot(xdata, ydata, marker='v')
リストxdataとデータ列ydataの折れ線グラフに、線幅nのクロス印を描画する	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
dfのcolがxの行を抽出する	df[df[col] == x]
ゴールデンロッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='goldenrod')
重なりを見やすく数列xdataと数列ydataについての散布図をオールドレース色で描画する	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
コーンフラワーブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='cornflowerblue')
数列xdataとイテラブルydataについての散布図をブラウン色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='brown', alpha=0.5)
リストxdataとイテラブルydataについてアリスブルー色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
カラーコードrgbの四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
配列xdataを貝殻色のヒストグラムで描画する	plt.hist(xdata, color='seashell')
リストxdataをライトスレイグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightslategrey')
データフレームdfのカラムcolの未入力値をxで埋める	df[col].fillna(x)
淡いピンク色色を用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をグリーンに設定する	plt.plot(xdata, ydata, color='green')
リストxdataとリストydataについての散布図をローングリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
改行	'\n'
リストxdataとリストydataについて散布図を描画して、マーカーの色をオレンジに設定する	plt.plot(xdata, ydata, c='orange')
データフレームdfからalistで指定されたデータ型の列を除外する	df.select_dtypes(exclude=alist)
破線グラフの色をミディアムターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
リストxdataとリストydataの折れ線グラフに、黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
最大長nの両端キューをiterableから新しく作る	collections.deque(iterable, maxlen=n)
綺麗なグラフを用いる	import seaborn as sns
ティール色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='teal')
ディムグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
リストxdataとリストydataについての散布図をナバホホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
整数nを二進表現に変換する	bin(n)
日付adateからn時間分、減算する	adate - datetime.timedelta(hours=n)
ライム色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='lime')
辞書adictを浅くコピーする	dict(adict)
リストxdataとリストydataについて折れ線を描画して、その色をゴーストホワイトに指定する	plt.plot(xdata, ydata, color='ghostwhite')
グラフの内で日本語を表示可能なようにする	sns.set(font='IPAexGothic')
サーモン色でリストxdataと数列ydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
デックdeqのn〜n2の部分値を使う	collections.deque(itertools.islice(deq, n, n2))
dfに文字列valueがあるか調べる	df.isin([value])
要素数5の空の配列を作る	np.empty(5)
折れ線グラフの色をサンディーブラウンに設定する	plt.plot(xdata, ydata, color='sandybrown')
書き込み用にファイルfilenameをsの示すエンコーディングでオープンする]	open(filename, mode='w', encoding=s)
sを長さnでパディングする	s.zfill(n)
破線グラフの色を青に設定する	plt.plot(xdata, ydata, linestyle='dash', color='blue')
リストxdataと数列ydataについて折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
ディムグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
リストxdataとリストydataについてライトスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
オプションで、エンコーディングをBOM付きに指定する	encoding = 'utf_8_sig'
リストxdataとリストydataの散布図を描画して、マーカーの色をミディアムターコイズに設定する	plt.plot(xdata, ydata, c='mediumturquoise')
ビスク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
オプションで、標準出力を使う	file = sys.stdout
日付adateが木曜日か調べる	adate.weekday() == 3
スピアマン相関係数でデータフレームdfのリストalistカラムの相関行列	df[alist].corr(method='spearman')
エンコーディング	sys.getdefaultencoding()
散布図にディムグレー色のマーカーを使う	plt.plot(xdata, ydata, c='dimgrey')
Pythonのバージョン	sys.version
リストxdataとリストydataについて折れ線グラフを描画して、その色をサンディーブラウンに設定する	plt.plot(xdata, ydata, color='sandybrown')
配列xdataと配列ydataについて散布図を描画して、マーカーの色をパープルとする	plt.plot(xdata, ydata, c='purple')
nの八進数表現	oct(n)
リストxdataとリストydataについての散布図をロージーブラウン色で描画する	plt.plot(xdata, ydata, c='rosybrown')
日時dtをタプルに変換する	dt.timetuple()
nが奇数か調べる	n % 2 == 1
デックdeqの末尾にオブジェクトelementを追加する	deq.append(element)
リストxdataとリストydataの折れ線グラフを描画して、色を青くする	plt.plot(xdata, ydata, color='b')
折れ線グラフのバツマーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='x', markersize=n)
散布図にコーンフラワーブルー色のマーカーを使う	plt.plot(xdata, ydata, c='cornflowerblue')
ライトスカイブルー色でイテラブルxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='lightskyblue')
イテラブルxdataをオレンジ色のヒストグラムでプロットする	plt.hist(xdata, color='orange')
リストxdataとデータ列ydataについて折れ線を描画してその色をデピンクにセットする	plt.plot(xdata, ydata, color='deeppink')
データフレームdfのカラムcolを配列に変換する	df[col].values
出現したpatternパターンでsを分割する	re.split(pattern, s)
破線グラフの色をマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='magenta')
折れ線グラフの色をタンに設定する	plt.plot(xdata, ydata, color='tan')
散布図を重なりを見やすくベージュ色のマーカーでプロットする	plt.plot(xdata, ydata, c='beige', alpha=0.5)
パウダーブルー色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='powderblue')
破線グラフの色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
リストxdataとリストydataについて破線グラフを描画して、その色をグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='green')
データ列dsの文字列長を列として使う	ds.str.len()
xが-9以上、9以下か調べる	-9 <= x <= 9
リストxdataとリストydataについて折れ線グラフを描画して、その色をネイビーに設定する	plt.plot(xdata, ydata, color='navy')
配列xdataとリストydataについて散布図を描画して、マーカーの色をチョコレートに変更する	plt.plot(xdata, ydata, c='chocolate')
パープル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='purple', alpha=0.5)
モカシン色を用いてヒストグラムを描画する	plt.hist(xdata, color='moccasin')
2×3の空配列を作る	np.empty((2, 3))
リストxdataとリストydataについてライム色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lime')
アリスブルー色としてリストxdataとイテラブルydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
モカシン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='moccasin')
ファイルfilenameのファイルサイズ	os.path.get_size(filename)
データ列dsの値が未入力値か	ds.isna()
データフレームdf全体を行によって降順で並べる	df.sort_index(ascending=False)
日時dtの時間数を使う	dt.hour
最大長nの両端キューを新しく作る	collections.deque(maxlen=n)
折れ線グラフの左三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
配列xdataとリストydataについての散布図をカデットブルー色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
データフレームdfの空文字を欠損値に変換し、ドロップする	df.replace('', np.nan).dropna()
ディープスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
データ列dsの未入力値を最小値にセットする	ds.fillna(ds.min())
日時dtををn週間後に進める	dt + datetime.timedelta(weeks=n)
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、個数	df.groupby([col, col2], as_index=False).count()
リストxdataとリストydataについて破線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
重なりを見やすくリストxdataとリストydataについての散布図をライトサーモン色を用いて描画する	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
リストxdataをティール色のヒストグラムで描画する	plt.hist(xdata, color='teal')
散布図をrgbの星マーカーを使って描く	plt.plot(xdata, ydata, marker='*', c=rgb)
破線グラフの色をシルバーとする	plt.plot(xdata, ydata, linestyle='dash', color='silver')
ラベンダーブラッシュ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lavenderblush')
折れ線グラフの丸印を赤色にする	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
リストxdataと数列ydataの散布図を描画して印をポイントに設定する	plt.plot(xdata, ydata, marker='.')
sが数字	s.isdigit()
リストxdataとリストydataについて散布図を描画して、マーカーの色をサンディーブラウンに設定する	plt.plot(xdata, ydata, c='sandybrown')
コマンドの一覧を得る	sys.argv[1:]
チョコレート色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='chocolate')
atupleのn番目からn2番目までの部分	atuple[n:n2]
配列xdataとデータ列ydataについての散布図をダークサーモン色として重なりを見やすく描く	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
ライトゴールドロディイエロー色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
数列xdataをディムグレー色のヒストグラムとして描画する	plt.hist(xdata, color='dimgrey')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークオレンジに設定する	plt.plot(xdata, ydata, color='darkorange')
リストxdataとリストydataのカラーコードrgbの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
日時dtをn日前に戻す	dt - datetime.timedelta(days=n)
リストxdataとリストydataについて散布図を描画して、色をアザミ変える	plt.plot(xdata, ydata, c='thistle')
リストxdataとリストydataについてアイボリー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ivory')
データ列dsのどの値が頻出か調べる	ds.mode()
リストiterableから新しい多重集合を新規に用意してXに代入する	X = collections.Counter(iterable)
レモンシフォン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lemonchiffon')
リストxdataと配列ydataの折れ線グラフを描画して、その色をミディアムターコイズとする	plt.plot(xdata, ydata, color='mediumturquoise')
ダークブルー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='darkblue')
散布図にペルー色のマーカーを使う	plt.plot(xdata, ydata, c='peru')
セットasetの浅いコピー	aset.copy()
リストxdataとリストydataについての散布図を黄色色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
パウダーブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='powderblue')
データフレームdfのカラムcolをインデックスに設定する	df.set_index(col)
折れ線グラフの色をブラウンに設定する	plt.plot(xdata, ydata, color='brown')
nからn2の範囲	range(n, n2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, c='mediumvioletred')
nが1、もしくは2、もしくは3に等しいか調べる	n == 1 or n == 2 or n == 3
オプションで、文字コードtextを使う	encoding = text
dfのcolを行に指定する	df.set_index(col)
リストxdataとリストydataについて破線グラフを描画して、その色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
リストxdataとリストydataについて折れ線グラフを描画して、その色をゲインズボロに設定する	plt.plot(xdata, ydata, color='gainsboro')
ハリウッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='burlywood')
sの先頭でパターンpatternに複数行対応としてマッチするか見る	re.match(pattern, s, flags=re.MULTILINE)
リストxdataとリストydataについて折れ線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(xdata, ydata, color='powderblue')
データフレームdf中のcolとcol2に重複があれば削除する	df.drop_duplicates(subset=col)
カデットブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='cadetblue')
リストxdataとリストydataについて散布図を描画して、ポイントマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をライトシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
データフレームdfのリストalistカラムを1000の位で丸めて、整数型にする	df[alist].round(-3).astype(int)
散布図にダークオーキッド色のマーカーを使う	plt.plot(xdata, ydata, c='darkorchid')
nがn2で割り切れるか調べる	n % n2 == 0
折れ線グラフの色をダークブルーに設定する	plt.plot(xdata, ydata, color='darkblue')
黒いダイアモンド印で散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')
リストxdataをラベンダーブラッシュ色のヒストグラムで描画する	plt.hist(xdata, color='lavenderblush')
sを大文字・小文字を無視したパターンpatternで分割する	re.split(pattern, s, flags=re.IGNORECASE)
明日の日付	datetime.date.today() + datetime.timedelta(days=1)
日時dtををn時間後に進める	dt + datetime.timedelta(hours=n)
n2がn以上かつn3以下	n <= n2 and n2 <= n3
折れ線の右三角マーカーを青色に変更する	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
日付adateの日を見る	adate.day
タプルatupleをリストに変換する	list(atuple)
折れ線グラフの色をパレットトルコイズに設定する	plt.plot(xdata, ydata, color='paleturquoise')
日時dtと日時dt2の時間差が何分か知る	(dt - dt2).total_seconds()//60
s全体がpatternパターンに大文字・小文字を無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
散布図に黒い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='k')
ファイルfilenameから読み込みストリームをオープンして]、fとする	f = open(filename, mode='r')
整数nの各桁の総和	sum(map(int, str(int(n))))
オブジェクトelementと文字列element2をタブで区切って表示する	print(element, element2, sep='\t')
データフレームdfのカラムcolの欠損値を最小値に設定する	df[col].fillna(df[col].min())
sのn番目より前にs2が含まれない	s.find(s2, end=n) == -1
破線グラフの色をマルーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
データフレームdfのcolがx以上のデータを抽出する	df[df[col] >= x]
リストxdataとリストydataについて破線グラフを描画して、その色をダークターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
リストalistを引数として展開して表示する	print(*alist, sep=',')
a(リスト)をflattenする	list(itertools.chain.from_iterable(a))
データフレームdfのalistで与えられたカラムの相関行列ケンドールで	df[alist].corr(method='kendall')
nからn2までのひとつ飛ばしの整数列	list(range(n, n2+1, 2))
dfのカラムcol	df[col]
コーンズシルク色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='cornsilk')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークサーモンに設定する	plt.plot(xdata, ydata, c='darksalmon')
アクアマリン色の折れ線を描画する	plt.plot(xdata, ydata, color='aquamarine')
二次元タプルatupleをフラット化する	sum(atuple)
ミディアムシアグリーン色でリストxdataについての度数分布図を描く	plt.hist(xdata, color='mediumseagreen')
データフレームdfから重複を残さず、削除する	df.drop_duplicates(keep=False)
リストxdataとリストydataについてブルーバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
xが-9以上、9以下	-9 <= x <= 9
折れ線グラフの色を淡いピンク色に設定する	plt.plot(xdata, ydata, color='lightpink')
破線グラフの色をオレンジレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
散布図にモカシン色のマーカーを使う	plt.plot(xdata, ydata, c='moccasin')
リストxdataとリストydataについて散布図を描画して、マーカーの色をカーキに設定する	plt.plot(xdata, ydata, c='khaki')
シャルトルーズ色で重なりを見やすく数列xdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
ブラウン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='brown')
配列xdataとイテラブルydataの折れ線グラフに、赤い丸印を描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
ダークオリーブグリーン色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
数式として、zについてeの微分を求める	sympy.diff(e, z)
散布図をミディアムスレートブルー色のマーカーで重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
リストiterableを累積したイテラブルを求める	itertools.accumulate(iterable, operator.mul)
ビスク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='bisque')
エポックtimestampを日時に変換する	datetime.datetime.fromtimestamp(timestamp)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, c='lightslategray')
日時dtが何時か知る	dt.hour
adictをソートしてJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False, sort_keys=True)
リストxdataと数列ydataについてライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
ライム色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lime', alpha=0.5)
sの先頭でパターンpatternにASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
データフレームdfのリストalistカラムの欠損値を平均値に設定する	df[alist].fillna(df[alist].mean())
ミッドナイトブルー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='midnightblue')
リストxdataとリストydataの赤い折れ線グラフを描画する	plt.plot(xdata, ydata, color='r')
スピアマンでデータフレームdfのカラムcolとカラムcol2の相関行列を求める	df[[col, col2]].corr(method='spearman')
青い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
折れ線グラフのダイアモンドマーカーを黄色くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
数列xdataとリストydataの赤い点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color='r')
keyが辞書adictに存在しないとき、文字列elementを追加する	adict.setdefault(key, element)
ロージーブラウン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='rosybrown')
散布図にバツマーカーを使う	plt.plot(xdata, ydata, marker='x')
リストxdataとリストydataについての散布図に赤い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
ライトスレイグレー色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
シアン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='cyan')
パウダーブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
3×3の単位行列を作成する	np.eye(3)
リストxdataとリストydataについての散布図をライトゴールドロディイエロー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
オプションで、改行コードを旧Macに設定する	newline = '\r'
インディゴ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='indigo')
sを最後のs2で分けたときの後半の文字列	s.rpartition(s2)[-1]
ミディアムスプリンググリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
リストxdataについてのヒストグラムを描画する際にビン数をnに設定する	plt.hist(xdata, bins=n)
リストxdataとリストydataの青い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
データフレームdf中にいくつ文字列valueがあるか数える	df.isin([value]).sum()
リストxdataとリストydataについての散布図をリネン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='linen', alpha=0.5)
データフレームdfのリストalistカラムの欠損値を最大値に設定する	df[alist].fillna(df[alist].max())
サーモン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='salmon')
sの中からパターンpatternにケースを無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
rgbの四角印として散布図をプロットする	plt.plot(xdata, ydata, marker='s', c=rgb)
正規表現で、sのの内で複数行対応のパターンにマッチした全文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
Pythonパスにsを追加する	sys.path.append(s)
配列xdataと配列ydataの散布図を描画して、▼マーカーの色をrgbに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をローングリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
日時dtをタプルにする	dt.timetuple()
リストxdataとリストydataについて散布図を描画して、マーカーの色をティールに設定する	plt.plot(xdata, ydata, c='teal')
散布図にペールグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='palegreen')
リストxdataをアイボリー色のヒストグラムで描画する	plt.hist(xdata, color='ivory')
deqが空	len(deq) == 0
リストxdataとリストydataについて破線グラフを描画して、その色をホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='white')
破線グラフの色を小麦に設定する	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
データ列xdataとリストydataの折れ線を描画して、その色をロージーブラウンに設定する	plt.plot(xdata, ydata, color='rosybrown')
数列xdataをグレー色のヒストグラムでプロットする	plt.hist(xdata, color='gray')
dtと日時dt2の時間差は何分か知る	(dt - dt2).total_seconds()//60
リストxdataをビスク色のヒストグラムで描画する	plt.hist(xdata, color='bisque')
日付adateををn年後に進める	adate + datetime.timedelta(years=n)
データ列ds中にいくつ文字列valueがあるか数える	ds.isin([value]).sum()
破線グラフの色をレモンシフォンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
散布図をダークオレンジ色を使って描画する	plt.plot(xdata, ydata, c='darkorange')
散布図をプラム色のマーカーを用いて描く	plt.plot(xdata, ydata, c='plum')
ミディアムスレートブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumslateblue')
コレクションを使う	import collections
ターコイズ色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
iterableからn個サンプリングする	random.sample(iterable, k=n)
サーモン色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='salmon')
カラーコードrgbの▼マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
配列xdataをオールドレース色のヒストグラムで描く	plt.hist(xdata, color='oldlace')
リストxdataをカーキ色のヒストグラムで描画する	plt.hist(xdata, color='khaki')
リストxdataとリストydataについて破線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indianred')
sの右端から不要な空白を除去する	s.rstrip()
データフレームdfのリストalistカラムを小数点以下n桁で丸める	df[alist].round(n)
xを最初のカテゴリーを除外して、ダミー変数に変換する	pd.get_dummies(x, drop_first=True)
重なりを見やすくリストxdataとデータ列ydataの散布図をシーグリーン色として描画する	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
イテラブルxdataとデータ列ydataについての散布図をダークオレンジ色としてプロットする	plt.plot(xdata, ydata, c='darkorange')
リストxdataについてのヒストグラムを青色で描く	plt.hist(xdata, color='blue')
リストxdataと配列ydataについて折れ線グラフを描画してその色をコーラルにする	plt.plot(xdata, ydata, color='coral')
sを最後のs2で分けた時の先頭の文字列を取り出す	s.rpartition(s2)[0]
nを切り捨てながらn2分の一にする	n //= n2
ゴールデンロッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='goldenrod')
破線グラフの色をミントクリームに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')
リストxdataとリストydataの散布図をターコイズ色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
sは全て印字できるか調べる	s.isprintable()
セットasetとセットaset2の和集合	aset.union(aset2)
ペルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='peru', alpha=0.5)
データフレームdfのカラムcolがsが含まれる行を抽出する	df[df[col].str.contains(s)]
カラーコードrgbの左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
PandasでTSVからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
表データをインポートする	import pandas as pd
数列xdataと配列ydataの折れ線グラフをsとラベル付けしてプロットする	plt.plot(xdata, ydata, label=s)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライムグリーンに設定する	plt.plot(xdata, ydata, c='limegreen')
昇順にデータフレームdfを列colとカラムcol2を用いて並べて、更新する	df.sort_values(by=[col,col2], ascending=True, inplace=True)
ネイビー色としてリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='navy')
折れ線グラフの下三角マーカーを青くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
散布図にミディアムオーキッド色のマーカーを使う	plt.plot(xdata, ydata, c='mediumorchid')
オプションで、標準エラーに出力する	file = sys.stderr
コーンズシルク色で重なりを見やすくリストxdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
リストxdataとリストydataについてシルバー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='silver')
リストxdataとリストydataについてダークオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
データフレームdfのリストalistカラムのどの値が頻出か見る	df[alist].mode()
リストxdataとリストydataについて破線グラフを描画して、その色をライトイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
リストxdataとリストydataについての散布図をダークグレー色で描画する	plt.plot(xdata, ydata, c='darkgray')
辞書adictの浅いコピーを行う	adict.copy()
ミディアムパープル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumpurple')
3×3の単位行列を作る	np.eye(3)
リストalistをタプルに変換する	tuple(alist)
n個からn2個取り出したときの順列の総数	math.perm(n, n2)
リストxdataをディムグレー色のヒストグラムで描画する	plt.hist(xdata, color='dimgrey')
リストxdataとリストydataについて散布図を描画して、マーカーの色をブラウン変える	plt.plot(xdata, ydata, c='brown')
リストalistの末尾を使う	alist[-1]
ISO書式のsを日時に変換する	datetime.datetime.fromisoformat(s)
リストxdataをダーク・スラテグレー色のヒストグラムとして描く	plt.hist(xdata, color='darkslategrey')
ハリウッド色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='burlywood')
折れ線グラフの色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategrey')
sをキャピタライズする	s.capitalize()
リストxdataとリストydataの青い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='b')
リストxdataとリストydataについての散布図をダークカーキ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
無限にカウントアップする	itertools.count()
数式として、eを数値に変換する	float(e)
numpyを使う	import numpy as np
リストiterableの各値をdeqの末尾に追加する	deq.extend(iterable)
リストxdataとイテラブルydataの折れ線を描画して色をチョコレートに設定する	plt.plot(xdata, ydata, color='chocolate')
データ列xdataと配列ydataについての散布図をナバホホワイト色でプロットする	plt.plot(xdata, ydata, c='navajowhite')
破線の色をオリベドラブとする	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
dfの欠損値を最頻値に設定する	df.fillna(df.mode().iloc[0])
データ列xdataとデータ列ydataについての散布図を小麦色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をグレーに設定する	plt.plot(xdata, ydata, color='grey')
今日が金曜日かどうか確認する	datetime.datetime.today().weekday() == 4
配列xdataとデータ列ydataについて折れ線グラフを描画して、色をグリーンイエローにする	plt.plot(xdata, ydata, color='greenyellow')
配列xdataとリストydataについて破線グラフを描画して、その色をライトスレイグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
リストxdataとリストydataについてライトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
sをs2で二分割する	s.partition(s2)
カウンタaCounter内の文字列element項目を増やす	aCounter[element] += 1
タン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='tan')
散布図にミディアムシアグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='mediumseagreen')
配列xdataと配列ydataの散布図に黒色の▽マーカーを描く	plt.plot(xdata, ydata, marker='v', c='k')
データフレームdfのカラムcolが正規表現sにマッチしない行を抽出する	df[not df[col].str.match(s)]
折れ線グラフの三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
n個に等間隔でデータ列dsを分割する	pd.cut(ds, n)
カウンタaCounterから低頻出文字列をn個リストとして使う	aCounter.most_common()[:-n-1:-1]
adictの項目数	len(adict)
数列xdataとリストydataについてマルーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='maroon')
リストxdataとリストydataについて破線グラフを描画して、色をスレートブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
リストxdataと配列ydataについて折れ線グラフを描画して、色をスカイブルーに設定する	plt.plot(xdata, ydata, color='skyblue')
数列xdataとリストydataについてティール色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='teal')
アクアマリン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
折れ線グラフの丸印の線幅をnとする	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
リストxdataとリストydataについての散布図をダークスレートブルー色で描画する	plt.plot(xdata, ydata, c='darkslateblue')
数列xdataと数列ydataの折れ線に青い星印を描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
データフレームdfのカラムcolの各データが何回出現するか見る	df[col].value_counts()
データフレームdfを各colカラム毎でグループ化して、sというグループを見る	df.groupby(col).get_group(s)
赤色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='red', alpha=0.5)
セットasetがセットaset2と共通の要素を持たないか調べる	aset.isdisjoint(aset2)
配列xdataとリストydataについての散布図をダークグレー色を用いて描く	plt.plot(xdata, ydata, c='darkgray')
ライトコーラル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightcoral')
文字列elementとelement2をカンマで区切って出力する	print(element, element2, sep=',')
全てのアルファベット	string.ascii_letters
オールドレース色で配列xdataについての柱状図を描画する	plt.hist(xdata, color='oldlace')
改行する	print()
sはタイトルケースか調べる	s.istitle()
データフレームdfの標本標準偏差	df.std()
データフレームdfのインデックスをリセットする	df.reset_index()
リストxdataとリストydataについての散布図をブラック色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)
sとs2を比較する	s == s2
破線グラフの色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
リストxdataとリストydataについての散布図をコーンフラワーブルー色で描画する	plt.plot(xdata, ydata, c='cornflowerblue')
折れ線の四角マーカーを黄色くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
折れ線グラフの透明度をxに設定する	plt.plot(xdata, ydata, alpha=x)
ライトイエロー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
リストxdataとリストydataについての散布図をダーク・スラテグレー色で描画する	plt.plot(xdata, ydata, c='darkslategrey')
セットasetが空か調べる	len(aset) == 0
リストxdataとリストydataについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
ダークシアグリーン色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='darkseagreen')
タプルatupleの値を昇順にソートする	sorted(atuple, reverse=True)
リストxdataとデータ列ydataについて破線グラフを描画してその色を青に変更する	plt.plot(xdata, ydata, linestyle='dash', color='blue')
xをx2で割った剰余を算出する	math.remainder(x, x2)
破線の色をミディアムアクアマリンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
データ列を使う	import pandas as pd
整数nを符号付きで長さn2のバイト列に変換する	n.to_bytes(length=n2, byteorder='big', signed=True)
リストxdataとリストydataについて折れ線グラフを描画して、その色をシアンに設定する	plt.plot(xdata, ydata, color='cyan')
データフレームdfをカラムcolによってソートして、NaNを先頭にする	df.sort_values(by=col, na_position='first')
リストiterableのイミュータブルな集合	frozenset(iterable)
配列iterableの全順列を求める	itertools.permutations(iterable)
オプションで、データ操作の結果を反映させる	inplace = True
dfのリストalistカラムをdictで一度に置換する	df[alist].replace(adict)
ダークサーモン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darksalmon')
辞書adictのコピーを得る	dict(adict)
ふたつの辞書を合体する	adict | adict2
データフレームdfのcolをドロップして、インプレイスする	df.drop(col, axis=1, inplace=True)
データフレームdfのカラムcol毎の最小値	df.groupby(col).min()
リストxdataをグレー色のヒストグラムで描画する	plt.hist(xdata, color='grey')
破線グラフの色をティールに設定する	plt.plot(xdata, ydata, linestyle='dash', color='teal')
データフレームdfの母標準偏差	df.std(ddof=0)
点線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dotted', color='k')
改行なしにnを表示する	print(n, end='')
データフレームdfのリストalistカラムの歪度を計算する	df[alist].kurt()
データフレームdfのリストalistカラムの値をdictでまとめて置き換える	df[alist].replace(adict)
データ列xdataをライトシアン色のヒストグラムで描く	plt.hist(xdata, color='lightcyan')
ダークレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
リストxdataとイテラブルydataについての散布図に赤色の下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
リストxdataとリストydataについてライトサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
リストxdataとリストydataについて折れ線グラフを描画して、その色をパープルに設定する	plt.plot(xdata, ydata, color='purple')
データフレームdfをインデックスによって降順でソートする	df.sort_index(ascending=False)
リストxdataとリストydataについて破線グラフを描画して、その色をロイヤルブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
リストxdataを赤色のヒストグラムで描画する	plt.hist(xdata, color='red')
nをn2で割った結果を切り上げる	(n + n2 - 1) // n2
リストxdataとリストydataについてライトコーラル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
データフレームdfのリストalistカラムの中央値	df[alist].median()
データフレームdfのインデックスの名前の一覧	df.index
CSVファイルを用いてJSONLファイルfilenameにデータフレームdfを書き込む	df.to_csv(filename)
折れ線グラフの色をスカイブルーに設定する	plt.plot(xdata, ydata, color='skyblue')
リストxdataとリストydataについてサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='salmon')
イテラブルxdataとリストydataの散布図をミッドナイトブルー色として描画する	plt.plot(xdata, ydata, c='midnightblue')
シャルトルーズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
破線グラフの色を赤に設定する	plt.plot(xdata, ydata, linestyle='dash', color='red')
マルーン色として重なりを見やすくデータ列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
データフレームdfのカラムcolが何曜日か見る	df[col].dt.weekday_name
折れ線グラフの星マーカーを青くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
asetからエラーなくオブジェクトelementを取り除く	aset.discard(element)
リストxdataとリストydataについて折れ線グラフを描画して、その色をタンに設定する	plt.plot(xdata, ydata, color='tan')
リストxdataと数列ydataの散布図を描画して、マーカーの色をターコイズに設定する	plt.plot(xdata, ydata, c='turquoise')
リストxdataとリストydataについて散布図を描画して、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
データフレームdfから重複したデータを破壊的にドロップする	df.drop_duplicates(inplace=True)
データフレームdfとデータフレームdf2をカラムcolをキーにして左結合する	pd.merge(df, df2, on=col, how='left')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
スレートブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='slateblue')
配列xdataとリストydataについて散布図を描画してマーカーの色をサーモンに設定する	plt.plot(xdata, ydata, c='salmon')
ダークゴールデンロッド色としてヒストグラムを描く	plt.hist(xdata, color='darkgoldenrod')
リストxdataと数列ydataについてマゼンタ色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='magenta')
ペルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='peru')
文字列elementがリストalistに含まれるか調べる	element in alist
オプションで、インデックスを自動的な連番に設定する	index_col = None
リストxdataとリストydataについてインディゴ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indigo')
リストxdataとリストydataの散布図をホワイトスモーク色で重なりを見やすく描く	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
x2を底とするxの対数	math.log(x, x2)
プラム色として柱状図を描画する	plt.hist(xdata, color='plum')
リストxdataとリストydataについて折れ線グラフを描画して、その色を貝殻に設定する	plt.plot(xdata, ydata, color='seashell')
カウンタaCounterの文字列数	len(aCounter)
リストxdataとリストydataについての散布図をティール色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='teal', alpha=0.5)
dfのcolがxでない行をフィルタする	df[df[col] == x]
タプルiterableの組み合せを得る	itertools.combinations(iterable, n)
グラフにx=0の破線を付ける	plt.axvline(x=0, linestyle='dashed')
ダークシアグリーン色で配列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='darkseagreen')
リストxdataとリストydataについての散布図をミスティローズ色で描画する	plt.plot(xdata, ydata, c='mistyrose')
折れ線グラフの色をネイビーに設定する	plt.plot(xdata, ydata, color='navy')
データフレームdfのリストalistカラムが正規分布からどの程度、歪んでいるか見る	df[alist].kurt()
sの中からパターンpatternに大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
ダークグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgrey')
ミスティローズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mistyrose')
データ列dsの第三四分位数	ds.quantile(0.75)
リストxdataとリストydataについての散布図をオーキッド色で描画する	plt.plot(xdata, ydata, c='orchid')
バイオレット色で配列xdataとリストydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='violet', alpha=0.5)
sが漢字かテストする	('一' <= s <= '鿐')
プログラムの実行を適切に止める	sys.exit(0)
グラフの用途を論文に設定する	sns.set(context='paper')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークブルーに設定する	plt.plot(xdata, ydata, color='darkblue')
Pandasでタブ区切りのファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
グラフの見た目を良くする	import seaborn as sns
deq中のelementの数を数える	deq.count(element)
バイオレット色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='violet')
ゴールド色としてリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='gold')
n2がnより大きく、かつ、n3未満か調べる	n < n2 and n2 < n3
数列xdataとデータ列ydataについての散布図に黒い大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X', c='k')
パールゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
散布図にグリーンイエロー色のマーカーを使う	plt.plot(xdata, ydata, c='greenyellow')
インデント幅nで、adictをJSON形式の文字列にする	json.dumps(adict, ensure_ascii=False, indent=n)
ライトコーラル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
カラーコードrgbの右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
データフレームdfのカラムcolをドロップして、更新する	df.drop(col, axis=1, inplace=True)
プラットホームを調べる	sys.platform
リストxdataとリストydataについての散布図をダークグレー色で描画する	plt.plot(xdata, ydata, c='darkgrey')
ファイルfilenameのディレクトリ名	os.path.dirname(filename)
破線グラフの色をホワイトスモークに設定する	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
リストxdataとリストydataについて散布図を描画して、マーカーの色をトマトに設定する	plt.plot(xdata, ydata, c='tomato')
リストiterableを2回あわせた直積	itertools.product(iterable, repeat=2)
破壊的に昇順にデータフレームdfをcol列によってソートする	df.sort_values(by=col, ascending=True, inplace=True)
ライトサーモン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
折れ線グラフの色をシエナに設定する	plt.plot(xdata, ydata, color='sienna')
CSVファイルTSVファイルfilenameをn番目の列を行として読み込む	pd.read_csv(filename, index_col=n)
折れ線グラフの大バツマーカーを黄色くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
フォーマットfmtを使ってデータ列dsを日付データに変換する	pd.to_datetime(ds, format=fmt)
リストxdataとリストydataについての散布図をブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をスチールブルーに設定する	plt.plot(xdata, ydata, c='steelblue')
現在の秒数	datetime.date.today().second
日時dtからn時間分、減算する	dt - datetime.timedelta(hours=n)
新しく空のスタックを作って、Xに代入する	X = collections.deque()
リストxdataと配列ydataの散布図をコーンフラワーブルー色としてプロットする	plt.plot(xdata, ydata, c='cornflowerblue')
xの十の位で丸める	round(x, -1)
リストxdataとリストydataについて散布図を描画して、印を左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストxdataと配列ydataについての散布図をフローラルホワイト色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
データフレームdfのカラムcolが何時か見る	df[col].dt.hour
ダークグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkgray')
データフレームdfを百の位で丸めて、整数にする	df.round(-2).astype(int)
オプションで、読み込まないフッタをnに設定する	skipfooter = n
リストxdataとリストydataについてミディアムシアグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
赤い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='r')
リストiterableの長さnの順列を求める	itertools.permutations(iterable, n)
データフレームを表示するとき、小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
浮動小数点数の最大値	sys.float_info.max
リストxdataをラベンダー色のヒストグラムで描画する	plt.hist(xdata, color='lavender')
数列xdataと数列ydataの折れ線グラフに黄色い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
データフレームdf中のカラムcolを等量でn個にビン分割する	pd.qcut(df[col], n)
データ列dsの尖度	ds.skew()
折れ線グラフの左三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='<', markersize=n)
リストxdataと配列ydataの散布図にカラーコードrgbの左三角印をプロットする	plt.plot(xdata, ydata, marker='<', c=rgb)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, c='darkslategrey')
折れ線グラフの色をダークターコイズに設定する	plt.plot(xdata, ydata, color='darkturquoise')
イテラブルxdataをヒストグラムにする	plt.hist(xdata)
日時dtからn年分、減算する	dt - datetime.timedelta(years=n)
破線の色をミディアムターコイズにする	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
カラーコードrgbの三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
黒いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='k')
モカシン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
0から始まる無限の数列を得る	itertools.count()
リストxdataとリストydataについて折れ線グラフを描画して、色をカーキに設定する	plt.plot(xdata, ydata, color='khaki')
ファイルfilenameのファイル名	os.path.basename(filename)
リストxdataと数列ydataについて散布図を描画して色をシエナに変更する	plt.plot(xdata, ydata, c='sienna')
リストxdataとリストydataについて破線グラフを描画して、その色をサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
ライトコーラル色で数列xdataについての柱状図を描画する	plt.hist(xdata, color='lightcoral')
リストxdataとリストydataの実線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='solid', color='b')
sを空白で区切る	s.split()
nマイナスn2	n - n2
dtをn日前に戻す	dt - datetime.timedelta(days=n)
リストxdataとリストydataについて折れ線を描画して、その色をレモンシフォンにする	plt.plot(xdata, ydata, color='lemonchiffon')
dfのcolの文字列がsで終わるデータを選択する	df[df[col].str.endswith(s)]
nまでの奇整数列	list(range(1, n, 2))
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、最小値	df.groupby([col, col2], as_index=False).min()
スカイブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='skyblue')
折れ線グラフの色をライトサーモンに設定する	plt.plot(xdata, ydata, color='lightsalmon')
ビン数nのヒストグラムをリストxdataについて描画する	plt.hist(xdata, bins=n)
日時dtをsでフォーマットして文字列に変換する	dt.strftime()
白い折れ線グラフを描画する	plt.plot(xdata, ydata, color='w')
xの逆双曲線正弦	math.asinh(x)
dfのリストalist列の欠損値を後の値に設定する	df[alist].fillna(method='bfill')
リストalistとalist2から辞書	dict(zip(alist, alist2))
xの双曲線正弦	math.sinh(x)
淡いピンク色色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightpink')
デックdeqに文字列elementをプッシュする	deq.append(element)
数列xdataとリストydataについて破線グラフを描画して、その色をゲインズボロに指定する	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
1からnまでの整数列	list(range(1, n+1))
ピンク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='pink')
aCounterを高頻出方から列挙する	aCounter.most_common()
ホワイトスモークでリストxdataについての柱状図をプロットする	plt.hist(xdata, color='whitesmoke')
データフレームdfのリストalistカラムを1000の位で丸める	df[alist].round(-3)
ミディアムシアグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumseagreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムブルーに設定する	plt.plot(xdata, ydata, c='mediumblue')
ゴールデンロッド色でリストxdataと数列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
リストxdataとリストydataについて散布図を描画して色をインディアンレッドに変更する	plt.plot(xdata, ydata, c='indianred')
ミディアムアクアマリン色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
オブジェクトobjを表示する	print(obj)
ゴーストホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
シエナ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='sienna')
数列xdataとデータ列ydataの折れ線グラフに線幅nのダイアモンド印を描画する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
データフレームdfのリストalistカラムの値を正規表現patternでsにまとめて置き換える	df[alist].replace(pattern, s, regex=True)
第nコマンド引数を確認する	sys.argv[n]
配列xdataと数列ydataの破線グラフを描画してその色をインディゴに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
散布図にミディアムスプリンググリーン色のマーカーを使う	plt.plot(xdata, ydata, c='mediumspringgreen')
破線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
貝殻色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='seashell')
s2がsのn番目以降にない	s.find(s2, start=n) == -1
日時dtが土曜日か調べる	dt.weekday() == 5
sをエンコーディングnameでバイト列に変換する	s.encode(encoding=name)
リストxdataをダークサーモン色の柱状図を用いて描画する	plt.hist(xdata, color='darksalmon')
クリムゾン色としてイテラブルxdataについての柱状図をプロットする	plt.hist(xdata, color='crimson')
コーンズシルク色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
ライトグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgray')
リストxdataとリストydataについての散布図をスレートブルー色で描画する	plt.plot(xdata, ydata, c='slateblue')
リストalistを引数として展開して表示する	print(*alist)
リストxdataとリストydataについてティール色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='teal')
配列xdataとリストydataについて折れ線グラフを描画して色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightgreen')
データフレームdfとデータフレームdf2を縦方向に繋ぐ	pd.concat([df, df2])
リストxdataとリストydataについてアクア色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aqua')
データフレームdfのカラムcolの中央値	df[col].median()
リストxdataとリストydataの折れ線グラフに、黄色い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
全ての８進数字	string.octdigits
リストxdataとリストydataについての散布図をディープスカイブルー色で描画する	plt.plot(xdata, ydata, c='deepskyblue')
現在の日時を求める	datetime.datetime.now()
日付adateが月曜日か調べる	adate.weekday() == 0
リストxdataとリストydataについての散布図をアクアマリン色で描画する	plt.plot(xdata, ydata, c='aquamarine')
黒い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
カウンタaCounterのトータルカウント	aCounter.total()
sの中からs2を探す	s.find(s2)
リストxdataとリストydataの散布図をグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='green', alpha=0.5)
リストxdataとリストydataについてゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
リストxdataとリストydataの折れ線グラフを描画して、色を白くする	plt.plot(xdata, ydata, color='w')
折れ線の色をカデットブルーにセットする	plt.plot(xdata, ydata, color='cadetblue')
ダークスレートブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
重なりを見やすくダークシアン色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
データフレームdfのリストalistカラムの相関行列	df[alist].corr()
散布図にパレットトルコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='paleturquoise')
ヒストグラムを使ってデータフレームdfのカラムcolを描画する	plt.hist(df[col])
ライトグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
s内にひとつでも英大文字が含まれるか	any(c.isupper() for c in s)
配列xdataと配列ydataの折れ線に黄色い下三角印を描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
データ列dsのsを欠損値にする	ds.replace(s, np.nan)
数列xdataとリストydataの散布図をナバホホワイト色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
リストxdataをモカシン色のヒストグラムで描画する	plt.hist(xdata, color='moccasin')
ユーザの入力を整数として受け取る	int(input())
xをx2で割った剰余	math.remainder(x, x2)
リストiterableに配列iterable2を続ける	itertools.chain(iterable, iterable2)
点線の色をカラーコードrgbにする	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
ライトスカイブルー色でヒストグラムを描画する	plt.hist(xdata, color='lightskyblue')
マルーン色として数列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='maroon')
青色のマーカーを使って重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)
データ列xdataとリストydataについてダークバイオレット色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
データフレームdf中のcolをリストalistを境界値としてビン分割する	pd.cut(df[col], alist)
ダークスラテグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkslategray')
リストxdataとデータ列ydataの破線グラフを描画して、その色をパープルにする	plt.plot(xdata, ydata, linestyle='dash', color='purple')
リストxdataをホットピンク色のヒストグラムで描画する	plt.hist(xdata, color='hotpink')
散布図にスカイブルー色のマーカーを使う	plt.plot(xdata, ydata, c='skyblue')
リストxdataとリストydataの折れ線グラフに、大きさnのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markersize=n)
データフレームdf中の欠損値の合計を数える	df.isna().sum()
ミディアムシアグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
リストxdataとリストydataについて破線グラフを描画して、その色をダークシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
ダークブルー色の柱状図としてリストxdataを描画する	plt.hist(xdata, color='darkblue')
リストxdataとリストydataについて散布図を描画して、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストxdataとリストydataについてアザミ色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='thistle')
データフレームdfの欠損値を最大値に増やす	df.fillna(df.max())
リストxdataと配列ydataについて散布図を描画して、印を右三角に設定する	plt.plot(xdata, ydata, marker='>')
カウンタaCounterをリストに変換する	list(aCounter)
ファイルfilenameをオープンして]、書き込みストリームを使う	open(filename, mode='w')
日付adateが金曜日	adate.weekday() == 4
ダークスラテグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkslategray')
本日が木曜日	datetime.datetime.today().weekday() == 3
n個の整数列	list(range(n))
折れ線グラフに左三角マーカーを使う	plt.plot(xdata, ydata, marker='<')
リストxdataとデータ列ydataについての散布図を重なりを見やすくローングリーン色でプロットする	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
データフレームdfのヒートマップを描画する	sns.heatmap(df.corr())
赤い下三角印で散布図を描画する	plt.plot(xdata, ydata, marker='v', c='r')
カウンタaCounterから最頻出の項目回数	aCounter.most_common(0)[1]
リストxdataとリストydataについてネイビー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navy')
sの中から正規表現patternにマッチする位置を探す	re.search(pattern, s)
リストxdataとリストydataの折れ線に、赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')
n年n2月n3日n4時n5分の日時	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)
リストxdataとリストydataについての散布図をモカシン色で描画する	plt.plot(xdata, ydata, c='moccasin')
ライトグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightgreen')
配列xdataとリストydataの散布図をライトブルー色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
dfを丸めて、整数にする	df.round().astype(int)
タプルatupleを引数として展開して表示する	print(*atuple)
リストxdataとデータ列ydataの散布図にカラーコードrgbの四角印を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
レモンシフォン色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
リストxdataと配列ydataについての散布図に黒色の左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
リストxdataとリストydataについてミッドナイトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
dfのカラムcolをヒストグラムでプロットする	plt.hist(df[col])
リストxdataとリストydataの散布図を描画してマーカーの色をペールグリーンに変更する	plt.plot(xdata, ydata, c='palegreen')
データフレームdfの欠損値を最小値に設定する	df.fillna(df.min())
リストxdataとリストydataの折れ線グラフに、線幅nの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
リストxdataとリストydataの折れ線グラフに、黄色い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
TSVファイルfilenameをヘッダを指定せず読み込む	pd.read_csv(filename, header=None)
リストxdataとリストydataについてホットピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
点線の色を青くする	plt.plot(xdata, ydata, linestyle='dotted', color='b')
リストxdataとイテラブルydataについて折れ線グラフを描画してその色をオレンジレッドに設定する	plt.plot(xdata, ydata, color='orangered')
リストxdataとリストydataの折れ線グラフに、青い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
リストxdataとリストydataについての散布図をスラグレー色で描画する	plt.plot(xdata, ydata, c='slategrey')
ダークブルー色を使って散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
赤い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='r')
リストxdataとリストydataについての散布図をディムグレー色で描画する	plt.plot(xdata, ydata, c='dimgrey')
パレットトルコイズ色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='paleturquoise')
リストiterableを文字列に変換して連結する	''.join(map(str, iterable))
dfのシェイプ	df.shape
サドルブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='saddlebrown')
赤い右三角印として散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')
破線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
dtをn時間前に戻す	dt - datetime.timedelta(hours=n)
s中のASCII限定のパターンpatternによる全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
折れ線グラフの大バツマーカーを緑色に設定する	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
散布図に黒いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='k')
破線グラフの色をゴールドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gold')
数列xdataと数列ydataについて散布図を描画して、マーカーの色をフォレストグリーンにする	plt.plot(xdata, ydata, c='forestgreen')
日時dtと日時dt2の時間差が何秒か知る	(dt - dt2).total_seconds()
データ列xdataとリストydataについて折れ線グラフを描画して、その色をパレットトルコイズにする	plt.plot(xdata, ydata, color='paleturquoise')
データフレームdfを小数点以下n桁で丸める	df.round(n)
データフレームdfのcolを10の位で四捨五入して、整数にする	df[col].round(-1).astype(int)
散布図にゴールデンロッド色のマーカーを使う	plt.plot(xdata, ydata, c='goldenrod')
ヒストグラムをダークグレーとして描画する	plt.hist(xdata, color='darkgrey')
ダークグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
文字列elementの出力を改行なしに行う	print(iterable, end='')
リストxdataとリストydataについて破線グラフを描画して、その色をターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
リストxdataと数列ydataの散布図を描画して、マーカーの色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, c='midnightblue')
破線グラフの色をライトスチールブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
リストxdataを縦軸、リストydataを横軸と指定して、折れ線グラフを描画する	plt.plot(xdata, ydata)
xを整数に変換する	int(x)
淡いピンク色色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
セットasetから文字列elementを取り除く	aset.remove(element)
リストxdataとリストydataの散布図を描画してマーカーの色をブラックに設定する	plt.plot(xdata, ydata, c='black')
リストxdataとリストydataについて破線グラフを描画して、その色をダークシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
リストxdataとリストydataについて折れ線グラフを描画して、その色をディープスカイブルーに設定する	plt.plot(xdata, ydata, color='deepskyblue')
破線グラフの色をサドルブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
散布図にラベンダー色のマーカーを使う	plt.plot(xdata, ydata, c='lavender')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(xdata, ydata, color='darkslateblue')
データフレームdfをJSONLファイルfilenameにBOMを付けて保存する	df.to_csv(filename, encoding='utf_8_sig')
ダークオーキッド色としてリストxdataについての柱状グラフを描画する	plt.hist(xdata, color='darkorchid')
破線グラフの色をスチールブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
リストxdataとリストydataについて破線グラフを描画して、その色をスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
配列xdataとデータ列ydataについての散布図をミスティローズ色で描く	plt.plot(xdata, ydata, c='mistyrose')
データフレームdfのcolカラム毎の分散	df.groupby(col).var()
折れ線のバツ印を黄色くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
グリーンイエロー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='greenyellow')
ライトイエロー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightyellow')
エンコーディングnameでsをバイト列に変換する	s.encode(encoding=name)
整数nのバイト長	(n.bit_length() + 7) // 8
改行なしにリストiterableを表示する	print(iterable, end='')
折れ線グラフの色をディープスカイブルーに設定する	plt.plot(xdata, ydata, color='deepskyblue')
sをs2でに分割したときの前半の文字列を取り出す	s.partition(s2)[0]
散布図に四角印を用いる	plt.plot(xdata, ydata, marker='s')
黒色の四角印として散布図を描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストxdataとリストydataについてトマト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tomato')
リストxdataをインディゴ色のヒストグラムで描画する	plt.hist(xdata, color='indigo')
散布図にコーンズシルク色のマーカーを使う	plt.plot(xdata, ydata, c='cornsilk')
sのの内でケースを無視した正規表現patternにマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
sの先頭からs2を取り除く	s.lstrip(s2)
dfを丸める	df.round()
破線グラフの色をベージュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='beige')
リストxdataをロイヤルブルー色のヒストグラムで描画する	plt.hist(xdata, color='royalblue')
配列xdataとリストydataについてハリウッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
ダークグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
データフレームdfのリストalistカラム中にいくつ文字列valueがあるか数える	df[alist].isin([value]).sum()
日付adateと日付adate2の時間差が何分か知る	(adate - adate2).total_seconds()//60
破線の色をダークオーキッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
ダークシアグリーン色の折れ線を描画する	plt.plot(xdata, ydata, color='darkseagreen')
リストiterableの長さnの順列	itertools.permutations(iterable, n)
xとx2から成る複素数	complex(x, x2)
データフレームdfのカラムcolを1000の位で丸めて、整数型にする	df[col].round(-3).astype(int)
sは全て十進数字か調べる	s.isdecimal()
リストxdataと数列ydataについて折れ線を描画して、その色をベージュに設定する	plt.plot(xdata, ydata, color='beige')
整数nの各桁の総和	sum(map(int, str(int(n))))
表データを使う	import pandas as pd
オブジェクトobjにtextプロパティが存在するか調べる	hasattr(obj, text)
二進sをバイト列に変換する	int(s, 2).to_bytes(length=2, byteorder='big')
リストxdataとリストydataの折れ線グラフに、青いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
データ列dsがどの程度、分散しているか見る	ds.var()
リストxdataとリストydataについての散布図をオールドレース色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
重なりを見やすくシエナ色でイテラブルxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
イエローグリーン色を用いてリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='yellowgreen')
配列xdataとリストydataの破線グラフを描画して、その色をライトコーラルにする	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
折れ線グラフに菱形マーカーを用いる	plt.plot(xdata, ydata, marker='D')
ダークスラテグレー色としてリストxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='darkslategray')
ミディアムバイオレットレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumvioletred')
リストxdataとリストydataの折れ線グラフに、黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
タプルatupleの合計値	sum(atuple)
リストalistをn倍する	alist * n
折れ線グラフの色をターコイズ変える	plt.plot(xdata, ydata, color='turquoise')
グラフ中の横軸にsという軸ラベルを付ける	plt.xlabel(s)
リストxdataとリストydataのカラーコードrgbの実線を描画する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(xdata, ydata, color='mediumturquoise')
sの片仮名を平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
s中にs2が含まれるか調べる	s2 in s
ミディアムブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumblue')
数列xdataとリストydataについてライトスカイブルー色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
フローラルホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='floralwhite')
リストxdataとリストydataについての散布図をグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='gray', alpha=0.5)
ダークグレー色としてリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgray')
リストxdataをグレー色のヒストグラムで描画する	plt.hist(xdata, color='gray')
keyが辞書adictにない時、オブジェクトelementを追加する	adict.setdefault(key, element)
リストxdataとリストydataについて破線グラフを描画してその色を黒くする	plt.plot(xdata, ydata, linestyle='dashed', color='k')
リストxdataとリストydataについての散布図をライトグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
文字列elementが辞書adictの値に含まれていないか調べる	element not in adict.values()
リストxdataとリストydataについて折れ線を描画して、色をモカシンとする	plt.plot(xdata, ydata, color='moccasin')
散布図に黒い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='k')
xの小数点以下'4'桁までを表示する	print(':.4f'.format(x))
alistのn番目からn2番目までの部分	alist[n:n2]
数式として、zの平方根を求める	sympy.sqrt(z)
Pandasで、フォーマットfmtでデータ列dsを日付データに変換する	pd.to_datetime(ds, format=fmt)
nプラスn2	n + n2
ファイルfilenameをオープンして]、バイナリ書き込みストリームを使う	open(filename, mode='wb')
sをs2で分けたときの前半の文字列	s.partition(s2)[0]
リストxdataとリストydataについて破線グラフを描画して、その色をアクア変える	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
リストxdataとリストydataについての散布図をネイビー色で描画する	plt.plot(xdata, ydata, c='navy')
リストxdataとリストydataについて散布図を描画して、マーカーの色を貝殻に指定する	plt.plot(xdata, ydata, c='seashell')
dtがdt2と同時か調べる	dt == dt2
関数predicatefuncが真とならないリストiterableの要素	itertools.dropwhile(predicatefunc, iterable)
リストxdataとリストydataについての散布図をサドルブラウン色で描画する	plt.plot(xdata, ydata, c='saddlebrown')
散布図をライトイエロー色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='lightyellow')
グラフ中の文字化けを防ぐ	sns.set(font='IPAexGothic')
破線の色をロイヤルブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
データフレームdfの分散	df.var()
リストxdataとリストydataについて散布図を描画して、マーカーの色をディープスカイブルーに設定する	plt.plot(xdata, ydata, c='deepskyblue')
リストxdataとデータ列ydataの折れ線グラフに、黄色い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
破線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
セットasetが空でないか調べる	len(aset) != 0
リストxdataと配列ydataの散布図を淡いピンク色色で描く	plt.plot(xdata, ydata, c='lightpink')
xの正接の逆数	math.atan(x)
ペールグリーン色のヒストグラムとして数列xdataをプロットする	plt.hist(xdata, color='palegreen')
データフレームdfの欠損値を最頻値で埋める	df.fillna(df.mode().iloc[0])
n年n2月n3日を日時に変換する	datetime.datetime(year=n, month=n2, day=n3)
objはバイト列	isinstance(obj, bytes)
リストxdataとリストydataについての散布図を淡いピンク色色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
数列xdataをレモンシフォン色の柱状図でプロットする	plt.hist(xdata, color='lemonchiffon')
日付adateをn日前に戻す	adate - datetime.timedelta(days=n)
破線グラフの色をレベッカパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
数列xdataと数列ydataについての散布図をライトイエロー色でプロットする	plt.plot(xdata, ydata, c='lightyellow')
リストxdataとリストydataについてアクアマリン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
sをマゼンタで表示する	print(f'\033[35m{s}\033[0m')
eのx乗	math.exp(x)
データフレームdfのcolがx以下の行を抽出する	df[df[col] <= x]
リストxdataとリストydataについて散布図を描画して、マーカーの色をシーグリーンに設定する	plt.plot(xdata, ydata, c='seagreen')
リストxdataをペルー色のヒストグラムで描画する	plt.hist(xdata, color='peru')
リストxdataとリストydataについての散布図をゴールド色で描画する	plt.plot(xdata, ydata, c='gold')
アンティークホワイト色のマーカーを用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をチョコレートに設定する	plt.plot(xdata, ydata, c='chocolate')
リストxdataとリストydataについてダークシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
リストxdataをライトブルー色のヒストグラムで描画する	plt.hist(xdata, color='lightblue')
リストxdataとリストydataの折れ線グラフにバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
ダーク・スラテグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkslategrey')
ドジャーブルー色で散布図を描く	plt.plot(xdata, ydata, c='dodgerblue')
リストxdataとリストydataについての散布図をパールバイオレットレッド色で描画する	plt.plot(xdata, ydata, c='palevioletred')
折れ線グラフの色をホワイトに設定する	plt.plot(xdata, ydata, color='white')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークカーキに設定する	plt.plot(xdata, ydata, color='darkkhaki')
ブラウン色で配列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='brown')
折れ線グラフの色をシーグリーンに設定する	plt.plot(xdata, ydata, color='seagreen')
リストxdataとイテラブルydataについて折れ線グラフを描画して、色をミディアムパープルに設定する	plt.plot(xdata, ydata, color='mediumpurple')
リストxdataとリストydataについて散布図を描画して、マーカーの色をブラックに設定する	plt.plot(xdata, ydata, c='black')
リストalistの末尾からn番目以前の部分を取り出す	alist[:-n]
ライトブルーでヒストグラムを描く	plt.hist(xdata, color='lightblue')
データフレームdfのカラムcolの尖度	df[col].skew()
TSVファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
ライトサーモン色のヒストグラムで配列xdataを描画する	plt.hist(xdata, color='lightsalmon')
リストxdataとリストydataについて散布図を描画する	plt.scatter(xdata, ydata)
リストxdataとリストydataについての散布図をバイオレット色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='violet', alpha=0.5)
データフレームdfのカラムcolとカラムcol2毎の分散	df.groupby([col, col2], as_index=False).var()
リストxdataをグリーンイエロー色のヒストグラムで描画する	plt.hist(xdata, color='greenyellow')
リストxdataとリストydataの散布図を描画して、マーカーの色をカーキにする	plt.plot(xdata, ydata, c='khaki')
折れ線の色をチョコレートに設定する	plt.plot(xdata, ydata, color='chocolate')
配列xdataとリストydataについて散布図を描画して、マーカーの色をライトグレーに設定する	plt.plot(xdata, ydata, c='lightgrey')
データフレームdf中のカラムcolをビン分割する	pd.cut(df[col], alist)
オプションで、エラーを無視する	errors = 'ignore'
データフレームdfをリストalistの列によって破壊的に整列する	df.sort_values(by=alist, inplace=True)
ライトシアン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightcyan')
折れ線グラフのダイアモンドマーカーを赤くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
xの小数点第n位で丸める	round(x, n)
リストxdataとリストydataについての散布図をオリーブ色として重なりを見やすく描く	plt.plot(xdata, ydata, c='olive', alpha=0.5)
データフレームを表示するとき、表示可能な最大列数を変更する	pd.set_option('display.max_columns', n)
リストxdataとリストydataについての散布図にカラーコードrgbの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
ファイルfilenameを書き込みモードとしてオープンして]、fとする	f = open(filename, mode='w')
日時dtにn日分、加算する	dt + datetime.timedelta(days=n)
sを末尾からs2で区切る	s.rsplit(s2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライムに設定する	plt.plot(xdata, ydata, c='lime')
セットasetをイミュータブルなセットに変換する	frozenset(aset)
破線グラフの色をダーク・スラテグレーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
破線グラフの色をインディゴに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
折れ線グラフの色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, color='cornflowerblue')
f全体を行単位で分割してリストに変換する	[s.strip() for s in f.readlines()]
散布図にライトコーラル色のマーカーを使う	plt.plot(xdata, ydata, c='lightcoral')
sの英大文字と英小文字を交換する	s.swapcase()
リストxdataとリストydataについての散布図をダークブルー色で描画する	plt.plot(xdata, ydata, c='darkblue')
青色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='blue')
データフレームdfをカラムcol毎にグループ化する	df.groupby(col)
配列xdataとリストydataについて散布図を描画して色をミディアムオーキッドにセットする	plt.plot(xdata, ydata, c='mediumorchid')
リストxdataと配列ydataについて破線グラフを描画して、色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gray')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
日時dtが火曜日か調べる	dt.weekday() == 1
リストxdataとイテラブルydataについて散布図を描画して色をカデットブルーにセットする	plt.plot(xdata, ydata, c='cadetblue')
filenameからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
紺碧色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='azure', alpha=0.5)
dtの日数	dt.day
グラフのパレットをsにセットする	sns.set(palette=s)
データ列xdataと配列ydataについて破線を描画して、色を青色に指定する	plt.plot(xdata, ydata, linestyle='dashed', color='b')
データフレームdfのカラムcolのどの値が頻出か見る	df[col].mode()
ミディアムスプリンググリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumspringgreen')
データフレームdfをカラムcol毎にグループ化して、グループの個数を求める	df.groupby(col).size()
破線の色を青くする	plt.plot(xdata, ydata, linestyle='dashed', color='b')
データ列xdataとリストydataの散布図を描画して、マーカーの色を耐火レンガにセットする	plt.plot(xdata, ydata, c='firebrick')
リストxdataとリストydataについての散布図をダークシアン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
数列xdataをミディアムターコイズ色のヒストグラムで描く	plt.hist(xdata, color='mediumturquoise')
折れ線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, color=rgb)
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトコーラルに設定する	plt.plot(xdata, ydata, color='lightcoral')
オプションで、n番目のカラムをインデックスに設定する	index_col = n
fを改行除外して一行ずつ読み込む	f.readline()
リストxdataとリストydataについてコーラル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='coral')
紺碧色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='azure')
パパイヤウィップ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='papayawhip')
折れ線グラフの色をダークスレートブルーに変更する	plt.plot(xdata, ydata, color='darkslateblue')
リストxdataとリストydataの折れ線グラフに、黄色いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
破線グラフの色を淡いピンク色とする	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
データ列xdataと配列ydataについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
データフレームdf中のカラムcolを等量でビン数nでビン分割する	pd.qcut(df[col], n)
日付adateをn時間前に戻す	adate - datetime.timedelta(hours=n)
リストxdataをダークカーキ色のヒストグラムで描画する	plt.hist(xdata, color='darkkhaki')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークグレーに設定する	plt.plot(xdata, ydata, c='darkgray')
リストxdataとリストydataについてダークスラテグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
__X__カラーパレットをグラフに使う	sns.set(pallete='pastel')
リストxdataとリストydataについてライトグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
実線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
黒い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='k')
データフレームdfのcol列はどれだけ、分散しているか見る	df[col].var()
スピアマン相関係数でデータフレームdfの相関行列	df.corr(method='spearman')
リストxdataと配列ydataについて破線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
Pandasで、日付データのデータ列dsをデータフレームdfのインデックスにする	df.index = pd.DatetimeIndex(ds)
asetがaset2と互いに素	aset.isdisjoint(aset2)
ダークバイオレット色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='darkviolet')
sの両端からs2を取り除く	s.strip(s2)
異なるn個のものからn2個選ぶ場合の数	math.comb(n, n2)
sのn以降にs2が含まれるか調べる	s.find(s2, start=n) != -1
CSVファイルfilenameを読み込む	pd.read_csv(filename, sep=',')
filenameにインデックスを付けずにデータフレームdfを書き込む	df.to_csv(filename, index=None)
sを改行で分割し、文字列リストに変換する	s.splitlines()
リストxdataとリストydataについての散布図をライトスレイグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、星マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストxdataとリストydataについて散布図を描画して、大バツマーカーの色をrgbに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
数列xdataと配列ydataについての散布図をダークスラテグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
折れ線グラフのバツマーカーを緑色に設定する	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
2を底とするxの対数	math.log2(x)
リストxdataとリストydataについての散布図をライトイエロー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
PandasでUNIX秒のsからタイムスタンプに変換する	pd.to_datetime(s, unit='s', utc=True)
本日が何日か知る	datetime.datetime.today().day
ダークグリーン色のヒストグラムでリストxdataを描画する	plt.hist(xdata, color='darkgreen')
ディムグレー色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
散布図に黒い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='k')
破線グラフの色をダークバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
ダーク・スラテグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkslategrey')
ブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='brown')
ミディアムオーキッドでイテラブルxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='mediumorchid')
日付adateををn秒後に進める	adate + datetime.timedelta(seconds=n)
xのハイパボリック・コサイン	math.cosh(x)
数列xdataと配列ydataについての散布図をディムグレー色で描画する	plt.plot(xdata, ydata, c='dimgray')
折れ線グラフの色をダークスレートブルーに設定する	plt.plot(xdata, ydata, color='darkslateblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をカデットブルーに設定する	plt.plot(xdata, ydata, color='cadetblue')
ライトサーモン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightsalmon')
ライトスチールブルー色の折れ線を描く	plt.plot(xdata, ydata, color='lightsteelblue')
ダークオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
カウンタaCounterから高頻出項目をn個、リストとして見る	aCounter.most_common(n)
objは集合か調べる	isinstance(obj, set)
スラグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
xの小数点以下'5'桁までをプリントする	print(':.5f'.format(x))
s内の大文字・小文字を無視したパターンpatternよって置換する	re.sub(pattern, repl, s, flags=re.IGNORECASE)
オプションで、UTF8を使う	encoding = 'utf-8'
データ列xdataをスノー色の柱状図でプロットする	plt.hist(xdata, color='snow')
TSVファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
パールバイオレットレッド色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
リストxdataとリストydataについての散布図を耐火レンガ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
データフレームdfをタブ区切りでJSONLファイルfilenameに保存する	df.to_csv(filename, sep='\t')
リストxdataとリストydataについて破線グラフを描画して、その色をオレンジレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
dfを千の位で丸める	df.round(-3)
折れ線グラフを描画する	plt.plot(xdata, ydata)
ブラウン色を用いて配列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='brown')
データフレームdfの欠損値を中央値で埋める	df.fillna(df.median())
リストxdataとリストydataについての散布図をトマト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
f全体をリストに変換する	[s.strip() for s in f.readlines()]
リストxdataと配列ydataについて折れ線グラフを描画して、色をディープスカイブルー変える	plt.plot(xdata, ydata, color='deepskyblue')
リストxdataとリストydataについて散布図を描画して、下三角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
ミディアムターコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
dfの列一覧	df.info()
リストxdataとイテラブルydataの折れ線グラフに左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
配列xdataとデータ列ydataについての散布図を紺碧色で描く	plt.plot(xdata, ydata, c='azure')
データフレームdfをエクセルファイルファイルでJSONLファイルfilenameに保存する	df.to_excel(filename)
データフレームdfのcolを1000の位で丸める	df[col].round(-3)
オプションで、バッファリングのサイズをnに設定する	buffering = n
リストxdataと配列ydataについての散布図をコーラル色で描く	plt.plot(xdata, ydata, c='coral')
xのコサイン	math.cos(x)
アザミ色のマーカーを用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
リストxdataとリストydataについての散布図にカラーコードrgbのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストxdataとリストydataの折れ線グラフを描画して、その色をライトゴールドロディイエローにセットする	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
データ列xdataと配列ydataの折れ線グラフに、線幅nの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
破線グラフの色をハリウッドに指定する	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
リストalistの要素をソートする	sorted(alist)
nからn2の間の柱状図を用いて数列xdataを描画する	plt.hist(xdata, range=(n, n2))
破線の色をミディアムパープルにする	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
sにおいてs2をs3に全て置き換える	s.replace(s2, s3)
リストxdataとリストydataについて破線を描画してその色をアンティークホワイト変える	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
ゴールデンロッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
配列xdataとリストydataについて破線グラフを描画して、その色をライトグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
データフレームdfをcolによって昇順に並べ直す	df.sort_values(by=col, ascending=True)
整数nがタプルatupleのどれかか調べる	n in atuple
いつまでもnからカウントダウンする	itertools.count(start=n, step=-1)
xが正の整数	x > 0
qの分子	q.numerator
辞書adictから最後に追加した項目を取り出す	adict.popitem()
dfをカラムcolとcol2で破壊的にソートする	df.sort_values(by=[col,col2], inplace=True)
重なりを見やすくリストxdataとリストydataの散布図をミディアムパープル色として描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
dfが正規分布からどの程度尖っているか見る	df.skew()
nが負の数か調べる	n < 0
空の集合	set()
リストxdataとリストydataについて折れ線グラフを描画して、その色を赤に設定する	plt.plot(xdata, ydata, color='red')
データフレームdfのリストalistカラムを100の位で丸めて、整数型にする	df[alist].round(-2).astype(int)
カデットブルー色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='cadetblue')
データフレームdfから数値データのカラムを抽出する	df.select_dtypes('number')
折れ線グラフの色をダークスラテグレーにする	plt.plot(xdata, ydata, color='darkslategray')
散布図を黒い丸印を使って描画する	plt.plot(xdata, ydata, marker='o', c='k')
sを空白で区切って文字列リストに変換する	s.split()
sが片仮名か調べる	('ァ' <= s <= 'ン')
配列xdataと数列ydataの折れ線グラフに赤いバツ印を描く	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
リストxdataとデータ列ydataの折れ線グラフに星印を描画する	plt.plot(xdata, ydata, marker='*')
黒い折れ線グラフを描画する	plt.plot(xdata, ydata, color='k')
リストxdataとリストydataについての散布図をイエローグリーン色で描画する	plt.plot(xdata, ydata, c='yellowgreen')
データフレームdfのカラムcolをリストに変換する	df[col].values.tolist()
nとn2の積	n * n2
ミディアムバイオレットレッド色を用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、関数適用した値	df.groupby([col, col2], as_index=False).agg(func)
セットasetが空集合か	len(aset) == 0
黒い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='k')
sの末尾	s[-1]
貝殻色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をディープスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
データフレームdfの未入力値を最大値で埋める	df.fillna(df.max())
リストxdataと配列ydataの散布図を重なりを見やすくアンティークホワイト色として描画する	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
オブジェクトobjのハッシュ値	hash(obj)
折れ線グラフのダイアモンドマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
淡いピンク色色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightpink')
データ列xdataを赤色のヒストグラムとして描く	plt.hist(xdata, color='red')
サドルブラウン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='saddlebrown')
dsカラムを丸める	ds.round()
sを下線付きで表示する	print(f'\033[4m{s}\033[0m')
数列xdataとリストydataについて破線グラフを描画して、その色をグリーンイエローに指定する	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
s内のs2をn回だけs3に置き換える	s.replace(s2, s3, n)
データフレームdfを__Y__で並べる	df.sort_values(by=col)
リストxdataをライトコーラル色のヒストグラムで描画する	plt.hist(xdata, color='lightcoral')
リストxdataとリストydataの折れ線グラフに、青い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
リストxdataとリストydataについて散布図を描画して、マーカーの色をサーモンに設定する	plt.plot(xdata, ydata, c='salmon')
データフレームdfの要約統計量	df.describe()
ピーチパフ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='peachpuff')
折れ線グラフの下三角マーカーを赤色にする	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
sの示すエンコーディングとして追加できるようにファイルfilenameをオープンする]	open(filename, mode='a', encoding=s)
データ列ds中にいくつ欠損値があるか数える	ds.isna().sum()
数列xdataと配列ydataについての散布図をペルー色を用いて描画する	plt.plot(xdata, ydata, c='peru')
乱数シードを初期化する	random.seed()
イエローグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
散布図にクリムゾン色のマーカーを使う	plt.plot(xdata, ydata, c='crimson')
カウンタaCounterの正の数のみ残す	+aCounter
データ列xdataをピンク色のヒストグラムを用いて描画する	plt.hist(xdata, color='pink')
データフレームdfをCSVファイルでJSONLファイルfilenameに保存する	df.to_csv(filename)
リストxdataとリストydataについてドジャーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')
破線の色をオリーブにする	plt.plot(xdata, ydata, linestyle='dash', color='olive')
データフレームdfのカラムcol毎の関数適用した値	df.groupby(col).agg(func)
リストxdataとリストydataについての散布図をオリーブ色で描画する	plt.plot(xdata, ydata, c='olive')
タプルatupleをn倍する	atuple * n
文字列elementがadictの値に含まれているか	element in adict.values()
リストxdataをダークシアン色のヒストグラムを用いて描画する	plt.hist(xdata, color='darkcyan')
リストalist中の最大値	max(alist)
sのnからとn2までの間にs2が含まれるか調べる	s.find(s2, start=n, end=n2) != -1
sをs2で区切ってリストに変換する	s.split(s2)
折れ線グラフの四角マーカーを黄色くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
リストxdataとリストydataについて折れ線グラフを描画して、その色をブラックに設定する	plt.plot(xdata, ydata, color='black')
一点鎖線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
データ列xdataとリストydataについての散布図をパールゴールデンロッド色を用いて描く	plt.plot(xdata, ydata, c='palegoldenrod')
配列xdataと配列ydataについてミディアムシアグリーン色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
黒い左三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='<', c='k')
イテラブルxdataとデータ列ydataの赤い一点鎖線グラフを描く	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
破線グラフの色をライトスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
データフレームdfのリストalistカラムの平均値	df[alist].mean()
ライム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lime')
データフレームdfのsを欠損値に変換する	df.replace(s, np.nan)
s中の複数行対応のパターンpatternよって置き換える	re.sub(pattern, repl, s, flags=re.MULTILINE)
sを走査し、正規表現patternに大文字・小文字を無視してマッチするか確認する	re.search(pattern, s, flags=re.IGNORECASE)
タプルatuple中の最小値	min(atuple)
リストiterableのそれぞれを関数funcでフィルタする	filter(func, iterable)
オブジェクトobjはタプルクラスか調べる	isinstance(obj, tuple)
数列xdataと配列ydataについて散布図を描画して、マーカーの色をダークオーキッドにセットする	plt.plot(xdata, ydata, c='darkorchid')
ペルーでリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='peru')
ディープスカイブルー色の柱状グラフを使ってリストxdataをプロットする	plt.hist(xdata, color='deepskyblue')
リストxdataとリストydataについての散布図をクリムゾン色で描画する	plt.plot(xdata, ydata, c='crimson')
ベクトルの演算をする	import numpy as np
リストxdataとイテラブルydataについての散布図を紺碧色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='azure', alpha=0.5)
ダークターコイズ色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='darkturquoise')
ダークマゼンタ色でリストxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkmagenta')
リストxdataと数列ydataの散布図を描画してマーカーの色をブランチドアーモンドとする	plt.plot(xdata, ydata, c='blanchedalmond')
データフレームdfの列colの値が欠損値	df[col].isna()
ミディアムアクアマリン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
リストxdataと数列ydataの破線グラフを描画して、その色をオリーブ変える	plt.plot(xdata, ydata, linestyle='dash', color='olive')
データフレームdf内のcolカラムをn個にビン分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)
散布図をブルーバイオレット色のマーカーで描画する	plt.plot(xdata, ydata, c='blueviolet')
データフレームdfをリストalistで指定されたカラムによってソートして、更新する	df.sort_values(by=alist, inplace=True)
コマンド引数のn番目を得る	sys.argv[n]
sのnからn2までの範囲でs2をカウントする	s.count(s2, start=n, end=n2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をホットピンクに設定する	plt.plot(xdata, ydata, c='hotpink')
リストxdataとリストydataの折れ線グラフに、黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
ダークレッド色でリストxdataとデータ列ydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
新しいカウンタを新たに作成する	collections.Counter()
リストxdataとリストydataについて破線グラフを描画して、その色をコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='coral')
日時dtが日時dt2より前か調べる	dt < dt2
データ列dsが何月か見る	ds.dt.month
破線グラフの色をコーンズシルクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
リストxdataとリストydataの折れ線グラフに左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
リストxdataとリストydataについて折れ線グラフを描画して、その色をシャルトルーズに設定する	plt.plot(xdata, ydata, color='chartreuse')
ライトスレイグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
折れ線グラフの色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, color='darkgoldenrod')
カラーバーを描画する	plt.colorbar()
リストxdataとリストydataの白い折れ線グラフをプロットする	plt.plot(xdata, ydata, color='w')
散布図に大バツマーカーを使う	plt.plot(xdata, ydata, marker='X')
列col毎にデータフレームdfを集計して、col2カラムの分散を調べる	df.groupby(col)[col2].var()
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, c='mediumseagreen')
セットasetにリストiterableを追加更新する	aset.update(iterable)
本日が火曜日か調べる	datetime.datetime.today().weekday() == 1
nが正の数かどうか調べる	n > 0
リストxdataとリストydataについての散布図をロイヤルブルー色で描画する	plt.plot(xdata, ydata, c='royalblue')
インディアンレッド色で散布図をプロットする	plt.plot(xdata, ydata, c='indianred')
日時dtが木曜日か調べる	dt.weekday() == 3
xのx2乗	pow(x, x2)
ファイルfilenameが存在しないか調べる	not os.path.exists(filename)
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、平均値	df.groupby([col, col2], as_index=False).mean()
オブジェクトelementがタプルatupleの要素	element in atuple
リストxdataと配列ydataの散布図を描画して色をライムにセットする	plt.plot(xdata, ydata, c='lime')
柱状図をパパイヤウィップ色として描画する	plt.hist(xdata, color='papayawhip')
セットasetのすべての要素がaset2に含まれるか調べる	aset.issubset(aset2)
リストiterableを両端キューに変換する	collections.deque(iterable)
折れ線グラフのポイントマーカーを黒色に変更する	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
データフレームdfのカラムcolの欠損値を直後の値で埋める	df[col].fillna(method='bfill')
デックdeqの要素を右にn個分ローテートする	deq.rotate(n)
データフレームdfのcolとデータフレームdf2のカラムcol2をキーとして外部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='outer')
リストxdataをコーラル色のヒストグラムで描画する	plt.hist(xdata, color='coral')
折れ線の色をパレットトルコイズに設定する	plt.plot(xdata, ydata, color='paleturquoise')
リストxdataとリストydataについての散布図をフォレストグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
最初のコマンド引数を得る	sys.argv[1]
散布図にrgbの右三角マーカーを用いる	plt.plot(xdata, ydata, marker='>', c=rgb)
リストxdataとリストydataについて散布図を描画して、マーカーの色をアクアマリンに設定する	plt.plot(xdata, ydata, c='aquamarine')
折れ線グラフの色をレベッカパープルに設定する	plt.plot(xdata, ydata, color='rebeccapurple')
散布図にカラーコードrgbの四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c=rgb)
n年n2月n3日の日時	datetime.datetime(year=n, month=n2, day=n3)
リストydataを横軸と指定して、折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
グラフのカラーパレットをパステル調にする	sns.set(pallete='pastel')
データフレームdfのカラムcolのsを欠損値に変換する	df[col].replace(s, np.nan)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークオーキッドに設定する	plt.plot(xdata, ydata, c='darkorchid')
フォレストグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
破線グラフの色をデピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')
ディムグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をオリーブに設定する	plt.plot(xdata, ydata, linestyle='dash', color='olive')
散布図にダークスラテグレー色のマーカーを使う	plt.plot(xdata, ydata, c='darkslategray')
データ列xdataとリストydataの折れ線を描画して色をダークオリーブグリーン変える	plt.plot(xdata, ydata, color='darkolivegreen')
カウンタaCounterを高頻出順に列挙する	aCounter.most_common()
データフレームdfのカラムcol2を型tyに変換し、カラムcolに代入する	df[col] = df[col2].astype(ty)
散布図にダークシアン色のマーカーを使う	plt.plot(xdata, ydata, c='darkcyan')
sのの中でパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s)
デックdeq中の文字列elementのインデックス	deq.index(element)
破線グラフの色をダークカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
n年の日付	datetime.date(year=n, month=1, day=1)
折れ線グラフの色をダークシアグリーンに設定する	plt.plot(xdata, ydata, color='darkseagreen')
グリーンイエロー色としてイテラブルxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='greenyellow')
チョコレート色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
折れ線グラフの色を青くする	plt.plot(xdata, ydata, color='b')
データフレームdfとデータフレームdf2を縦方向に連結する	pd.concat([df, df2])
散布図にオールドレース色のマーカーを使う	plt.plot(xdata, ydata, c='oldlace')
データフレームdfからカテゴリデータを取り出す	df.select_dtypes('object')
散布図にアリスブルー色のマーカーを使う	plt.plot(xdata, ydata, c='aliceblue')
エラーなくalistの文字列elementの位置を見る	alist.index(element) if element in alist else -1
リストxdataとリストydataについて折れ線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(xdata, ydata, color='greenyellow')
配列xdataとイテラブルydataについてグレー色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gray')
リストxdataとリストydataの折れ線グラフに、線幅nのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
データ列dsを中央値で分割する	pd.qcut(ds, 2)
ミスティローズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mistyrose')
イテラブルxdataをダークオリーブグリーン色の度数分布図で描画する	plt.hist(xdata, color='darkolivegreen')
シルバーでリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='silver')
データフレームdfのcolカラムがxでない行を取り除く	df[df[col] == x]
データ列dsが何秒か見る	ds.dt.second
xが1、もしくは2か調べる	x == 1 or x == 2
リストxdataとデータ列ydataの散布図をライム色で重なりを見やすく描く	plt.plot(xdata, ydata, c='lime', alpha=0.5)
fからn文字、読み込む	f.read(n)
スカイブルー色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
データ列xdataと配列ydataの折れ線グラフを描画して、その色をパールゴールデンロッドに指定する	plt.plot(xdata, ydata, color='palegoldenrod')
散布図にカラーコードrgbのバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c=rgb)
ds列の要約統計量を算出する	ds.describe()
青い折れ線グラフを描画する	plt.plot(xdata, ydata, color='b')
シーグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='seagreen')
リストxdataとリストydataの折れ線グラフにダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
散布図にダークオレンジ色のマーカーを使う	plt.plot(xdata, ydata, c='darkorange')
リストxdataとリストydataについて破線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
データ列xdataと配列ydataについて破線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
パープル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='purple')
iterableを両端キューに変換する	collections.deque(iterable)
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
sをトリムする	s.strip()
リストiterableとリストiterable2を連結する	itertools.chain(iterable, iterable2)
xを切り下げて整数に変換する	math.floor(x)
オリーブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olive')
データ列dsを小数点以下n桁で丸める	ds.round(n)
タプルatuple中の最大値	max(atuple)
ピンク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pink', alpha=0.5)
配列xdataとリストydataについてコーラル色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='coral')
シルバー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='silver', alpha=0.5)
正規表現をインポートする	import re
辞書adictをインデント幅nのJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)
ライム色の折れ線を描画する	plt.plot(xdata, ydata, color='lime')
リストxdataとリストydataについての散布図をライトスカイブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
青い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='b')
オプションで、エンコーディングをSJISに設定する	encoding = 'shift_jis'
シーグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
折れ線のポイントマーカーの線幅をnに指定する	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
サンディーブラウン色のマーカーで重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
データフレームdfのカラムcolがxより大きくx2より小さい行を抽出する	df[(x < df[col]) & (df[col] < x2)]
赤色の丸印を用いて散布図を描く	plt.plot(xdata, ydata, marker='o', c='r')
イテラブルxdataと配列ydataについて散布図を描画してマーカーの色をアリスブルーに設定する	plt.plot(xdata, ydata, c='aliceblue')
データフレームdfのカラムcolの分散	df[col].var()
nが5の倍数か調べる	n % 5 == 0
散布図をミッドナイトブルー色のマーカーで描画する	plt.plot(xdata, ydata, c='midnightblue')
散布図をゴールデンロッド色のマーカーで描画する	plt.plot(xdata, ydata, c='goldenrod')
何回まで再帰ができるか調べる	sys.getrecursionlimit()
重なりを見やすくダークグリーン色でリストxdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
数列xdataをペルー色のヒストグラムとして描画する	plt.hist(xdata, color='peru')
折れ線グラフの色をレモンシフォンに設定する	plt.plot(xdata, ydata, color='lemonchiffon')
数列xdataとリストydataの黒い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='k')
リストxdataとリストydataについて折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategray')
配列xdataとリストydataの散布図を描画して、マーカーの色をラベンダーにセットする	plt.plot(xdata, ydata, c='lavender')
nとn2の最大公約数を求める	math.gcd(n, n2)
リストxdataをスレートブルー色のヒストグラムで描画する	plt.hist(xdata, color='slateblue')
リストxdataとリストydataについてオリベドラブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
ミディアムターコイズ色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='mediumturquoise')
dfからランダムに重複ありでn行を取り出す	df.sample(n, replace=True)
リストxdataとリストydataの折れ線グラフに、線幅nの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
dsカラムのユニークな要素数を見る	ds.nunique()
配列xdataと数列ydataについての散布図をオリベドラブ色で描画する	plt.plot(xdata, ydata, c='olivedrab')
文字列elementが辞書adictの値に含まれているか調べる	element in adict.values()
リストxdataをゲインズボロ色のヒストグラムを用いて描画する	plt.hist(xdata, color='gainsboro')
リストxdataと数列ydataについてライトシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
タプルatupleをn回、連結する	atuple * n
レベッカパープル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='rebeccapurple')
ダークマゼンタ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
リストxdataとリストydataの破線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='dashed', color='r')
左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<')
ラベンダー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lavender')
一点鎖線の色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
リストxdataとリストydataについての散布図をイエローグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
atupleの末尾を取り除く	atuple[:-1]
パウダーブルー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
データフレームdfのカラムcolのユニークな値	df[col].unique()
未定値	None
柱状図をインディゴとして描画する	plt.hist(xdata, color='indigo')
データフレームdfの数値をまとめて丸める	df.round()
データフレームdfのカラムcolがsが含まれない行を抽出する	df[not df[col].str.contains(s)]
ダイアモンド印を使って散布図を描画する	plt.plot(xdata, ydata, marker='D')
dsの未入力値を平均値に変更する	ds.fillna(ds.mean())
折れ線グラフの色をゴーストホワイトに設定する	plt.plot(xdata, ydata, color='ghostwhite')
リストxdataとリストydataについて折れ線を描画して、色をティール変える	plt.plot(xdata, ydata, color='teal')
s中にs2が含まれないか調べる	s2 not in s
数列xdataとイテラブルydataについて散布図を描画して、ポイント印の色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
黄色色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
散布図にライトブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='lightblue')
グレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='gray', alpha=0.5)
ライトグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
ブラック色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)
イテラブルxdataをミッドナイトブルー色のヒストグラムとして描く	plt.hist(xdata, color='midnightblue')
整数nを十六進表現に変換する	hex(n)
折れ線の色をペールグリーンに設定する	plt.plot(xdata, ydata, color='palegreen')
赤い折れ線グラフを描画する	plt.plot(xdata, ydata, color='r')
折れ線グラフのマーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
リストxdataとリストydataについてブランチドアーモンド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
二進sをバイト列化する	int(s, 2).to_bytes(length=2, byteorder='big')
リストxdataとリストydataについて破線グラフを描画して、その色をライトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
数式として、eを微分する	sympy.diff(e)
散布図にマゼンタ色のマーカーを使う	plt.plot(xdata, ydata, c='magenta')
データ列xdataと数列ydataの散布図をプラム色で描画する	plt.plot(xdata, ydata, c='plum')
sをコロンで分割し文字列のリストにする	s.split(':')
データフレームdfをカラムcol毎にグループ化して、分散を求める	df.groupby(col).var()
データ列xdataと配列ydataについて折れ線グラフを描画して、色をスレートブルー変える	plt.plot(xdata, ydata, color='slateblue')
折れ線グラフの色をオリーブにする	plt.plot(xdata, ydata, color='olive')
トマト色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='tomato')
データフレームdfのcolの平均値を計算する	df[col].mean()
リストxdataとリストydataについてレモンシフォン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
xの小数点以下'4'桁まで表示する	print(':.4f'.format(x))
リストxdataと数列ydataについての散布図に黒色のポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
ハニーデュー色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
データ列dsが何時か見る	ds.dt.hour
データフレームdfのカラムcol毎の個数	df.groupby(col).count()
正規表現でs内の大文字・小文字を無視したパターンによる全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
リストxdataとリストydataについて折れ線グラフを描画して、その色をオーキッドに設定する	plt.plot(xdata, ydata, color='orchid')
s内に日本語が使われているかどうか調べる	re.search('[あ-んア-ン一-鿐]', s)
sのの中でASCII限定のパターンpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
マゼンタ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='magenta')
ミディアムスプリンググリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='mediumspringgreen')
ライトグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightseagreen')
ファイルfilenameをsの示すエンコーディングでオープンする]	open(filename, encoding=s)
リストxdataとリストydataについてタン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tan')
データ列dsをビン数nでビン分割する	pd.cut(ds, n)
デックdeqに文字列elementをエンキューする	deq.appendleft(element)
データ列xdataとリストydataについての散布図をディープスカイブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
sをs2で二分する	s.partition(s2)
リストxdataとリストydataについての散布図をレベッカパープル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
ライトグレー色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
sを全て英小文字に変換する	s.lower()
データフレームdfのカラムcolの値を正規表現patternでまとめてsに置き換える	df[col].replace(pattern, s, regex=True)
四角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='s')
配列xdataとリストydataについて折れ線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(xdata, ydata, color='cornsilk')
散布図にスチールブルー色のマーカーを使う	plt.plot(xdata, ydata, c='steelblue')
クラスCが構造体かどうか調べる	issubclass(C, tuple)
オールドレース色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
インディアンレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
破線グラフの色を黄色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellow')
xとx2の両方をnに設定する	x = x2 = n
リストxdataとリストydataについて散布図を描画して、マーカーの色をグリーンに設定する	plt.plot(xdata, ydata, c='green')
データフレームdfをリストalistで指定されたカラムによって破壊的にソートする	df.sort_values(by=alist, inplace=True)
オプションで、読み込まない列番号をnamesで指定する	skiprows = names
アクア色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='aqua')
ホットピンク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='hotpink')
データフレームdfから重複した行を残さず、削除する	df.drop_duplicates(keep=False)
リストxdataとリストydataについての散布図をスラグレー色で描画する	plt.plot(xdata, ydata, c='slategray')
オプションで、改行コードを旧Macに変更する	newline = '\r'
セットasetがセットaset2の真部分集合か調べる	aset < aset2
ライトシアン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
リストxdataとリストydataについて散布図を描画して色をライトシアンに設定する	plt.plot(xdata, ydata, c='lightcyan')
sを走査しパターンpatternに複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
dfとデータフレームdf2をcolをキーにして右結合する	pd.merge(df, df2, on=col, how='right')
リストxdataとリストydataについてビスク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bisque')
システム時刻で乱数を初期化する	random.seed()
リストxdataをロージーブラウン色のヒストグラムで描画する	plt.hist(xdata, color='rosybrown')
重なりを見やすくイテラブルxdataとリストydataについての散布図をホットピンク色として描画する	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
データフレームdfからn個、サンプリングする	df.sample(n)
Pandasで、__Y__を日付データに変換し、dfのインデックスにする	df.index = pd.to_datetime(df)
与えられた浮動小数点数の有理数近似	q.limit_denominator(max_denominator=1000000)
リストxdataとリストydataについて折れ線グラフを描画して、その色をトマトに設定する	plt.plot(xdata, ydata, color='tomato')
プラム色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='plum')
既存のファイルfilenameをEUCで追加できるようにオープンする]	open(filename, mode='a', encoding='euc_jp')
NaNも加えてxをダミー変数に変換する	pd.get_dummies(x, dummy_na=True)
破線グラフの色をグリーンイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
折れ線グラフの色をブルーバイオレットに設定する	plt.plot(xdata, ydata, color='blueviolet')
オーキッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
パパイヤウィップ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='papayawhip')
数列xdataとデータ列ydataについてミディアムブルー色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
データフレームdfのcolとcol2毎の最小値	df.groupby([col, col2], as_index=False).min()
グレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='grey')
ミッドナイトブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
破線の色をライトスカイブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
青い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='b')
リストxdataとリストydataについて散布図を描画して、マーカーの色をオールドレースに設定する	plt.plot(xdata, ydata, c='oldlace')
rangeの無限バージョン	itertools.count(start=n, step=n2)
オプションで、行を自動的な連番に指定する	index_col = None
リストalist内の要素が全て真か調べる	all(alist)
データ列dsをn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
グリーン色として配列xdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='green')
xの小数点以下を丸める	round(x)
オプションで、読み込みモードを使う	mode = 'r'
dfからランダムに一行を選ぶ	df.sample()
asetとaset2に共通する要素からなる集合	aset.intersection(aset2)
ダークグレー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='darkgray')
x2をxに設定する	x = x2
上限長nの両端キューを新しく作成する	X = collections.deque(maxlen=n)
スチールブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='steelblue')
aCounterをリストに変換する	list(aCounter)
日付adateをn秒前に戻す	adate - datetime.timedelta(seconds=n)
破線グラフの色をダークレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
数列xdataとリストydataについて散布図を描画して、マーカーの色をリネンにセットする	plt.plot(xdata, ydata, c='linen')
グラフ中の日本語フォントを有効にする	sns.set(font='IPAexGothic')
リストxdataとリストydataについて破線グラフを描画して、その色をダークスラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
リストxdataとデータ列ydataの破線グラフを描画してその色を赤にする	plt.plot(xdata, ydata, linestyle='dashed', color='r')
データフレームdfのカラムcolのユニークな値の個数	df[col].nunique()
alistのn番目のを使う	alist[n]
ペールグリーン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='palegreen')
ファイルパスfilenameからディレクトリ名取り出す	os.path.dirname(filename)
リストxdataと数列ydataについてシエナ色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='sienna')
重なりを見やすくパウダーブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
リストxdataとリストydataについての散布図をダークスラテグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
アザミ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
折れ線グラフに右三角マーカーを使う	plt.plot(xdata, ydata, marker='>')
ライトイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
折れ線グラフのバツマーカーを黄色くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
データフレームdfのカラムcolを1000の位で丸める	df[col].round(-3)
インディゴ色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indigo')
ライトブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightblue')
リストxdataをアクアマリン色のヒストグラムで描画する	plt.hist(xdata, color='aquamarine')
日付adateの曜日を整数で使う	adate.weekday()
リストxdataとリストydataの青い折れ線グラフを描画する	plt.plot(xdata, ydata, color='b')
dtが水曜日	dt.weekday() == 2
リストxdataとリストydataについて折れ線グラフを描画して、その色をピーチパフに設定する	plt.plot(xdata, ydata, color='peachpuff')
グラフの背景色を白くする	sns.set(style='whitegrid')
ミディアムオーキッド色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='mediumorchid')
データフレームdfのカラムcolをヒストグラムで描画する	plt.hist(df[col])
osモジュールをインポートする	import os
散布図を重なりを見やすくブラウン色で描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)
データフレームdfのsを欠損値に変換する	df.replace(s, np.nan)
ダークオリーブグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkolivegreen')
データフレームdfの列colのどの値が頻出か見る	df[col].mode()
データ列xdataとリストydataについての散布図をライトシアン色でプロットする	plt.plot(xdata, ydata, c='lightcyan')
リストxdataとリストydataについての散布図をゴーストホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
ミディアムオーキッド色の度数分布図としてリストxdataを描く	plt.hist(xdata, color='mediumorchid')
リストxdataとリストydataについての散布図をホットピンク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
スノー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='snow')
イテラブルxdataとリストydataについての散布図に赤色の丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
nの各桁の総和	sum(map(int, str(n)))
データフレームdfをカラムcolとカラムcol2によって降順に破壊的にソートする	df.sort_values(by=[col,col2], ascending=False, inplace=True)
新しいカウンタを新しく作って、Xに代入する	X = collections.Counter()
nがn2で割り切れないか	n % n2 != 0
リストxdataとリストydataについてサンディーブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
s内にひとつでも非ASCII文字があるか	any(not c.isascii() for c in s)
データフレームdfのリストalistカラムの欠損値を最大値で埋める	df[alist].fillna(df[alist].max())
selectorsでマスクされたリストiterableの要素を取り出す	itertools.compress(iterable, selectors=iterable2)
日付adateが水曜日か調べる	adate.weekday() == 2
標準エラーを	sys.stderr
オリベドラブ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='olivedrab')
日時dtからn分、減算する	dt - datetime.timedelta(minutes=n)
ライトサーモン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightsalmon')
dsをリストalistを境界値として分割する	pd.cut(ds, alist)
リストxdataとリストydataについて折れ線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(xdata, ydata, color='indianred')
青色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blue')
sの英大文字を英小文字に変換する	s.lower()
最大長nの両端キューを新しく生成する	collections.deque(maxlen=n)
ライトゴールドロディイエロー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
カーキ色でデータ列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='khaki')
リストalistの先頭を取り除く	alist[1:]
赤色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='red')
dfを各colカラム毎にグループ化して、col2カラムの合計を見る	df.groupby(col)[col2].sum()
日時dtの曜日を整数で使う	dt.weekday()
破線の色をグリーンイエローにセットする	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
折れ線の色をレモンシフォンにする	plt.plot(xdata, ydata, color='lemonchiffon')
日付adateからn年分、減算する	adate - datetime.timedelta(years=n)
sが全て英数字かどうか調べる	s.isalnum()
sのpatternパターンによる全マッチを使う	re.findall(pattern, s)
数列xdataとリストydataの破線を描画して、その色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='grey')
リストxdataとリストydataについての散布図をライム色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lime', alpha=0.5)
折れ線グラフにポイントマーカーを使う	plt.plot(xdata, ydata, marker='.')
折れ線グラフの色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, color='blanchedalmond')
dsが何月か確認する	ds.dt.month
sの中からパターンpatternに複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)
xの二進対数	math.log2(x)
デックdeqが空か調べる	len(deq) == 0
Pandasのバージョンを見る	print(pd.__version__)
整数nを十六進文字列に変換する	hex(n)[2:]
イテラブルxdataとリストydataについての散布図にダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D')
リストxdataとリストydataについての散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
折れ線の色をロージーブラウンにセットする	plt.plot(xdata, ydata, color='rosybrown')
データフレームdfのカラムcolの値をdictでまとめて置き換える	df[col].replace(adict)
xの双曲線正接の逆数	math.atanh(x)
リストxdataと配列ydataの破線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
折れ線の色を貝殻に設定する	plt.plot(xdata, ydata, color='seashell')
リストxdataをヒストグラムで描画する	plt.hist(xdata)
ライム色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lime')
データフレームdfのカラムcolを抽出する	df[col]
折れ線グラフの色をバイオレットに設定する	plt.plot(xdata, ydata, color='violet')
日時dtからn月分、減算する	dt - datetime.timedelta(months=n)
nがn2より小さいかどうか確認する	n < n2
JSONL形式のファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
散布図にカラーコードrgbの大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c=rgb)
データフレームdfのカラムcolの欠損値を直前の値で埋める	df[col].fillna(method='ffill')
sを出現したパターンpatternで分割する	re.split(pattern, s)
nからn2までのひとつ飛ばしの整数列を作る	list(range(n, n2+1, 2))
データフレームdfのリストalistカラムの空文字を欠損値に変換し、ドロップする	df[alist].replace('', np.nan).dropna()
破線グラフの色をカラーコードrgbにする	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
グリーンイエロー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='greenyellow')
トマト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
リストxdataの変化を折れ線グラフで描画する	plt.plot(range(len(xdata)), xdata)
リストxdataとリストydataについての散布図をパールゴールデンロッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
パレットトルコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')
リストxdataとリストydataの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted')
リストalistの全ての要素をクリアにする	alist.clear()
リストxdataとリストydataについて破線グラフを描画して、その色をライムグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
リストxdataと配列ydataについて折れ線グラフを描画して、その色をダークカーキにセットする	plt.plot(xdata, ydata, color='darkkhaki')
ゴーストホワイト色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
リストxdataとリストydataについての散布図をライトイエロー色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
オプションで、バイナリ書き込みモードに設定する	mode = 'wb'
ダークゴールデンロッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkgoldenrod')
データフレームdfのリストalistカラムのsを欠損値に変換する	df[alist].replace(s, np.nan)
アリスブルー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
折れ線グラフに丸マーカーを使用する	plt.plot(xdata, ydata, marker='o')
リストxdataとリストydataについてナバホホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
配列xdataとイテラブルydataの散布図を描画して、色を赤に設定する	plt.plot(xdata, ydata, c='red')
折れ線グラフの四角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
破線グラフの色をプラムに設定する	plt.plot(xdata, ydata, linestyle='dash', color='plum')
データフレームdfのカラムcolがxより大きい行を抽出する	df[df[col] > x]
文字列elementの出力を改行なしに行う	print(obj, end='')
リストxdataとリストydataについて破線グラフを描画して、その色をライムに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lime')
折れ線グラフの三角マーカーを赤くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
データフレームdfのリストalistカラムの標本標準偏差	df[alist].std()
ファイルfilenameをSJISでオープンする]	open(filename, encoding='shift_jis')
数式として、eを因数分解する	sympy.factor(e)
折れ線グラフの色をダークオーキッドに設定する	plt.plot(xdata, ydata, color='darkorchid')
リストxdataとリストydataについてゴールド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gold')
s内に英数字が含まれるか確認する	any(c.isalnum() for c in s)
UNIXコマンドtextを実行する	os.system(text)
xとx2をスワップする	x, x2 = x2, x
データフレームdfが正規分布からどの程度、歪んでいるか見る	df.kurt()
リストalistの重複を取り除く	sorted(set(alist), key=alist.index)
リストxdataをフクシア色のヒストグラムで描画する	plt.hist(xdata, color='fuchsia')
データフレームdfのカラムcol中に文字列valueがあるか調べる	df[col].isin([value])
n年の日時	datetime.datetime(year=n, month=1, day=1)
nをn2だけ左シフトする	n << n2
折れ線グラフの色をオールドレースに設定する	plt.plot(xdata, ydata, color='oldlace')
配列xdataとリストydataの破線グラフを描画して、その色をライトスカイブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
ライトスチールブルー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
文字コードnの文字	chr(n)
リストxdataと数列ydataについて折れ線グラフを描画してその色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, color='cornflowerblue')
リストxdataと配列ydataの折れ線グラフに、線幅nの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をオリベドラブに設定する	plt.plot(xdata, ydata, c='olivedrab')
ケンドール相関係数でデータフレームdfのカラムcolとカラムcol2の相関行列	df[[col, col2]].corr(method='kendall')
リストxdataとリストydataの折れ線グラフを描画して、一点鎖線に設定する	plt.plot(xdata, ydata, linestyle='dashbot')
日付adateにn分分、加算する	adate + datetime.timedelta(minutes=n)
数列xdataとリストydataの折れ線グラフを描画して色を黄色くする	plt.plot(xdata, ydata, color='y')
パープル色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='purple')
sのn番目より前にs2が含まれないか調べる	s.find(s2, end=n) == -1
リストxdataをグリーン色のヒストグラムで描画する	plt.hist(xdata, color='green')
スラグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
デピンク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='deeppink')
改行なしにオブジェクトobjを表示する	print(obj, end='')
nがn2以下または、n3以上	n <= n2 or n >= n3
リストxdataと配列ydataについて折れ線グラフを描画して色をダークレッドに変更する	plt.plot(xdata, ydata, color='darkred')
データ列xdataと数列ydataについて破線グラフを描画してその色をパールバイオレットレッドにする	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
リストxdataとリストydataについて破線グラフを描画して、色をカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
ダークオーキッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkorchid')
リストxdataとリストydataについての散布図をインディアンレッド色で描画する	plt.plot(xdata, ydata, c='indianred')
dfのcolとcol2列の相関行列ピアソンで	df[[col, col2]].corr(method='pearson')
リストxdataとリストydataについての散布図をピーチパフ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
dfのalistカラムに存在する文字列valueと日付データvalue2の合計を数える	df[alist].isin([value, value2]).sum()
xを浮動小数点数に変換する	float(x)
リストxdataをクリムゾン色のヒストグラムで描画する	plt.hist(xdata, color='crimson')
日時dtが日時dt2より前	dt < dt2
Pandasで、日付データのデータフレームdfのカラムcolをデータフレームdfのインデックスにする	df.index = pd.DatetimeIndex(df[col])
リストxdataとリストydataの折れ線グラフに、線幅nの▲マーカーをプロットする	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
シエナ色としてリストxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='sienna')
fをクローズする	f.close()
xの仮数	math.frexp(x)[0]
データフレームdfの重複する行を数える	df.duplicated().sum()
リストxdataと配列ydataの散布図を描画して、色をゴーストホワイトにする	plt.plot(xdata, ydata, c='ghostwhite')
データフレームdfからリストalistで指定されたデータ型のカラムを除外する	df.select_dtypes(exclude=alist)
リストxdataとリストydataについて折れ線グラフを描画して、その色をカーキに設定する	plt.plot(xdata, ydata, color='khaki')
ライトゴールドロディイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
リストxdataとリストydataについてスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
リストxdataをパウダーブルー色のヒストグラムで描画する	plt.hist(xdata, color='powderblue')
データフレームを表示するとき、表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をシエナに設定する	plt.plot(xdata, ydata, c='sienna')
リストxdataを小麦色のヒストグラムで描画する	plt.hist(xdata, color='wheat')
nとn2の最大公約数	math.gcd(n, n2)
sの両端から改行を取り除く	s.strip('\n')
リストxdataとリストydataについてアクアマリン色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
データフレームdfにいくつ欠損値があるか数える	df.isna().sum()
データフレームdfから重複ありでランダムにn行を抽出する	df.sample(n, replace=True)
アルファベットから一文字ランダムに選ぶ	random.choice(string.ascii_uppercase)
ラベンダー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavender')
s2の文字コード	ord(s2)
散布図を重なりを見やすくダークレッド色のマーカーで描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
散布図にダークサーモン色のマーカーを使う	plt.plot(xdata, ydata, c='darksalmon')
リストxdataとリストydataの破線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
sの中で複数行対応のパターンにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s, flags=re.MULTILINE)
オリーブ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='olive')
データ列xdataとデータ列ydataの折れ線グラフに、大きさnの右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', markersize=n)
データフレームdfの各colとカラムcol2毎の最大値を求める	df.groupby([col, col2], as_index=False).max()
リストxdataを貝殻色のヒストグラムで描画する	plt.hist(xdata, color='seashell')
データフレームdfのリストalistカラムの尖度	df[alist].skew()
ダークバイオレット色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
nがn2以下かどうか	n <= n2
整数nを二進表記に変換する	bin(n)
日時dtををn秒後に進める	dt + datetime.timedelta(seconds=n)
データフレームdf中にある文字列valueの合計を数える	df.isin([value]).sum()
データフレームdfのカラムcolとcol2毎の関数適用した値	df.groupby([col, col2], as_index=False).agg(func)
数列xdataと配列ydataの散布図に赤色のバツマーカーを描く	plt.plot(xdata, ydata, marker='x', c='r')
シアン色のヒストグラムでデータ列xdataを描く	plt.hist(xdata, color='cyan')
データフレームdfをカラムcolとカラムcol2によって昇順に破壊的にソートする	df.sort_values(by=[col,col2], ascending=True, inplace=True)
折れ線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgrey')
ゴールデンロッド色でヒストグラムを描画する	plt.hist(xdata, color='goldenrod')
オブジェクトobjは辞書クラスか調べる	isinstance(obj, dict)
データフレームdfを転置する	df.T
ライトシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
破線グラフの色をアザミに設定する	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
リストxdataをフォレストグリーン色のヒストグラムで描画する	plt.hist(xdata, color='forestgreen')
コーラル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='coral')
破線グラフの色をライトイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
nの二進リテラル	bin(n)
オールドレース色の折れ線グラフを描く	plt.plot(xdata, ydata, color='oldlace')
filenameをデータフレームとして読み込む	pd.read_json(filename, orient='records', lines=True)
グレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='gray')
散布図をアクアマリン色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='aquamarine')
日付adateの年数	adate.year
破線グラフの色をサンディーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
リストxdataとリストydataの折れ線グラフに、大きさnの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markersize=n)
sがカタカナ	('ァ' <= s <= 'ン')
右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>')
リストalistを反転する	reversed(alist)
カウンタaCounterのそれぞれの項目を、そのカウント回数	aCounter.elements()
xの余弦の逆数	math.acos(x)
リストxdataとリストydataについて散布図を描画して、マーカーの色をロージーブラウンに設定する	plt.plot(xdata, ydata, c='rosybrown')
配列xdataとリストydataの破線折れ線グラフを描く	plt.plot(xdata, ydata, linestyle='dashed')
日時dtと日時dt2の時間差を秒数で求める	(dt - dt2).total_seconds()//60
データ列dsの各データが何回出現するか見る	ds.value_counts()
データ列dsの歪度	ds.kurt()
淡いピンク色色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='lightpink')
インディアンレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indianred')
空の辞書	{}
データフレームdfのカラムcolの欠損値を最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
データ列をインポートする	import pandas as pd
黒い星マーカーで散布図を描く	plt.plot(xdata, ydata, marker='*', c='k')
リストxdataを黄色色の度数分布図として描く	plt.hist(xdata, color='yellow')
文字列elementがリストalistに含まれないか調べる	element not in alist
データフレームdf中のカラムcolをビン数nでビン分割する	pd.cut(df[col], n)
ダークシアグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkseagreen')
散布図にライトスレイグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightslategrey')
セットaset＼セットaset2	aset.difference(aset2)
リストxdataとリストydataの破線グラフを描画して、その色をハニーデュー変える	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
データフレームdfのalist列のnパーセンタイルを計算する	df[alist].quantile(n/100)
リストxdataとリストydataについての散布図をミッドナイトブルー色で描画する	plt.plot(xdata, ydata, c='midnightblue')
ライトスレイグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightslategray')
sの中でパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s)
arrayをビニングする	pd.cut(array, alist)
リストxdataとイテラブルydataについてグリーンイエロー色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
タプルatupleの最後の要素を見る	atuple[-1]
ヒストグラムをアクアを用いて描く	plt.hist(xdata, color='aqua')
タプルatupleの末尾のn要素を取り除く	atuple[:-n]
リストxdataとリストydataについて散布図を描画して、マーカーの色をプラムに設定する	plt.plot(xdata, ydata, c='plum')
データフレームdfの尖度	df.skew()
本日が土曜日	datetime.datetime.today().weekday() == 5
dfのカラムcolを丸める	df[col].round()
データ列xdataとデータ列ydataについての散布図をダークターコイズ色でプロットする	plt.plot(xdata, ydata, c='darkturquoise')
コーラル色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='coral', alpha=0.5)
リストxdataとリストydataについての散布図をゴールデンロッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
日時dtのタイムゾーン	dt.timetz()
xをx2で割った余り	x % x2
サンディーブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='sandybrown')
散布図にコーラル色のマーカーを使う	plt.plot(xdata, ydata, c='coral')
dsカラムの歪度を計算する	ds.kurt()
破線グラフの色をライトコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
n年n2月を日付に変換する	datetime.date(year=n, month=n2, day=1)
データ列dsの秒	ds.dt.second
リストxdataとイテラブルydataについて散布図を描画して、色を淡いピンク色にセットする	plt.plot(xdata, ydata, c='lightpink')
リストxdataとリストydataの折れ線に、線幅nの左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
配列xdataと配列ydataについてシアン色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='cyan')
ドジャーブルーでリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='dodgerblue')
散布図に黒い四角印を使用する	plt.plot(xdata, ydata, marker='s', c='k')
データフレームdfのカラムcolの欠損値を中央値に設定する	df[col].fillna(df[col].median())
リストxdataをトマト色のヒストグラムで描画する	plt.hist(xdata, color='tomato')
ペルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='peru')
dfを列col毎で集計した分散を求める	df.groupby(col).var()
折れ線の色をシーグリーンに設定する	plt.plot(xdata, ydata, color='seagreen')
リストxdataとリストydataについての散布図に赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
sが平仮名かどうか調べる	('ぁ' <= s <= 'ん')
折れ線グラフの色をアクアマリンに設定する	plt.plot(xdata, ydata, color='aquamarine')
ネイビー色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='navy', alpha=0.5)
データ列dsの欠損値を直前の値で埋める	ds.fillna(method='ffill')
ダークサーモン色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='darksalmon')
本日の日付	datetime.date.today()
リストxdataとリストydataについて散布図を描画して、マーカーの色をゴールドに設定する	plt.plot(xdata, ydata, c='gold')
配列xdataとリストydataについて破線を描画して、その色をシャルトルーズにする	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
シャルトルーズ色として配列xdataについてのヒストグラムを描く	plt.hist(xdata, color='chartreuse')
ダークシアグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
オブジェクトobjがリストかタプルか	isinstance(obj, (list)
リストxdataを耐火レンガ色のヒストグラムで描画する	plt.hist(xdata, color='firebrick')
スクリプトファイルの絶対パス	os.path.abspath(__file__)
オプションで、出力先をファイルに設定する	file = sys.open(filename, 'w')
イテラブルxdataとイテラブルydataの散布図をゴールデンロッド色で描く	plt.plot(xdata, ydata, c='goldenrod')
デックdeq中の文字列elementの数を数える	deq.count(element)
ゲインズボロ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='gainsboro')
リストxdataとリストydataのカラーコードrgbの一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
シーグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='seagreen')
リストxdataのヒストグラムをnからn2の範囲で描画する	plt.hist(xdata, range=(n, n2))
カウンタaCounter∩カウンタaCounter2	aCounter & aCounter2
リストxdataとリストydataについての散布図をサーモン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
破線グラフの色をバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='violet')
sをISO書式で日時に変換する	datetime.datetime.fromisoformat(s)
リストxdataとリストydataの破線グラフを描画して、色をアイボリーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
オプションで、文字コードを文字コードtextに設定する	encoding = text
nがn2以上か調べる	n >= n2
偽	False
リストxdataとリストydataについて折れ線グラフを描画して、その色をオレンジに設定する	plt.plot(xdata, ydata, color='orange')
日付adateにn年分、加算する	adate + datetime.timedelta(years=n)
折れ線グラフの色をカーキに設定する	plt.plot(xdata, ydata, color='khaki')
貝殻色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='seashell')
折れ線グラフの星マーカーを黄色くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
配列xdataとデータ列ydataについて折れ線グラフを描画して、色をミスティローズに設定する	plt.plot(xdata, ydata, color='mistyrose')
八進数sをn2バイトのバイナリに変換する	int(s, 8).to_bytes(length=n2, byteorder='big')
スプリンググリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='springgreen')
破線グラフの色をシルバーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='silver')
ミントクリーム色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mintcream')
リストxdataとリストydataについて折れ線グラフを描画して、その色をアリスブルーに設定する	plt.plot(xdata, ydata, color='aliceblue')
サドルブラウン色を使ってデータ列xdataについてのヒストグラムを描く	plt.hist(xdata, color='saddlebrown')
ダークグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkgray')
データ列dsを100の位で丸める	ds.round(-2)
日付adateからn月分、減算する	adate - datetime.timedelta(months=n)
リストxdataとデータ列ydataについての散布図をピーチパフ色で描く	plt.plot(xdata, ydata, c='peachpuff')
リストxdataとリストydataについて破線グラフを描画して、その色をアクアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
