リストxdataとリストydataについて折れ線グラフを描画して、その色をバイオレットに設定する	plt.plot(xdata, ydata, color='violet')
グレー色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='grey')
データ列dsの要約統計量	ds.describe()
スラグレー色の柱状グラフでデータ列xdataを描画する	plt.hist(xdata, color='slategray')
タプルatupleのn番目のの要素	atuple[n]
破線グラフの色をフローラルホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
折れ線グラフのダイアモンド印を青くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
リストxdataをダーク・スラテグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkslategrey')
ビスク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='bisque')
ピーチパフ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='peachpuff')
リストxdataとリストydataについて破線グラフを描画してその色をパパイヤウィップ変える	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
にy=0の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
青色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='blue')
配列xdataをダークスラテグレー色のヒストグラムで描く	plt.hist(xdata, color='darkslategray')
リストxdataをパレットトルコイズ色のヒストグラムとして描画する	plt.hist(xdata, color='paleturquoise')
リストxdataをゴールデンロッド色のヒストグラムで描画する	plt.hist(xdata, color='goldenrod')
リストxdataとデータ列ydataについてライトグレー色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
イテラブルxdataとリストydataについての散布図をパパイヤウィップ色を使って重なりを見やすく描く	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
zが0に近づくときのeの極限値を求める	sympy.limit(e, z, 0)
リストxdataをダークブルー色のヒストグラムで描画する	plt.hist(xdata, color='darkblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategrey')
リストxdataとリストydataについての散布図をミディアムターコイズ色で描画する	plt.plot(xdata, ydata, c='mediumturquoise')
配列xdataとリストydataの折れ線グラフに、黄色い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
シエナ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sienna')
ミディアムターコイズ色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
破線グラフの色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
イエローグリーン色の折れ線グラフを描く	plt.plot(xdata, ydata, color='yellowgreen')
本日が月曜日か調べる	datetime.datetime.today().weekday() == 0
実線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
sを走査し、パターンpatternにマッチするか見る	re.search(pattern, s)
リストxdataとリストydataについての散布図をフクシア色で描画する	plt.plot(xdata, ydata, c='fuchsia')
dsの平均値を求める	ds.mean()
タプルatupleの先頭	atuple[0]
リストxdataと配列ydataの折れ線を描画して、一点鎖線に設定する	plt.plot(xdata, ydata, linestyle='dashbot')
散布図に右三角マーカーを使う	plt.plot(xdata, ydata, marker='>')
タブ	'\t'
ファイル名filenameがCSVファイルか調べる	filename.endswith('.csv')
プラットフォームのユニコードの最大コードポイントを知る	sys.maxunicode
sのnからn2までの間でs2を探す	s.find(s2, start=n, end=n2)
配列xdataとリストydataの折れ線グラフに、大きさnの左三角印を描画する	plt.plot(xdata, ydata, marker='<', markersize=n)
ダークバイオレット色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkviolet')
リストxdataとリストydataについての散布図をロージーブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
xを印字できる文字列にする	ascii(x)
ピンク色の折れ線を描く	plt.plot(xdata, ydata, color='pink')
sを黒色で表示する	print(f'\033[30m{s}\033[0m')
ミディアムバイオレットレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をブルーバイオレットに設定する	plt.plot(xdata, ydata, c='blueviolet')
データフレームdfの未入力値を平均値で埋める	df.fillna(df.mean())
リストxdataとリストydataについての散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
リストiterableの集合	set(iterable)
リストxdataとリストydataの折れ線を描画して、色をダークターコイズに設定する	plt.plot(xdata, ydata, color='darkturquoise')
配列xdataとリストydataについて散布図を描画してマーカーの色をスレートブルーに変更する	plt.plot(xdata, ydata, c='slateblue')
折れ線グラフの三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='^', markersize=n)
リストxdataとリストydataについて破線グラフを描画して、その色をダークブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
カウンタaCounter∪カウンタaCounter2	aCounter | aCounter2
折れ線グラフの三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
モカシン色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='moccasin')
数列xdataとリストydataの折れ線グラフに、大きさnの▲印をプロットする	plt.plot(xdata, ydata, marker='^', markersize=n)
ミディアムスプリンググリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
折れ線の色をダークカーキにセットする	plt.plot(xdata, ydata, color='darkkhaki')
それぞれnとn2をxとx2とする	x, x2 = n, n2
ライトスカイブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightskyblue')
データフレームdfのリストalistカラムの歪度	df[alist].kurt()
折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
本日の月数	datetime.datetime.today().month
カウンタaCounterから最頻出の項目を使う	aCounter.most_common(0)[0]
データフレームdfのカラムcolとカラムcol2毎の合計	df.groupby([col, col2], as_index=False).sum()
オリベドラブ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='olivedrab')
ライトグレー色として柱状図を描く	plt.hist(xdata, color='lightgrey')
ピンク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='pink')
散布図にオリベドラブ色のマーカーを使う	plt.plot(xdata, ydata, c='olivedrab')
リストalistとリストalist2を連結する	alist + alist2
オブジェクトobjを出力する	print(obj)
リストxdataとリストydataについてダークバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
リストxdataをローングリーン色のヒストグラムで描画する	plt.hist(xdata, color='lawngreen')
オブジェクトobjは整数クラスのインスタンス	isinstance(obj, int)
配列xdataとデータ列ydataについて散布図を描画してマーカーの色をグリーンにセットする	plt.plot(xdata, ydata, c='green')
matplotlibのカラーパレットを暗くする	sns.set(pallete='dark')
リストxdataとリストydataについての散布図に黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストxdataとデータ列ydataについて破線を描画してその色をアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
ファイルfilenameを書き込みモードでオープンして]、fとする	f = open(filename, mode='w')
データフレームdfのインデックスの名前一覧を使う	df.index
cからイテラブルiterableを引く	aCounter.subtract(iterable)
リストxdataとリストydataについて破線グラフを描画して、その色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
時間を使う	import time
数列xdataと配列ydataの折れ線グラフを描画して色をダークスレートブルーに設定する	plt.plot(xdata, ydata, color='darkslateblue')
折れ線グラフの色をベージュに設定する	plt.plot(xdata, ydata, color='beige')
リストxdataとリストydataの散布図をダーク・スラテグレー色として重なりを見やすく描く	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
インディゴ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='indigo')
リストxdataとリストydataについての散布図をゴーストホワイト色で描画する	plt.plot(xdata, ydata, c='ghostwhite')
散布図に赤い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='r')
折れ線グラフの色をダークグリーンに設定する	plt.plot(xdata, ydata, color='darkgreen')
破線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をフローラルホワイトに設定する	plt.plot(xdata, ydata, color='floralwhite')
リストxdataと配列ydataについての散布図をサドルブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
黄色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellow')
リストxdataとリストydataの折れ線グラフに、大きさnのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markersize=n)
散布図にハリウッド色のマーカーを使う	plt.plot(xdata, ydata, c='burlywood')
タン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tan')
データフレームdfをリストalistで指定されたカラムによって昇順にソートして、更新する	df.sort_values(by=alist, ascending=True, inplace=True)
サイコロと同じ乱数を生成する	random.randint(1, 6)
リストxdataとリストydataについてアザミ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='thistle')
オールドレース色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
データフレームdfのカラムcolの平均値	df[col].mean()
レベッカパープル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='rebeccapurple')
データフレームdfのalistカラムのsをNaNに変換する	df[alist].replace(s, np.nan)
データフレームdfの各colとcol2毎の個数	df.groupby([col, col2], as_index=False).count()
リストxdataとリストydataについて折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategrey')
Pythonパスを得る	sys.path
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgray')
データフレームdfをまとめて小数点以下n桁で丸める	df.round(n)
配列xdataとリストydataの折れ線を描画して、その色をライムとする	plt.plot(xdata, ydata, color='lime')
カウンタaCounterとカウンタaCounter2のユニオン	aCounter | aCounter2
アイボリー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
CSVファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep=',')
sを最後のs2で二分する	s.rpartition(s2)
JSON形式のbを辞書に変換する	json.loads(b.decode('unicode-escape'))
エラーを出力する	sys.stderr
sは全て識別子名か調べる	s.isidentifier()
リストiterableにリストiterable2を続けたイテラブル	itertools.chain(iterable, iterable2)
データ列xdataとリストydataについて折れ線グラフを描画して、色をグリーンに変更する	plt.plot(xdata, ydata, color='green')
破線グラフの色をネイビーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navy')
リストxdataをライムグリーン色のヒストグラムで描画する	plt.hist(xdata, color='limegreen')
ライトスカイブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
データ列xdataと配列ydataについて散布図を描画してマーカーの色をディープスカイブルーに変更する	plt.plot(xdata, ydata, c='deepskyblue')
リストxdataとリストydataについて折れ線を描画して、その色をターコイズに設定する	plt.plot(xdata, ydata, color='turquoise')
折れ線グラフの色を黄色くする	plt.plot(xdata, ydata, color='y')
リストxdataとリストydataについて破線グラフを描画して、その色をスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
パウダーブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='powderblue')
破線グラフの色をペールグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
Pandasで、フォーマットfmtでsを日付データに変換する	pd.to_datetime(s, format=fmt)
リストxdataとリストydataについての散布図に大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
リストxdataとリストydataについて散布図を描画して、ダイアモンドマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
Pandasで、xを日付データに変換する	pd.to_datetime(x)
リストxdataとリストydataについての散布図を黄色色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
データフレームdfのカラムcol中に文字列valueと文字列value2があるか調べる	df[col].isin([value, value2])
折れ線グラフの下三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
データ列dsの年	ds.dt.year
フローラルホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='floralwhite')
ダークカーキ色で配列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkkhaki')
リストxdataと数列ydataの折れ線グラフに赤いダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
リストxdataとリストydataの黒い破線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dashed', color='k')
データフレームdfのalistカラムが正規分布からどれだけ歪んでいるか見る	df[alist].kurt()
データ列dsの最頻値の出現回数	ds.freq()
リストxdataをディムグレー色のヒストグラムで描画する	plt.hist(xdata, color='dimgray')
フォレストグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='forestgreen')
dfのcolカラムをリストとして抽出する	df[col].values.tolist()
散布図にシルバー色のマーカーを使う	plt.plot(xdata, ydata, c='silver')
配列xdataをライムグリーン色のヒストグラムで描画する	plt.hist(xdata, color='limegreen')
リストxdataとリストydataについてダークスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
折れ線グラフの色をフローラルホワイトに設定する	plt.plot(xdata, ydata, color='floralwhite')
n割るn2の切り上げ	(n + n2 - 1) // n2
16進sを整数にする	int(s, 16)
データフレームdfのcolのsをNaNに変換する	df[col].replace(s, np.nan)
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategrey')
データフレームdfのカラムcolの欠損値を最大値で埋める	df[col].fillna(df[col].max())
バイオレット色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='violet')
リストxdataとリストydataについての散布図をチョコレート色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
破線グラフの色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gray')
耐火レンガ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='firebrick')
リストxdataとリストydataについて破線グラフを描画して、その色をオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orange')
リストxdataとリストydataについての散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
破線グラフの色をダークマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
デックdeqの先頭から要素を取り除く	deq.popleft()
リストxdataとイテラブルydataについてトマト色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tomato')
オールドレース色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
リストxdataとリストydataについての散布図に赤色の菱形マーカーをプロットする	plt.plot(xdata, ydata, marker='D', c='r')
グラフ内に枠なしの補足を入れる	plt.legend(frameon=False)
リストxdataとリストydataについての散布図をレベッカパープル色で描画する	plt.plot(xdata, ydata, c='rebeccapurple')
リストxdataと配列ydataの散布図をターコイズ色で描画する	plt.plot(xdata, ydata, c='turquoise')
リストxdataとリストydataについての散布図をダークオーキッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画してその色をライトグリーンに指定する	plt.plot(xdata, ydata, color='lightseagreen')
ライトスレイグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightslategray')
ダークスレートブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkslateblue')
リストxdataとリストydataについてミディアムアクアマリン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
散布図をスノー色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='snow')
ダークターコイズ色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='darkturquoise')
カラーコードrgbの丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
ハローワールドと表示する	print('Hello World')
散布図に黒色の星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='k')
カウンタaCounterを集合に変換する	set(aCounter)
折れ線グラフの色をダークシアンに設定する	plt.plot(xdata, ydata, color='darkcyan')
リストxdataをオールドレース色のヒストグラムで描画する	plt.hist(xdata, color='oldlace')
dfのリストalistカラム内にいくつvalueがあるかカウントする	df[alist].isin([value]).sum()
リストxdataと数列ydataについての散布図をフクシア色で描く	plt.plot(xdata, ydata, c='fuchsia')
イテラブルxdataとリストydataの散布図をパレットトルコイズ色としてプロットする	plt.plot(xdata, ydata, c='paleturquoise')
ピーチパフ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
グレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='gray')
データフレームdfをJSONLファイルfilenameにSJISで保存する	df.to_csv(filename, encoding='shift_jis')
リストxdataとリストydataについての散布図にカラーコードrgbの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
ミントクリーム色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mintcream')
リストxdataとリストydataについて折れ線グラフを描画して、その色をイエローグリーンに変更する	plt.plot(xdata, ydata, color='yellowgreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色を紺碧に設定する	plt.plot(xdata, ydata, c='azure')
既存のファイルfilenameをUTF8として追加できるようにオープンする]	open(filename, mode='a', encoding='utf-8')
sを赤色にする	f'\033[31m{s}\033[0m'
sをシアン化する	f'\033[36m{s}\033[0m'
オプションで、破壊的に操作する	inplace = True
折れ線グラフのダイアモンドマーカーを緑色に設定する	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
リストxdataとリストydataについてモカシン色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
イテラブルxdataとリストydataについての散布図をブランチドアーモンド色として描画する	plt.plot(xdata, ydata, c='blanchedalmond')
折れ線グラフの三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
黄色色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='yellow')
x2に対するxの対数	math.log(x, x2)
日付adateをタプルに変換する	adate.timetuple()
リストxdataとリストydataの折れ線グラフをsの色で描画する	plt.plot(xdata, ydata, color=s)
データ列dsを等量でビン数nでビン分割する	pd.qcut(ds, n)
パパイヤウィップ色でデータ列xdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='papayawhip')
散布図にオリーブ色のマーカーを使う	plt.plot(xdata, ydata, c='olive')
数式として、eをzについてn階微分する	sympy.diff(e, z, n)
ラベンダー色の柱状図でデータ列xdataをプロットする	plt.hist(xdata, color='lavender')
配列xdataと配列ydataについて折れ線を描画して、その色をパパイヤウィップに設定する	plt.plot(xdata, ydata, color='papayawhip')
リストxdataと数列ydataについての散布図をタン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='tan', alpha=0.5)
散布図にポイントマーカーを使う	plt.plot(xdata, ydata, marker='.')
重なりを見やすく散布図をミディアムオーキッド色のマーカーでプロットする	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
スカイブルーを用いてリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='skyblue')
リストxdataとリストydataについての散布図にカラーコードrgbのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
レベッカパープル色として散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
xにx2を掛ける	x * x2
dfのcol中の欠損値の数を数える	df[col].isna().sum()
グラフに水平方向の実線を付ける	plt.axhline(y=0, linestyle='solid')
elementの無限イテラブル	itertools.repeat(element)
リストxdataとリストydataについて折れ線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(xdata, ydata, color='yellowgreen')
数列xdataと配列ydataについての散布図をオリーブ色で描画する	plt.plot(xdata, ydata, c='olive')
リストxdataとリストydataについて散布図を描画して、マーカーの色をイエローグリーンに設定する	plt.plot(xdata, ydata, c='yellowgreen')
配列xdataとリストydataの折れ線グラフに黄色いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
グリーン色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='green')
リストxdataとリストydataについて折れ線グラフを描画して、その色をゴールドに設定する	plt.plot(xdata, ydata, color='gold')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
データフレームdfのcolをインプレイスで落とす	df.drop(col, axis=1, inplace=True)
配列xdataとイテラブルydataについて折れ線グラフを描画して、その色をパープルにセットする	plt.plot(xdata, ydata, color='purple')
ASCII限定の正規表現patternでsを区切る	re.split(pattern, s, flags=re.ASCI)
リストxdataとリストydataについての散布図を重なりを見やすくスレートブルー色で描画する	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
散布図にビスク色のマーカーを使う	plt.plot(xdata, ydata, c='bisque')
sは十進数字か	s.isdecimal()
リストxdataとリストydataについての散布図をパールゴールデンロッド色で描画する	plt.plot(xdata, ydata, c='palegoldenrod')
リストalistをリストalistを境界値としてビン分割する	pd.cut(alist, alist)
配列xdataとリストydataの散布図を描画してマーカーの色をオールドレースに設定する	plt.plot(xdata, ydata, c='oldlace')
aとa2	a.index = a / 1
nわるn2	n / n2
コーンズシルク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='cornsilk')
エクセルファイルファイルfilenameからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
数列xdataと配列ydataの折れ線グラフに青色の右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
dfを配列に変換する	df.values
リストxdataとリストydataについての散布図をラベンダー色で描画する	plt.plot(xdata, ydata, c='lavender')
イテラブルxdataとリストydataについて破線グラフを描画して、その色をダークスラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
データフレームdfをJSONLファイルfilenameにTSVファイルで書き込む	df.to_csv(filename, sep='\t')
ミスティローズ色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='mistyrose')
散布図を星マーカーを用いて描く	plt.plot(xdata, ydata, marker='*')
配列xdataについてのヒストグラムをミントクリーム色として描く	plt.hist(xdata, color='mintcream')
折れ線グラフの左三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
破線グラフの色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
点線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
黒い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='k')
プラム色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='plum', alpha=0.5)
散布図にゲインズボロ色のマーカーを使う	plt.plot(xdata, ydata, c='gainsboro')
オプションで、エンコーディングエラーを無視するように設定する	errors = 'ignore'
ダークバイオレット色のヒストグラムを用いてリストxdataをプロットする	plt.hist(xdata, color='darkviolet')
散布図にライトシアン色のマーカーを使う	plt.plot(xdata, ydata, c='lightcyan')
折れ線グラフの色を耐火レンガに変更する	plt.plot(xdata, ydata, color='firebrick')
リストxdataとリストydataについてライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
淡いピンク色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
スノー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='snow')
データフレームdfの欠損値を平均に変更する	df.fillna(df.mean())
インディアンレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='indianred')
リストxdataとリストydataについての散布図をライトコーラル色で描画する	plt.plot(xdata, ydata, c='lightcoral')
データ列xdataとデータ列ydataの折れ線に三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^')
アリスブルーでリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='aliceblue')
ブランチドアーモンド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='blanchedalmond')
タプルatupleの先頭のn要素を取り除く	atuple[n:]
タン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='tan')
破線の色をティールにする	plt.plot(xdata, ydata, linestyle='dash', color='teal')
リストxdataとリストydataについての散布図をタン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='tan', alpha=0.5)
折れ線グラフの大バツマーカーの大きさをn変える	plt.plot(xdata, ydata, marker='X', markersize=n)
オレンジ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='orange')
リストxdataとリストydataについてライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
折れ線グラフの下三角マーカーを黒くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
アクア色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='aqua')
リストxdataとリストydataについて折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgray')
データ列dsの分散	ds.var()
折れ線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, color='mediumvioletred')
標準入力から1行だけ読み込んで、改行を取り除く	sys.stdin.readline().rstrip()
赤いポイントマーカーをリストxdataと配列ydataについての散布図に描画する	plt.plot(xdata, ydata, marker='.', c='r')
ティール色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='teal', alpha=0.5)
セットasetからセットaset2を引いた差集合	aset.difference(aset2)
オブジェクトobjにtextプロパティが存在する	hasattr(obj, text)
散布図にローングリーン色のマーカーを使う	plt.plot(xdata, ydata, c='lawngreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をフクシアに設定する	plt.plot(xdata, ydata, color='fuchsia')
nが偶数か調べる	n % 2 == 0
カラーコードrgbの上三角マーカーを配列xdataとリストydataについての散布図に描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
耐火レンガ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
グラフの背景色を暗くする	sns.set(style='darkgrid')
リストxdataとリストydataの折れ線グラフに四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
配列xdataとイテラブルydataについて散布図を描画して、マーカーの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, c='lavenderblush')
整数nがasetのどれか	n in aset
nからn2を引く	n - n2
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトサーモンに設定する	plt.plot(xdata, ydata, color='lightsalmon')
データ列ds内の欠損値の合計をカウントする	ds.isna().sum()
リストxdataとリストydataについての散布図をピンク色で描画する	plt.plot(xdata, ydata, c='pink')
リストxdataと配列ydataについて破線グラフを描画して、その色をミッドナイトブルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
破線の色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
リストxdataとリストydataについての散布図をペルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='peru', alpha=0.5)
ダークオーキッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkorchid')
配列xdataと配列ydataについてダークターコイズ色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
ミッドナイトブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='midnightblue')
線幅nの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
データフレームdfの欠損値を直前の値に設定する	df.fillna(method='ffill')
破線グラフの色をアクアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
破線グラフの色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
今日をsでフォーマットして文字列にする	datetime.datetime.today().strftime()
散布図に赤い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='r')
散布図にライトイエロー色のマーカーを使う	plt.plot(xdata, ydata, c='lightyellow')
関数predicatefuncが真となるリストiterableの部分	itertools.dropwhile(predicatefunc, iterable)
数列xdataとリストydataの折れ線グラフを描画して、その色をピーチパフに設定する	plt.plot(xdata, ydata, color='peachpuff')
リストxdataとリストydataについての散布図をペールグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
リストxdataとリストydataについてダークグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
散布図に△印を使用する	plt.plot(xdata, ydata, marker='^')
sをシアンにする	f'\033[36m{s}\033[0m'
n×n2の二次元リスト	[[0] * n for _ in range(n2)]
データフレームdfのリストalistカラムの欠損値を中央値で埋める	df[alist].fillna(df[alist].median())
ダークブルー色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='darkblue')
オプションで、追加モードに設定する	mode = 'a'
リストxdataとリストydataについて折れ線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(xdata, ydata, color='cornsilk')
ミディアムシアグリーン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
折れ線の色をダークレッドに変更する	plt.plot(xdata, ydata, color='darkred')
重なりを見やすくミディアムスプリンググリーン色で数列xdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
破線グラフの色をローングリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
データフレームdfの欠損値が含まれる箇所に色を付ける	df.style.highlight_null()
散布図にアザミ色のマーカーを使う	plt.plot(xdata, ydata, c='thistle')
n年n2月の日時	datetime.datetime(year=n, month=n2, day=1)
配列xdataとリストydataについて折れ線グラフを描画してその色をスノーに設定する	plt.plot(xdata, ydata, color='snow')
リストxdataとリストydataについての散布図をシーグリーン色で描画する	plt.plot(xdata, ydata, c='seagreen')
セットasetにおけるセットaset2の補集合を計算する	aset.difference(aset2)
sを最後のs2で二分し、、後半の文字列を使う	s.rpartition(s2)[-1]
スチールブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
ファイルfilenameをディレクトリ名とファイル名に分割する	os.path.split(filename)
リストxdataとリストydataについて折れ線グラフを描画して、その色をペルーに設定する	plt.plot(xdata, ydata, color='peru')
ゲインズボロ色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='gainsboro')
リストalistとalist2を接続する	alist + alist2
ゴーストホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='ghostwhite')
紺碧色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='azure')
データフレームdfのリストalistカラムを10の位で丸めて、整数型にする	df[alist].round(-1).astype(int)
リストxdataとリストydataについて散布図を描画して、マーカーの色をペルーに設定する	plt.plot(xdata, ydata, c='peru')
配列xdataをゴールド色のヒストグラムで描く	plt.hist(xdata, color='gold')
データフレームdfの列colを削除する	df.drop(col, axis=1)
dfのcolカラム毎の合計	df.groupby(col).sum()
日付adateからn日分、減算する	adate - datetime.timedelta(days=n)
リストxdataとリストydataについての散布図をネイビー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='navy', alpha=0.5)
疑似乱数	random.random()
浮動小数点数の最小値	sys.float_info.min
リストxdataとリストydataについて折れ線グラフを描画して、その色をマゼンタに設定する	plt.plot(xdata, ydata, color='magenta')
alt(追加更新する	adict.update(adict2)
配列xdataとリストydataについて破線を描画して、その色をライムグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
リストxdataとリストydataについて散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
dfの歪度を求める	df.kurt()
リストxdataとリストydataについての散布図をダークバイオレット色で描画する	plt.plot(xdata, ydata, c='darkviolet')
リストxdataをダークサーモン色のヒストグラムで描画する	plt.hist(xdata, color='darksalmon')
データフレームdfのn行目を抽出する	df.loc[n]
データフレームdfの行と列を入れ替える	df.T
リストxdataとリストydataの折れ線グラフを描画して、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
貝殻色の折れ線を描画する	plt.plot(xdata, ydata, color='seashell')
データ列xdataとリストydataについて貝殻色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='seashell')
ライトグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgreen')
散布図にシアン色のマーカーを使う	plt.plot(xdata, ydata, c='cyan')
日付adateをsでフォーマットする	adate.strftime()
リストxdataとリストydataについて折れ線グラフを描画して、その色をリネンに設定する	plt.plot(xdata, ydata, color='linen')
カラムcolとcol2の重複を削除する	df.drop_duplicates(subset=col)
s中のASCII限定のパターンpatternよって置き換える	re.sub(pattern, repl, s, flags=re.ASCI)
小数点以下の表示精度をn桁にセットする	pd.set_option('precision', n)
dsカラムのNaNを中央値にする	ds.fillna(ds.median())
データ列dsのタイムゾーンをsに設定する	ds.tz_convert(s)
ロージーブラウン色のマーカーを用いて散布図を描く	plt.plot(xdata, ydata, c='rosybrown')
標準出力を使う	sys.stdout
辞書adictの全エントリをクリアする	adict.clear()
列iterableから新しいカウンタを新規に生成する	collections.Counter(iterable)
グラフのの中で日本語を表示できるようにする	sns.set(font='IPAexGothic')
リストxdataとリストydataについて破線グラフを描画して、その色をペールグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
オプションで、読み込むシートの名前をnamesに設定する	sheet_name = names
デックdeqを空にする	deq.clear()
一点鎖線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
データフレームdfのカラムcolの第一四分位数	df[col].quantile(0.25)
リストxdataとリストydataについて散布図を描画して、マーカーの色をピンクに設定する	plt.plot(xdata, ydata, c='pink')
散布図にグレー色のマーカーを使う	plt.plot(xdata, ydata, c='grey')
日付adateの曜日を使う	adate.weekday()
リストxdataをシアン色のヒストグラムで描画する	plt.hist(xdata, color='cyan')
リストalistの要素を昇順にソートする	sorted(alist, reverse=False)
データ列xdataをデピンク色のヒストグラムとして描く	plt.hist(xdata, color='deeppink')
ライトサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
辞書adictをコピーする	adict.copy()
デックdeqをリストに変換する	list(deq)
散布図に赤い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='r')
リストxdataとリストydataについてスチールブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
本日が何曜日か知る	datetime.datetime.today().weekday()
シャルトルーズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
xの小数点以下'4'桁までの文字列に変換する	':.4f'.format(x)
オブジェクトobjとobj2は同一オブジェクトか	obj is obj2
リストxdataとリストydataについて破線グラフを描画して、その色を耐火レンガに設定する	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
折れ線グラフのマーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
コーンフラワーブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をデピンクに設定する	plt.plot(xdata, ydata, c='deeppink')
データフレームdfのカラムcol毎の平均値	df.groupby(col).mean()
データ列xdataとデータ列ydataについて散布図を描画して、マーカーの色をゴールデンロッドに変更する	plt.plot(xdata, ydata, c='goldenrod')
散布図にホットピンク色のマーカーを使う	plt.plot(xdata, ydata, c='hotpink')
データフレームdfのカラムcolの空文字を欠損値に変換し、ドロップする	df[col].replace('', np.nan).dropna()
ダーク・スラテグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
パープル色のヒストグラムで配列xdataをプロットする	plt.hist(xdata, color='purple')
リストxdataとリストydataについての散布図をマルーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
リストxdataと配列ydataについて折れ線を描画してその色をペールグリーンに設定する	plt.plot(xdata, ydata, color='palegreen')
リストxdataとリストydataについて破線を描画して、その色をディムグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
データフレームdfのカラムcolのsを欠損値に変換する	df[col].replace(s, np.nan)
散布図に丸マーカーを使う	plt.plot(xdata, ydata, marker='o')
配列xdataとデータ列ydataの折れ線をsの色でプロットする	plt.plot(xdata, ydata, color=s)
ブラック色として散布図を描画する	plt.plot(xdata, ydata, c='black')
sからs2のパターンとして日時にする	datetime.datetime.strptime(s, s2)
折れ線グラフの四角マーカーを黒くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
リストxdataとリストydataについての散布図をグレー色で描画する	plt.plot(xdata, ydata, c='grey')
sが全て英小文字か調べる	s.islower()
データフレームdfのcol2を型tyに変換し、カラムcolとする	df[col] = df[col2].astype(ty)
nがn2よりも大きいか	n > n2
ゲインズボロでヒストグラムをプロットする	plt.hist(xdata, color='gainsboro')
データフレームdfをカラムcol毎にグループ化して、カラムcol2の標準偏差を求める	df.groupby(col)[col2].std()
データ列xdataとリストydataの折れ線グラフを描画して、その色をライトグレーとする	plt.plot(xdata, ydata, color='lightgray')
リストxdataとリストydataについての散布図をダークマゼンタ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
リストalistをnからナンバリングする	enumerate(alist, start=n)
sを青色で出力する	print(f'\033[34m{s}\033[0m')
nとn2の差	n - n2
リストxdataと配列ydataの散布図をミディアムブルー色で描画する	plt.plot(xdata, ydata, c='mediumblue')
データ列dsが何日か見る	ds.dt.day
リストalistの最後のn要素を除く	alist[:-n]
数列xdataとイテラブルydataについて散布図を描画して、マーカーの色をオレンジレッドに設定する	plt.plot(xdata, ydata, c='orangered')
リストxdataをミディアムパープル色のヒストグラムで描く	plt.hist(xdata, color='mediumpurple')
重なりを見やすく散布図をコーンフラワーブルー色のマーカーで描く	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
リストxdataとリストydataについてカデットブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(xdata, ydata, color='dodgerblue')
データフレームdfを各カラムcolとcol2の組み合わせ毎にまとめて、最大値を求める	df.groupby([col, col2], as_index=False).max()
selectorsでマスクされたタプルiterableの要素を取り出す	itertools.compress(iterable, selectors=iterable2)
標準入力を使う	sys.stdin
sを空白で分割して文字列のリストに変換する	s.split()
リストxdataとリストydataについてミディアムスプリンググリーン色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
リストxdataとリストydataについて散布図を描画して、マーカーの色をハニーデューに設定する	plt.plot(xdata, ydata, c='honeydew')
リストiterableのそれぞれを関数predicatefuncでフィルタする	map(func, iterable)
データフレームdfのcolが何秒か確認する	df[col].dt.second
リストalistに文字列elementを追加する	alist.append(element)
タプルatupleを反転する	reversed(atuple)
シアンでsを表示する	print(f'\033[36m{s}\033[0m')
文字列TSVファイルfilenameからCSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
xとx2の両方にnを代入する	x = x2 = n
dsを小数点以下n桁で四捨五入する	ds.round(n)
スノー色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='snow', alpha=0.5)
データフレームdfの欠損値を直前の値で埋める	df.fillna(method='ffill')
配列xdataと数列ydataの散布図を描画して、色をライトグリーンに変更する	plt.plot(xdata, ydata, c='lightseagreen')
スカイブルー色のマーカーとして重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
リストxdataとリストydataについて折れ線グラフを描画して、その色をマルーンに設定する	plt.plot(xdata, ydata, color='maroon')
nを切り捨てながら半分にする	n //= 2
データ列dsとデータ列ds2から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
データフレームdfのcolの未入力値を平均値で補う	df[col].fillna(df[col].mean())
オプションで、エンコーディングエラーがあるとき、例外を発生させるように設定する	errors = 'strict'
ダークオレンジ色でヒストグラムを描画する	plt.hist(xdata, color='darkorange')
リストiterableとリストiterable2をペアのリストにする	itertools.zip_longest(iterable, iterable2)
オプションで、バッファリングを無効にする	buffering = 0
サンディーブラウン色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
リストxdataとリストydataについての散布図をロイヤルブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
リストxdataと数列ydataについて破線グラフを描画して、その色をラベンダーブラッシュにする	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
リストxdataとリストydataの折れ線を描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgray')
トマト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='tomato')
リストxdataとリストydataについて散布図を描画して、マーカーの色をディムグレーに設定する	plt.plot(xdata, ydata, c='dimgrey')
配列xdataとリストydataについての散布図をスラグレー色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
ライトイエロー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightyellow')
スラグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='slategray')
xの床	math.floor(x)
現在のミリ秒	int(time.time() * 1000)
折れ線グラフの色をミディアムブルーに設定する	plt.plot(xdata, ydata, color='mediumblue')
二次元リストalistをフラット化する	sum(alist)
数式としてeを簡単にする	sympy.sympify(e)
xからx2の間の一様な疑似乱数を生成する	random.uniform(x, x2)
リストxdataとリストydataについての散布図をオリーブ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='olive', alpha=0.5)
sの先頭だけ英大文字化する	s.capitalize()
データ列xdataとリストydataについて折れ線グラフを描画してその色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, color='mediumspringgreen')
実線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
ライトスチールブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightsteelblue')
リストxdataとリストydataについての散布図をオレンジレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
データフレームdfをカラムcol毎にグループ化して、カラムcol2の最大値を求める	df.groupby(col)[col2].max()
データフレームdfの未入力値を最小値で補う	df.fillna(df.min())
リストxdataとリストydataについて散布図を描画して、マーカーの色をグリーンイエローに設定する	plt.plot(xdata, ydata, c='greenyellow')
リストxdataを縦軸数列ydataを横軸と指定して、折れ線グラフをプロットする	plt.plot(xdata, ydata)
折れ線グラフのマーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
データフレームdfのカラムcolを10の位で丸めて、整数型にする	df[col].round(-1).astype(int)
リストxdataとリストydataについての散布図に大バツマーカーを描く	plt.plot(xdata, ydata, marker='X')
改行付きでadictを文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)
プラットホーム	sys.platform
データフレームdf全体をカラムcolを用いて降順に破壊的にソートする	df.sort_values(by=col, ascending=False, inplace=True)
デックdeqの末尾	deq[-1]
xの小数部	math.modf(x)[0]
データフレームdfのcolとcol2毎の分散	df.groupby([col, col2], as_index=False).var()
リストxdataと数列ydataについての散布図をディープスカイブルー色を用いて描画する	plt.plot(xdata, ydata, c='deepskyblue')
リストxdataをレベッカパープル色のヒストグラムで描画する	plt.hist(xdata, color='rebeccapurple')
サンディーブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
リストxdataとリストydataについての散布図をシアン色で描画する	plt.plot(xdata, ydata, c='cyan')
ブラウン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='brown')
カウンタaCounterから0以下のカウントを取り除く	+aCounter
リストxdataとリストydataについての散布図をオリベドラブ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
デピンク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='deeppink')
データフレームdfの欠損値をxで埋める	df.fillna(x)
リストalistを等間隔でn個にビン分割する	pd.cut(alist, n)
データ列dsの欠損値を直後の値で埋める	ds.fillna(method='bfill')
散布図にライトサーモン色のマーカーを使う	plt.plot(xdata, ydata, c='lightsalmon')
カウンタaCounterから最もカウント数の多いの項目を見る	aCounter.most_common(0)[0]
xが負の数か調べる	x < 0
リストxdataとデータ列ydataの散布図に黒色のダイアモンド印をプロットする	plt.plot(xdata, ydata, marker='D', c='k')
ライムグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
オプションで、出力先を標準出力に変更する	file = sys.stdout
データ列xdataと配列ydataについてリネン色の折れ線を描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='linen')
データフレームdfをカラムcolごとにまとめて、個数を求める	df.groupby(col).count()
最大長をnにして両端キューを新しく作って、Xに代入する	X = collections.deque(maxlen=n)
日時dtの時間数	dt.hour
s名を持ち、s2のプロパティを持った名前付きタプルを定義する	collections.namedtuple(s, s2)
データフレームdfのcolカラムは何時か見る	df[col].dt.hour
リストxdataとリストydataの折れ線グラフに、大きさnの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markersize=n)
オリベドラブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
折れ線グラフに丸マーカーを使う	plt.plot(xdata, ydata, marker='o')
データ列xdataとリストydataの散布図に右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>')
現在が何秒か知る	datetime.date.today().second
数式として、eの展開を行う	sympy.expand(e)
折れ線グラフの色を紺碧に設定する	plt.plot(xdata, ydata, color='azure')
dsカラムのsを欠損値にする	ds.replace(s, np.nan)
リストxdataとリストydataの折れ線グラフを描画して、色を赤くする	plt.plot(xdata, ydata, color='r')
データフレームdfのリストalist列の最頻値	df[alist].mode()
オプションで、sの示すエンコーディングを使う	encoding = s
折れ線グラフの色をティールに設定する	plt.plot(xdata, ydata, color='teal')
sが全てアスキー文字か調べる	s.isascii()
nをn2乗に増やす	n **= n2
散布図に貝殻色のマーカーを使う	plt.plot(xdata, ydata, c='seashell')
データフレームdfのカラムcolのタイムゾーンを日本に設定する	df[col].tz_convert('Asia/Tokyo')
折れ線グラフのマーカーを三角にする	plt.plot(xdata, ydata, marker='^')
オプションで標準出力を使う	file = sys.stdout
デックdeqをポップする	deq.pop()
データフレームdfの相関行列ピアソンで	df.corr(method='pearson')
ターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
セットasetから全ての要素を取り除く	aset.clear()
配列xdataをオレンジレッド色のヒストグラムで描画する	plt.hist(xdata, color='orangered')
アンダーライン付きでsを出力する	print(f'\033[4m{s}\033[0m')
スラグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='slategray')
カウンタaCounterを下位n個カウント回数の少ない順番に列挙する	aCounter.most_common()[:-n-1:-1]
イテラブルxdataをパールゴールデンロッド色のヒストグラムとして描画する	plt.hist(xdata, color='palegoldenrod')
リストxdataをダークゴールデンロッド色のヒストグラムで描画する	plt.hist(xdata, color='darkgoldenrod')
リストxdataとリストydataについての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
リストalistを中央値でビン分割する	pd.qcut(alist, 2)
データフレームdfのカラムcol中に文字列valueがあるか	df[col].isin([value])
赤い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='r')
グレー色の折れ線を描画する	plt.plot(xdata, ydata, color='grey')
散布図にシーグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='seagreen')
sを末尾から空白で区切る	s.rsplit()
空のカウンタを新しく作る	collections.Counter()
3×3の単位行列を作る	np.identity(3)
リストxdataとリストydataの一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot')
nの三乗	n ** 3
リストxdataとリストydataについてダークゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
ダークオーキッド色のヒストグラムを用いてデータ列xdataを描画する	plt.hist(xdata, color='darkorchid')
ライトスレイグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightslategrey')
リストxdataについてのヒストグラムを描画して、半透明ににする	plt.hist(xdata, alpha=0.5)
xの絶対値	abs(x)
sとs2が等しいかどうか判定する	s == s2
リストxdataと配列ydataについての散布図をミディアムシアグリーン色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
散布図にスレートブルー色のマーカーを使う	plt.plot(xdata, ydata, c='slateblue')
リストxdataとリストydataの散布図をレモンシフォン色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x')
リストxdataとリストydataについて折れ線グラフを描画して、その色をコーラルに設定する	plt.plot(xdata, ydata, color='coral')
ダークスラテグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
データ列ds中にある文字列valueの合計を数える	ds.isin([value]).sum()
グラフにx=0の点線を付ける	plt.axvline(x=0, linestyle='dotted')
データフレームdfのカラムcolがx以下の行を抽出する	df[df[col] <= x]
リストxdataとリストydataの赤い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='r')
nがn2で割り切れないか調べる	n % n2 != 0
リストxdataと配列ydataについて破線グラフを描画して、色をダークグリーンとする	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
標準入力から1文字だけ読む	sys.stdin.read(1)
ゴーストホワイト色で配列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='ghostwhite')
ホットピンク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='hotpink')
パールバイオレットレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='palevioletred')
デックdeqのn番目からn2の要素	collections.deque(itertools.islice(deq, n, n2))
リストxdataとリストydataについて破線グラフを描画して、その色をフローラルホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
ホワイトスモーク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
ファイルfilenameから書き込みストリームを開き]、fとする	f = open(filename, mode='w')
オプションで改行コードをWindowsにする	newline = '\r\n'
折れ線の大バツマーカーを青くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, c='mediumaquamarine')
リストxdataとリストydataの折れ線グラフに、青い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
オブジェクトobjのtextプロパティを削除する	delattr(obj, text)
日時dtの年数	dt.year
データフレームdfのリストalistカラムの値が欠損値か調べる	df[alist].isna()
ファイルfilenameをBOM付きでオープンする]	open(filename, encoding='utf_8_sig')
リストxdataとリストydataについての散布図をホワイト色で描画する	plt.plot(xdata, ydata, c='white')
折れ線グラフに四角マーカーを使う	plt.plot(xdata, ydata, marker='s')
リストxdataとリストydataについてゴールド色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='gold')
要素をdeqの左側から取り出す	deq.popleft()
sを黄色で表示する	print(f'\033[33m{s}\033[0m')
データ列dsを10の位で丸める	ds.round(-1)
リストxdataとリストydataについてダークグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
dfとデータフレームdf2をカラムcolをキーにして左結合する	pd.merge(df, df2, on=col, how='left')
リストxdataをライトグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightgray')
リストxdataとリストydataについて散布図を描画して、マーカーの色をスカイブルーに設定する	plt.plot(xdata, ydata, c='skyblue')
データ列xdataとリストydataの破線グラフを描画して色をサンディーブラウンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
散布図にロージーブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='rosybrown')
データフレームdfの第一四分位数	df.quantile(0.25)
折れ線グラフの色をライトコーラルに設定する	plt.plot(xdata, ydata, color='lightcoral')
破線の色をイエローグリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
データフレームdfのn行目を削除する	df.drop(n, axis=0)
ライトゴールドロディイエロー色でイテラブルxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgoldenrodyellow')
sのサフィックスからs2を取り除く	s.removesuffix(s2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をスプリンググリーンに設定する	plt.plot(xdata, ydata, c='springgreen')
nがn2未満またはn3以上	n < n2 or n >= n3
折れ線グラフに星マーカーを使う	plt.plot(xdata, ydata, marker='*')
データ列dsをビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
リストxdataと配列ydataについて破線グラフを描画して、色をミスティローズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
ディムグレー色でリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='dimgray')
カウンタaCounterを辞書に変換する	dict(aCounter)
s全体がパターンpatternにマッチするか見る	re.fullmatch(pattern, s)
dfの空文字を未入力値に変換しドロップする	df.replace('', np.nan).dropna()
データ列xdataと数列ydataについての散布図をシアン色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
文字列element∉セットaset	element not in aset
リストiterableからn個、サンプリングする	random.sample(iterable, k=n)
sとs2を英大文字英小文字を無視して比較する	s.casefold() == s2.casefold()
ダークブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkblue')
ライトグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
データフレームdfの各カラムcol毎の最小値	df.groupby(col).min()
日時dtをsでフォーマットする	dt.strftime()
n年n2月n3日n4時を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
日付adateが何日か知る	adate.day
黒い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='k')
データフレームdfがどの程度、分散しているか見る	df.var()
リストxdataとリストydataについて散布図を描画して、マーカーの色をピーチパフに設定する	plt.plot(xdata, ydata, c='peachpuff')
配列xdataとデータ列ydataについての散布図を青色で描画する	plt.plot(xdata, ydata, c='blue')
リストxdataとリストydataの折れ線グラフに、青い菱形マーカーをプロットする	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
折れ線グラフの色をオーキッドに設定する	plt.plot(xdata, ydata, color='orchid')
dfの未入力値を直前の値で埋める	df.fillna(method='ffill')
チョコレート色でデータ列xdataについてのヒストグラムを描く	plt.hist(xdata, color='chocolate')
リストxdataとリストydataについての散布図をスチールブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
Pandasで、書式でsを日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
リストxdataをパパイヤウィップ色のヒストグラムで描画する	plt.hist(xdata, color='papayawhip')
ディープスカイブルー色として配列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='deepskyblue')
ダークゴールデンロッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgoldenrod')
colによってdf全体を並べてNaNを先頭に来るようにする	df.sort_values(by=col, na_position='first')
ファイルfilenameをオープンして]、追加ストリームを使う	open(filename, mode='a')
データフレームdfのcolからユニークな値を抽出し、リスト化する	df[col].unique().tolist()
データフレームdfの重複した行をマスクする	df.duplicated()
データフレームdfのカラムの名前をカラムcolからsに付け直す	df.rename(columns={col: s})
折れ線の色をライトグリーンにする	plt.plot(xdata, ydata, color='lightgreen')
本日が水曜日か	datetime.datetime.today().weekday() == 2
折れ線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategray')
文字列elementがセットasetのメンバーか調べる	element in aset
配列xdataとリストydataの破線グラフを描画して、その色をブランチドアーモンドにする	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
データフレームdfをリストalistで指定されたカラムによって降順にソートする	df.sort_values(by=alist, ascending=False)
リストxdataとリストydataについてパールバイオレットレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
リストxdataとリストydataについて黄色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellow')
ライトゴールドロディイエロー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
書き込むCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
リストxdataとリストydataについてミディアムスレートブルー色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
リストxdataとリストydataの点線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
タプルatupleの要素をfuncに適用した結果で並べる	sorted(atuple, key=func)
n年を日時に変換する	datetime.datetime(year=n, month=1, day=1)
リストxdataをスラグレー色のヒストグラムで描画する	plt.hist(xdata, color='slategray')
データフレームdfのリストalistカラム中に文字列valueがあるか調べる	df[alist].isin([value])
データ列xdataとリストydataの散布図を描画して、マーカーの色をハニーデューに変更する	plt.plot(xdata, ydata, c='honeydew')
リストxdataとリストydataについてライトスチールブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
{x2の符号を/xに}コピーする	math.copysign(x, x2)
本日が木曜日か調べる	datetime.datetime.today().weekday() == 3
リストxdataと配列ydataの破線を描画して、その色をナバホホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
データフレームdfの値が欠損値か調べる	df.isna()
リストxdataとリストydataについての散布図をアザミ色で描画する	plt.plot(xdata, ydata, c='thistle')
objが文字列か	isinstance(obj, str)
リストxdataとリストydataについての散布図をカーキ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
dtの時間	dt.time()
リストxdataとリストydataについて破線グラフを描画して、その色をアザミに設定する	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
sの先頭でパターンpatternに大文字・小文字を無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)
データ列ds中に文字列valueと文字列value2があるか調べる	ds.isin([value, value2])
データフレームdfのリストalistカラムを丸める	df[alist].round()
本日の日時	datetime.datetime.now()
リストxdataとリストydataについての散布図をライトスレイグレー色で描画する	plt.plot(xdata, ydata, c='lightslategrey')
リストxdataとリストydataについての散布図を赤色で描画する	plt.plot(xdata, ydata, c='red')
x,x2,x3をそれぞれn,n2,n3とする	x, x2, x3 = n, n2, n3
数列xdataとリストydataについて折れ線グラフを描画して、その色をグレー変える	plt.plot(xdata, ydata, color='gray')
データ列xdataとデータ列ydataについて折れ線を描画して、色をダークシアンに変更する	plt.plot(xdata, ydata, color='darkcyan')
オブジェクトobjは論理値クラスか調べる	isinstance(obj, bool)
配列xdataとリストydataについての散布図をスラグレー色として描画する	plt.plot(xdata, ydata, c='slategray')
リストxdataをダークシアン色のヒストグラムで描画する	plt.hist(xdata, color='darkcyan')
deqから最初のオブジェクトelementを取り出す	deq.remove(element)
リストxdataをオーキッド色のヒストグラムで描画する	plt.hist(xdata, color='orchid')
黒いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='k')
リストxdataとリストydataについてパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='purple')
下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v')
データ列xdataと配列ydataについてゴーストホワイト色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
ライトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
数列xdataをオリベドラブ色のヒストグラムを使って描画する	plt.hist(xdata, color='olivedrab')
ミディアムバイオレットレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumvioletred')
sの名前を持ち、リストalist3のプロパティを持った構造体を定義する	collections.namedtuple(s, names)
データフレームdfの列colをビン数nを使ってビン分割する	pd.cut(df[col], n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークレッドに設定する	plt.plot(xdata, ydata, color='darkred')
配列xdataと数列ydataについての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
リストalistから文字列elementを取り除く	alist.remove(element)
配列xdataと数列ydataについて散布図を描画して、マーカーの色をアンティークホワイトにする	plt.plot(xdata, ydata, c='antiquewhite')
リストxdataとリストydataについてベージュ色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='beige')
配列xdataと数列ydataについて散布図を描画してマーカーの色をピーチパフに変更する	plt.plot(xdata, ydata, c='peachpuff')
リストxdataとリストydataについてマルーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='maroon')
df中に日付データvalueとvalue2がいくつ存在するかカウントする	df.isin([value, value2]).sum()
データ列dsの欠損値を中央値で埋める	ds.fillna(ds.median())
リストxdataとリストydataについて折れ線グラフを描画して、その色をラベンダーに設定する	plt.plot(xdata, ydata, color='lavender')
リストxdataとリストydataについての散布図をミディアムシアグリーン色で描画する	plt.plot(xdata, ydata, c='mediumseagreen')
折れ線グラフのポイントマーカーを緑色に設定する	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
リストxdataと配列ydataについて破線グラフを描画してその色をネイビーにする	plt.plot(xdata, ydata, linestyle='dash', color='navy')
事前に大文字・小文字を無視してパターンpatternをコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
リストxdataとリストydataについて折れ線グラフを描画して、その色をブラウンに設定する	plt.plot(xdata, ydata, color='brown')
データフレームdfをリストalistで指定されたカラムによって降順に破壊的にソートする	df.sort_values(by=alist, ascending=False, inplace=True)
リストxdataとリストydataについて散布図を描画して、マーカーの色をアイボリーに設定する	plt.plot(xdata, ydata, c='ivory')
リストalist中の最初の文字列elementを探す	alist.index(element)
ライトゴールドロディイエロー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
リストxdataとリストydataについて折れ線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(xdata, ydata, color='lemonchiffon')
折れ線グラフの色をリネンに指定する	plt.plot(xdata, ydata, color='linen')
{リストalistを/ひとつ置きに}取り出す	alist[::2]
ゴーストホワイト色でイテラブルxdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='ghostwhite')
dfのalistカラムを千の位で丸める	df[alist].round(-3)
ドジャーブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='dodgerblue')
折れ線グラフの色をフクシアに設定する	plt.plot(xdata, ydata, color='fuchsia')
日付adateからn分、減算する	adate - datetime.timedelta(minutes=n)
タン色のヒストグラムでリストxdataを描画する	plt.hist(xdata, color='tan')
リストxdataとリストydataについての散布図をダークグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
ファイルfilenameの拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filename))[0]
折れ線グラフの星印を黄色くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
セットasetがセットaset2の部分集合か調べる	aset.issubset(aset2)
散布図にカラーコードrgbの星マーカーを使う	plt.plot(xdata, ydata, marker='*', c=rgb)
グラフで使うy座標の軸ラベルをsに設定する	plt.ylabel(s)
データフレームdfのカラムcolが正規表現sにマッチするデータを抽出する	df[df[col].str.match(s)]
イテラブルxdataとデータ列ydataについて散布図を描画して、マーカーの色をダークシアンに設定する	plt.plot(xdata, ydata, c='darkcyan')
リストxdataとイテラブルydataについて破線を描画して、その色をタンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='tan')
リストxdataと数列ydataについての散布図を小麦色を使って描画する	plt.plot(xdata, ydata, c='wheat')
折れ線グラフの右三角マーカーを青くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
フローラルホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
リストiterableから両端キューを新しく作る	collections.deque(iterable)
sのの中で大文字・小文字を無視したパターンpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトブルーに設定する	plt.plot(xdata, ydata, color='lightblue')
データフレームとしてfilenameを読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データフレームdfの値をdictで置き換える	df.replace(adict)
散布図にパウダーブルー色のマーカーを使う	plt.plot(xdata, ydata, c='powderblue')
ライムグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='limegreen')
辞書adictのキーの一覧	adict.keys()
数列xdataと数列ydataの散布図をスチールブルー色で描く	plt.plot(xdata, ydata, c='steelblue')
コマンドのn番目の引数を使う	sys.argv[n]
リストxdataをブランチドアーモンド色のヒストグラムで描画する	plt.hist(xdata, color='blanchedalmond')
ライトスチールブルー色としてリストxdataについての柱状図をプロットする	plt.hist(xdata, color='lightsteelblue')
s中のパターンpatternによるで置き換える	re.sub(pattern, repl, s)
リストxdataとリストydataの折れ線に、黒い△マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
スカイブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='skyblue')
折れ線グラフの色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, color='mediumaquamarine')
sのの中でパターンpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s)
xのアークコサインを計算する	math.acos(x)
xとx2から成るペア	(x, x2)
データ列xdataとデータ列ydataについて折れ線を描画してその色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, color='mediumorchid')
オレンジレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='orangered')
小麦色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='wheat')
リストxdataとリストydataについて破線グラフを描画して、その色をカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(xdata, ydata, color='lightsteelblue')
データフレームdfの先頭n行	df.head(n)
リストiterableを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
折れ線のポイントマーカーを赤くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')
リストxdataとリストydataについて散布図を描画して、マーカーの色をモカシンに設定する	plt.plot(xdata, ydata, c='moccasin')
折れ線グラフの色をロイヤルブルーに設定する	plt.plot(xdata, ydata, color='royalblue')
数列xdataとリストydataについての散布図をミディアムスレートブルー色で描画する	plt.plot(xdata, ydata, c='mediumslateblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgrey')
dfの記述統計量を算出する	df.describe()
リストiterableからカウンタを新規に作って、Xに代入する	X = collections.Counter(iterable)
リストxdataとリストydataの折れ線グラフに、黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、最大値	df.groupby([col, col2], as_index=False).max()
リストxdataをコーンフラワーブルー色の柱状グラフで描く	plt.hist(xdata, color='cornflowerblue')
alistが空	len(alist) == 0
クロスマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='x')
リストxdataとリストydataについてオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orchid')
ファイルfilenameを絶対パスに変換する	os.path.abspath(filename)
ライトグレー色として度数分布図を描く	plt.hist(xdata, color='lightgray')
nからn2までの整数リスト	list(range(n, n2+1))
配列xdataと配列ydataについて折れ線グラフを描画して、色をシアンに設定する	plt.plot(xdata, ydata, color='cyan')
折れ線のラベルをsに設定する	plt.plot(xdata, ydata, label=s)
0からnまでの整数列	list(range(n+1))
クリムゾン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='crimson')
データフレームdfのcolのsを未入力値にする	df[col].replace(s, np.nan)
ハリウッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='burlywood')
アイボリー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ivory')
Pandasで、フォーマットfmtでデータフレームdfのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
xの小数点以下'1'桁までを表示する	print(':.1f'.format(x))
リネン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='linen')
全ての句読点文字を使う	string.punctuation
ダークターコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
JSON形式のファイルfinを辞書にする	json.load(fin)
データ列dsを10の位で四捨五入して整数型にする	ds.round(-1).astype(int)
データフレームを表示するとき、表示可能な最大行数をnに設定する	pd.set_option('display.max_rows', n)
マゼンタ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='magenta')
リストxdataとリストydataの折れ線グラフに、赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')
データフレームdfを各col毎にグループ化して、平均値を見る	df.groupby(col).mean()
リストxdataとリストydataについて折れ線グラフを描画して、その色をグレーに設定する	plt.plot(xdata, ydata, color='gray')
レベッカパープル色としてリストxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='rebeccapurple')
散布図にダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D')
折れ線グラフの色をライトイエローに設定する	plt.plot(xdata, ydata, color='lightyellow')
リストxdataとリストydataの破線を描画して色をロイヤルブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
イテラブルxdataと配列ydataについての散布図をデピンク色で描く	plt.plot(xdata, ydata, c='deeppink')
日付adateが何月か知る	adate.month
日付adateと日付adate2の時間差を秒数で求める	(adate - adate2).total_seconds()
リストxdataとリストydataについて散布図を描画して、右三角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
グレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='grey')
オブジェクトobjがオブジェクトobj2と同一か判定する	obj is obj2
ファイルfilenameをオープンする]	open(filename)
リストxdataとリストydataについての散布図をライトシアン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
sがs2で開始する	s.startswith(s2)
データフレームdfのカラムcolについてヒストグラムを描画する	plt.hist(df[col])
散布図にミディアムブルー色のマーカーを使う	plt.plot(xdata, ydata, c='mediumblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークシアンに設定する	plt.plot(xdata, ydata, c='darkcyan')
スノー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='snow')
数列xdataとリストydataの折れ線グラフにサイズnの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markersize=n)
文字列elementがatupleの要素でないか確認する	element not in atuple
幅nでsを左寄せにする	s.ljust(n)
データフレームdfの重複した行を数える	df.duplicated().sum()
リストxdataとリストydataについて散布図を描画して丸マーカーの色をrgbにする	plt.plot(xdata, ydata, marker='o', c=rgb)
ファイルfilenameをsの示すエンコーディングで書き込み用にオープンする]	open(filename, mode='w', encoding=s)
データフレームdf中のカラムcolを中央値でビン分割する	pd.qcut(df[col], 2)
ds列の中央値	ds.median()
リストxdataとリストydataの折れ線に緑色のポイント印を描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
文字列elementがn回繰り返すイテラブル	itertools.repeat(element, n)
dfのn分位数	df.quantile(n/100)
折れ線の色をプラムに変更する	plt.plot(xdata, ydata, color='plum')
正規分布で乱数を計算する	random.normalvariate(mu=0.5, sigma=0.2)
sの接頭辞がs2か調べる	s.startswith(s2)
Pandasで、データ列dsをフォーマットで日付データにする	pd.to_datetime(ds, format='%Y-%m-%d')
散布図を重なりを見やすくパールゴールデンロッド色のマーカーで描画する	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
リストxdataとリストydataの黄色い折れ線グラフを描画する	plt.plot(xdata, ydata, color='y')
dfから重複したデータを消す	df.drop_duplicates()
辞書adictをJSON形式でファイル出力foutに保存する	json.dump(adict, fout, ensure_ascii=False)
nが1、もしくは2	n == 1 or n == 2
リストxdataとリストydataについて破線グラフを描画して、その色をオールドレースに設定する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
リストxdataとリストydataについて散布図を描画して、マーカーの色をアザミに設定する	plt.plot(xdata, ydata, c='thistle')
データフレームdfのリストalistカラムの欠損値を最小値に設定する	df[alist].fillna(df[alist].min())
リストxdataとリストydataについて散布図を描画して、マーカーの色をゴールデンロッドに設定する	plt.plot(xdata, ydata, c='goldenrod')
数列xdataとリストydataについての散布図をグレー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='gray', alpha=0.5)
データフレームdfのリストalistカラムの母標準偏差	df[alist].std(ddof=0)
辞書adictの項目名一覧を見る	list(adict)
ミディアムパープル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumpurple')
破線グラフの色をフクシアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
リストxdataとリストydataの折れ線グラフに、赤いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')
パパイヤウィップ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='papayawhip')
折れ線グラフのポイントマーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='.', markersize=n)
オレンジ色として散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='orange', alpha=0.5)
アクアマリン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='aquamarine')
keyが辞書adictに存在するか調べる	key not in adict
ロイヤルブルー色で数列xdataについての柱状図を描画する	plt.hist(xdata, color='royalblue')
ファイルパスfilenameをバイナリモードでオープンする]	open(filename, mode='rb')
折れ線グラフの丸印を黄色くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
セットasetに含まれ、セットaset2に含まれない集合	aset.difference(aset2)
辞書adictからカウンタを新規に作る	collections.Counter(adict)
nがn2の倍数でないか調べる	n % n2 != 0
リストxdataとリストydataについての散布図をアクアマリン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
データ列dsのsを欠損値に変換する	ds.replace(s, np.nan)
破線グラフの色をミディアムブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
sを空白で区切って整数リストに変換する	map(int, s.split())
折れ線グラフの左三角マーカーを黒くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
数列xdataと配列ydataの破線グラフを描画してその色をダークバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
破線グラフの色をサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
正規表現を使う	import re
データフレームdfのalist列の未入力値を最小値で置き換える	df[alist].fillna(df[alist].min())
xの双曲線正接の逆数を求める	math.atanh(x)
辞書adictのkeyを文字列elementに設定する	adict[key] = element
データフレームdfのリストalistカラムが正規分布からどの程度、尖っているか見る	df[alist].skew()
sをコロンによって区切る	s.split(':')
耐火レンガ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='firebrick')
数列xdataをライトスレイグレー色のヒストグラムで描く	plt.hist(xdata, color='lightslategray')
折れ線グラフの色をラベンダーブラッシュにセットする	plt.plot(xdata, ydata, color='lavenderblush')
リストxdataとリストydataの折れ線グラフに下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
折れ線グラフのバツマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
ダークシアグリーン色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
レモンシフォン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lemonchiffon')
データフレームdfのリストalist列の中央値	df[alist].median()
Pandasでfilenameを読み込む	pd.read_csv(filename, sep=',')
表データを使う	import pandas as pd
リストxdataとリストydataについてダークカーキ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
オブジェクトobjは文字列クラスか調べる	isinstance(obj, str)
散布図にブランチドアーモンド色のマーカーを使う	plt.plot(xdata, ydata, c='blanchedalmond')
グラフ中のフォントをsに指定する	sns.set(font=s)
リストxdataとリストydataについてミディアムスプリンググリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
淡いピンク色色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightpink')
ディムグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dimgray')
データフレームdfの最頻値	df.mode()
xの逆正接	math.atan(x)
イテラブルxdataとデータ列ydataの折れ線に、黄色い右三角印を描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
折れ線グラフの色をオリーブに設定する	plt.plot(xdata, ydata, color='olive')
リストxdataとリストydataについての散布図をカデットブルー色で描画する	plt.plot(xdata, ydata, c='cadetblue')
データフレームdfをcolとカラムcol2の組み合わせ毎に集約して、列挙する	[(name, group) for name, group in df.groupby([col, col2])]
散布図をオレンジレッド色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='orangered')
フローラルホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='floralwhite')
折れ線グラフの色をアリスブルーに設定する	plt.plot(xdata, ydata, color='aliceblue')
nがn2より小さいか調べる	n < n2
イテラブルxdataと数列ydataについての散布図をシーグリーン色を使って描画する	plt.plot(xdata, ydata, c='seagreen')
スレートブルー色でリストxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='slateblue')
配列xdataと数列ydataについて破線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
sがアスキー文字	s.isascii()
リストxdataをダークグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkgrey')
オレンジレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='orangered')
リストxdataと数列ydataの散布図を描画して、マーカーの色をライトスカイブルーにする	plt.plot(xdata, ydata, c='lightskyblue')
nが-9以上、9以下か調べる	-9 <= n <= 9
日時dtを数値に変換する	dt.timestamp()
データフレームdfからtyだけ抽出する	df.select_dtypes(ty)
エクセルファイルからデータフレームを読み込む	pd.read_excel(filename)
nからn2未満の間でn3ステップの整数群からランダムな整数を生成する	random.randrange(n, n2, n3)
データフレームdfの最頻値の出現回数	df.freq()
散布図にライトスカイブルー色のマーカーを使う	plt.plot(xdata, ydata, c='lightskyblue')
タプルatupleの総和を算出する	sum(atuple)
sの中からパターンpatternにマッチする文字列を探す	re.search(pattern, s)
リストxdataとリストydataについて破線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
標準出力のバッファをフラッシュする	sys.stdout.flush()
ディムグレー色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
itertoolsモジュールをインポートする	import itertools
データ列dsの欠損値を最小値に設定する	ds.fillna(ds.min())
リストxdataとリストydataについての散布図をコーラル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='coral', alpha=0.5)
折れ線グラフの色をデピンクに設定する	plt.plot(xdata, ydata, color='deeppink')
リストydataをx軸として折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
散布図にミディアムターコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='mediumturquoise')
リストxdataとリストydataについての散布図をラベンダーブラッシュ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
配列xdataとデータ列ydataの破線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
折れ線グラフに下三角マーカーを使用する	plt.plot(xdata, ydata, marker='v')
データフレームdfをカラムcol毎にグループ化して、カラムcol2の関数適用した値を求める	df.groupby(col)[col2].agg(func)
小麦色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='wheat')
dfのcol列とデータフレームdf2のカラムcol2をキーにして左ジョインする	pd.merge(df, df2, left_on=col, right_on=col2, how='left')
リストxdataを青色のヒストグラムで描画する	plt.hist(xdata, color='blue')
ライトスカイブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightskyblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をティールに設定する	plt.plot(xdata, ydata, color='teal')
ファイルfilenameをEUCで書き込み用にオープンする]	open(filename, mode='w', encoding='euc_jp')
nとn2の値を足してnに代入する	n += n2
チョコレート色で重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
オーキッド色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='orchid')
データフレームdfのNaNを最小値に増やす	df.fillna(df.min())
リストxdataとリストydataについてダークターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
リストxdataとリストydataの折れ線グラフを描画して、色をマゼンタにする	plt.plot(xdata, ydata, color='magenta')
データ列xdataとリストydataについての散布図にカラーコードrgbの大バツ印を描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
データフレームdfのcolカラムとcol2毎の合計を算出する	df.groupby([col, col2], as_index=False).sum()
リネン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='linen')
散布図にライトグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='lightseagreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をスレートブルーに設定する	plt.plot(xdata, ydata, color='slateblue')
オブジェクトelement一つのタプルを得る	(element,)
イテラブルxdataと配列ydataの破線を描画して、その色をフクシアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
リストxdataとリストydataについての散布図に赤色の星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', c='r')
カラーコードrgbのバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
ヒストグラムをハニーデュー色で描画する	plt.hist(xdata, color='honeydew')
散布図にダークオリーブグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='darkolivegreen')
sが空白からなるかどうか	s.isspace()
折れ線グラフの色をライトブルーに設定する	plt.plot(xdata, ydata, color='lightblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトコーラルに設定する	plt.plot(xdata, ydata, c='lightcoral')
配列xdataとリストydataについてダークシアン色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
データ列xdataをローングリーン色のヒストグラムで描画する	plt.hist(xdata, color='lawngreen')
arrayを等間隔でn個にビン分割する	pd.cut(array, n)
散布図にカラーコードrgbのポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c=rgb)
ローングリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')
ドジャーブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dodgerblue')
折れ線グラフの星マーカーを黒くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')
データフレームdfのcolカラムを配列に変換する	df[col].values
データ列xdataとリストydataについて破線グラフを描画してその色をスプリンググリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
データ列dsの欠損値を最大値で埋める	ds.fillna(ds.max())
事前にパターンpatternをコンパイルする	re.compile(pattern)
オプションで、ヘッダをnamesに設定する	header = names
モカシン色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
Pandasでフォーマットfmtでsを日付データに変換する	pd.to_datetime(s, format=fmt)
折れ線グラフの色をターコイズに設定する	plt.plot(xdata, ydata, color='turquoise')
データフレームdfのカラムcolが何日か見る	df[col].dt.day
JSONファイルのファイル入力finを読み込んでdataとする	data = json.load(fin)
ダークオレンジ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
数列xdataとリストydataについての散布図に丸印をプロットする	plt.plot(xdata, ydata, marker='o')
リストxdataをブラウン色のヒストグラムで描画する	plt.hist(xdata, color='brown')
dfからリストalistで指定されたデータ型の列のみ抽出する	df.select_dtypes(include=alist)
リストxdataとリストydataについての散布図をドジャーブルー色で描画する	plt.plot(xdata, ydata, c='dodgerblue')
リストxdataとリストydataについて破線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
重なりを見やすくアリスブルー色として散布図を描画する	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
リストxdataとリストydataについての散布図をグレー色で描画する	plt.plot(xdata, ydata, c='gray')
配列xdataとリストydataについて散布図を描画して四角印の色をカラーコードrgbに指定する	plt.plot(xdata, ydata, marker='s', c=rgb)
データフレームdfのカラムcolの空文字をドロップする	df[col].replace('', np.nan).dropna()
タプルatupleの長さ	len(atuple)
重なりを見やすく散布図をロージーブラウン色のマーカーとして描画する	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
パウダーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
データ列xdataとリストydataの散布図をインディアンレッド色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed')
リストxdataとリストydataの黒い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
リストalistの末尾のn要素を取り除く	alist[:-n]
スレートブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
サドルブラウン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
リストalistのn番目の	alist[n]
sからs2を全て取り除く	s.replace(s2, '')
数式として、zについてeの積分を求める	sympy.integrate(e, z)
デックdeqの最初の要素を使う	deq[0]
sを緑色にする	f'\033[32m{s}\033[0m'
リストiterableをクラスCのインスタンスに変換する	C._make(iterable)  # issubclass(C, tuple)
赤い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='r')
イテラブルxdataとリストydataについてダークスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
数列xdataとデータ列ydataについての散布図をブルーバイオレット色として重なりを見やすく描く	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
ファイルfilenameが存在するか調べる	os.path.exists(filename)
空白	' '
リストxdataとリストydataの折れ線グラフに、青い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
xを実部、x2を虚部とした複素数	complex(x, x2)
最大長nの両端キューを新しく作る	X = collections.deque(maxlen=n)
散布図を貝殻色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、黄色い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
黒い一点鎖線を描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
sを積極的ににする	s.casefold()
ライトスレイグレー色で度数分布図を描画する	plt.hist(xdata, color='lightslategray')
ライトサーモン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
データフレームdfのリストalistカラムの第一四分位数	df[alist].quantile(0.25)
リストxdataとイテラブルydataについて散布図を描画して、マーカーの色をオレンジにする	plt.plot(xdata, ydata, c='orange')
リストxdataとリストydataの折れ線グラフに、線幅nの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
ファイルfilenameをUTF8で書き込み用にオープンする]	open(filename, mode='w', encoding='utf-8')
リストxdataとリストydataについて破線グラフを描画して、色をドジャーブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
タン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='tan')
黒色の下三角印で散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
dsカラム内にいくつvalueが存在するか数える	ds.isin([value]).sum()
アリスブルー色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='aliceblue')
データフレームdfのリストalistカラム中にあるvalueの合計を求める	df[alist].isin([value]).sum()
iterableに列iterable2を続けたイテラブルを求める	itertools.chain(iterable, iterable2)
データフレームdf中にいくつ欠損値があるか数える	df.isna().sum()
配列xdataとリストydataについてオールドレース色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
コマンドの第一引数を得る	sys.argv[1]
dfの中で、colとcol2カラムの重複を見る	df.duplicated(subset=[col1, col2])
配列xdataとデータ列ydataについてミディアムパープル色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
データフレームdfのcolの25パーセンタイル	df[col].quantile(0.25)
リストxdataと数列ydataの散布図を描画してマーカーの色をスチールブルーに変更する	plt.plot(xdata, ydata, c='steelblue')
ライトグリーン色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='lightseagreen')
xの小数点以下'3'桁までの文字列に変換する	':.3f'.format(x)
折れ線グラフの色をチョコレートに設定する	plt.plot(xdata, ydata, color='chocolate')
データフレームdf中にいくつ文字列valueが存在するか数える	df.isin([value]).sum()
Pandasで、データフレームdfのcollを日付データに変換する	pd.to_datetime(df[col])
sの小文字を英大文字に変換する	s.upper()
スチールブルー色でデータ列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='steelblue')
折れ線グラフの色をsに設定する	plt.plot(xdata, ydata, color=s)
TSVファイルfilenameを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
qの分母	q.denominator
スラグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
パールゴールデンロッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='palegoldenrod')
配列xdataをカデットブルー色の度数分布図で描画する	plt.hist(xdata, color='cadetblue')
オブジェクトobjのイテレータ	iter(obj)
xとx2の両方ともnとする	x = x2 = n
文字列elementがタプルatupleの要素か調べる	element in atuple
日時dtを浮動小数点数に変換する	dt.timestamp()
xを論理値に変換する	bool(x)
リストxdataとリストydataについて破線グラフを描画して、その色をホワイトスモークに設定する	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
スプリンググリーン色のヒストグラムでリストxdataを描画する	plt.hist(xdata, color='springgreen')
グラフに鉛直方向の一点鎖線をつける	plt.axvline(x=0, linestyle='dashbot')
データフレームdfとデータフレームdf2を横方向にマージする	pd.merge(df, df2)
データ列dsの未入力値を平均で補う	ds.fillna(ds.mean())
配列xdataをラベンダーブラッシュ色のヒストグラムで描く	plt.hist(xdata, color='lavenderblush')
リストxdataとリストydataについての散布図をロイヤルブルー色で描く	plt.plot(xdata, ydata, c='royalblue')
折れ線グラフの色をミディアムターコイズに設定する	plt.plot(xdata, ydata, color='mediumturquoise')
折れ線グラフを破線とする	plt.plot(xdata, ydata, linestyle='dashed')
リストxdataとイテラブルydataについての散布図に黒い丸印を描画する	plt.plot(xdata, ydata, marker='o', c='k')
配列xdataとリストydataの折れ線グラフをプロットする	plt.plot(xdata, ydata)
リストiterableのコンビネーション	itertools.combinations(iterable, n)
データフレームdfをカラムcol毎にグループ化して、カラムcol2の合計を求める	df.groupby(col)[col2].sum()
重なりを見やすく配列xdataと配列ydataの散布図をチョコレート色として描く	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
折れ線グラフのポイントマーカーを青くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
リストxdataとリストydataについての散布図をダークスレートブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
リストxdataとリストydataについての散布図に下三角印をプロットする	plt.plot(xdata, ydata, marker='v')
データ列dsをビン分割する	pd.cut(ds, alist)
十六進sをバイト列に変換する	int(s, 16).to_bytes(length=n, byteorder='big')
データフレームdfのカラムcolがxの行を抽出する	df[df[col] == x]
データフレームdfのの中で、カラムcolとカラムcol2の重複を削除する	df.drop_duplicates(subset=col)
xの余弦	math.cos(x)
重なりを見やすくイテラブルxdataと配列ydataについての散布図をライトスレイグレー色として描く	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をモカシンに設定する	plt.plot(xdata, ydata, color='moccasin')
オプションで、欠損値を先頭にする	na_position = 'first'
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
predicatefuncを適用したとき真とならないリストiterableの部分	itertools.dropwhile(predicatefunc, iterable)
データ列dsの分	ds.dt.minute
タプルatupleの先頭を取り除く	atuple[1:]
セットasetとセットaset2の対称差集合	aset.symmetric_difference(aset2)
ロージーブラウン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
ライムグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='limegreen')
配列xdataとデータ列ydataについて破線を描画して、その色をダークオリーブグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
リストxdataとリストydataについての散布図をライトグレー色で描画する	plt.plot(xdata, ydata, c='lightgrey')
リネン色のマーカーを用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='linen', alpha=0.5)
ゴールド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='gold')
nとn2の商	n / n2
折れ線グラフの色をスプリンググリーンに設定する	plt.plot(xdata, ydata, color='springgreen')
リストxdataについてのヒストグラムを描画する際に半透明ににする	plt.hist(xdata, alpha=0.5)
データフレームdfのcolの欠損値を最小値で埋める	df[col].fillna(df[col].min())
リストiterableをイミュータブルな集合に変換する	frozenset(iterable)
データフレームを表示するとき、n列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)
リストxdataとリストydataについて破線グラフを描画して、色をパレットトルコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
リストxdataをドジャーブルー色のヒストグラムで描画する	plt.hist(xdata, color='dodgerblue')
ファイルfilenameから書き込みストリームをオープンして]、fとする	f = open(filename, mode='w')
データフレームdfのcolがsが含まれないデータを抽出する	df[not df[col].str.contains(s)]
リストxdataとリストydataについて破線グラフを描画して、その色をリネンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='linen')
オリベドラブ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='olivedrab')
ブランチドアーモンド色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
dsを1と0にマップする	ds.map({s: 1, s2: 0})
補足を入れる	plt.legend()
リストxdataとリストydataについての散布図に三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
散布図にミッドナイトブルー色のマーカーを使う	plt.plot(xdata, ydata, c='midnightblue')
破線グラフの色をライトシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
数列xdataとリストydataについてブルーバイオレット色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
リストxdataと配列ydataの散布図をライトグリーン色で描画する	plt.plot(xdata, ydata, c='lightseagreen')
リストxdataとリストydataについてライトシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
リストxdataとリストydataについての散布図をダークサーモン色で描画する	plt.plot(xdata, ydata, c='darksalmon')
数列xdataと数列ydataについて破線グラフを描画して色をオールドレースに設定する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
正規表現を用いて、sのパターンpatternによるで置き換える	re.sub(pattern, repl, s)
データフレームdfのcolの月	df[col].dt.month
散布図にシエナ色のマーカーを使う	plt.plot(xdata, ydata, c='sienna')
アイボリー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='ivory')
ミディアムオーキッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumorchid')
配列xdataとリストydataについて散布図を描画して、マーカーの色をスカイブルーに指定する	plt.plot(xdata, ydata, c='skyblue')
リストxdataとリストydataについての散布図をサドルブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
散布図にダークカーキ色のマーカーを使う	plt.plot(xdata, ydata, c='darkkhaki')
散布図に黒い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='k')
配列xdataとイテラブルydataの折れ線グラフに、青色の下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
リストxdataとリストydataについて青色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blue')
スピアマンとしてデータフレームdfの相関行列	df.corr(method='spearman')
ライトスレイグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightslategrey')
イテラブルxdataと数列ydataの折れ線グラフに大きさnの丸印を描く	plt.plot(xdata, ydata, marker='o', markersize=n)
nが1、もしくは2か調べる	n == 1 or n == 2
数列xdataとリストydataの破線グラフを描画して、その色をライトグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
ハニーデュー色を用いてリストxdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='honeydew')
グラフの背景色を暗くする	sns.set(style='darkgrid')
リストxdataと配列ydataについての散布図をスラグレー色で描画する	plt.plot(xdata, ydata, c='slategrey')
数式として、eを数値計算する	float(e)
リストiterableからひとつランダムに選ぶ	random.choice(iterable)
リストxdataとリストydataについて散布図を描画して、マーカーの色をレベッカパープルに設定する	plt.plot(xdata, ydata, c='rebeccapurple')
配列xdataとリストydataについてブランチドアーモンド色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
データフレームdfをcolとcol2の組み合わせ毎にグループ化して、平均値	df.groupby([col, col2], as_index=False).mean()
リストxdataとイテラブルydataについての散布図を貝殻色でプロットする	plt.plot(xdata, ydata, c='seashell')
コマンドの第一引数を使う	sys.argv[1]
セットasetの全ての要素がセットaset2に含まれるか調べる	aset.issubset(aset2)
データフレームdfの列colのNaNを平均値に変更する	df[col].fillna(df[col].mean())
カウンタaCounterの項目一覧	aCounter.keys()
adateからn時間分、減らす	adate - datetime.timedelta(hours=n)
サイコロ	random.randint(1, 6)
データフレームdfのカラムcolとカラムcol2毎の最小値	df.groupby([col, col2], as_index=False).min()
データ列xdataとリストydataの破線グラフを描画して、色をパウダーブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトグリーンに設定する	plt.plot(xdata, ydata, c='lightgreen')
ベージュ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='beige', alpha=0.5)
リストxdataをタン色のヒストグラムで描画する	plt.hist(xdata, color='tan')
グリーン色で散布図を描画する	plt.plot(xdata, ydata, c='green')
一点鎖線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をサドルブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
数列xdataとリストydataの折れ線グラフを描画して、破線にする	plt.plot(xdata, ydata, linestyle='dashed')
パパイヤウィップ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='papayawhip')
aとa2を好き	a.index = a / 1
adictの値一覧	adict.values()
数式として、eの簡略化を行う	sympy.sympify(e)
日時dtからn週間分、減算する	dt - datetime.timedelta(weeks=n)
ティール色の折れ線グラフを描く	plt.plot(xdata, ydata, color='teal')
リストxdataとリストydataについて破線グラフを描画して、その色をデピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')
レベッカパープル色で重なりを見やすく配列xdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
配列xdataとリストydataの折れ線グラフに、黒い▼マーカーをプロットする	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
リストxdataと配列ydataの破線グラフを描画してその色をアリスブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
データフレームdfのリストalistカラムのヒートマップを描画する	sns.heatmap(df[alist].corr())
リストxdataをライトサーモン色のヒストグラムで描画する	plt.hist(xdata, color='lightsalmon')
n2行n列の二次元リスト	[[0] * n for _ in range(n2)]
リストxdataとリストydataについて破線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
リストxdataとリストydataについての散布図をプラム色で描画する	plt.plot(xdata, ydata, c='plum')
sが全て数字か調べる	s.isdigit()
dfの列colの尖度を求める	df[col].skew()
散布図を赤色の大バツマーカーで描く	plt.plot(xdata, ydata, marker='X', c='r')
ダークマゼンタ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='darkmagenta')
散布図に青色のマーカーを使う	plt.plot(xdata, ydata, c='blue')
リストxdataとリストydataについて破線グラフを描画して、その色をシャルトルーズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
プログラムの実行を異常終了する	sys.exit(1)
ペールグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
エクセルデータファイルfilenameからn番目のシートをデータフレームとして読む	pd.read_excel(filename, sheet_name=n)
散布図にカラーコードrgbのダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c=rgb)
データフレームdfが重複しているか調べる	df.duplicated()
ミディアムバイオレットレッド色でデータ列xdataについての度数分布図を描画する	plt.hist(xdata, color='mediumvioletred')
sを長さnでセンタリングにする	s.center(n)
リストxdataとリストydataについてモカシン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
リストalistの要素を逆順にする	alist[::-1]
数式として、zについてeの微分を行う	sympy.diff(e, z)
リストxdataと配列ydataについて折れ線グラフを描画して、色をクリムゾンに設定する	plt.plot(xdata, ydata, color='crimson')
データフレームdfの数値を整数に四捨五入して、インプレイスする	df.round(inplace=True)
小麦色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='wheat')
リストxdataと配列ydataについてピンク色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pink')
リストxdataをライトスチールブルー色のヒストグラムで描画する	plt.hist(xdata, color='lightsteelblue')
ライム色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lime', alpha=0.5)
破線グラフの色をロージーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
ファイルパスfilenameを読み込み用にオープンして]fとする	f = open(filename, mode='r')
ダークサーモン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darksalmon')
データ列xdataとリストydataについて散布図を描画して色をゴールドに設定する	plt.plot(xdata, ydata, c='gold')
dfのカラムcolの曜日が何日目か確認する	df[col].dt.dayofweek
重なりを見やすくロージーブラウン色としてリストxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
データ列dsが正規分布からどの程度、歪んでいるか見る	ds.kurt()
リストxdataとリストydataについて散布図を描画して色をコーンズシルクにする	plt.plot(xdata, ydata, c='cornsilk')
グラフで使うフォントをsに指定する	sns.set(font=s)
リストxdataとリストydataについての散布図をターコイズ色で描画する	plt.plot(xdata, ydata, c='turquoise')
カーキ色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='khaki')
リストxdataとリストydataについて破線グラフを描画して、その色をクリムゾンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
リストxdataとリストydataの一点鎖線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
ダークグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkgrey')
リストxdataとリストydataの折れ線グラフに、赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')
デックdeqの大きさ	len(deq)
データフレームdfを__Y__によってソートする	df.sort_values(by=col)
dfの列colのNaNを直後の値に設定する	df[col].fillna(method='bfill')
スチールブルー色として散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
ブラック色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='black')
fにsを書き込む	f.write(s)
辞書adictから新規にカウンタを作る	collections.Counter(adict)
折れ線グラフの色をアクアに設定する	plt.plot(xdata, ydata, color='aqua')
データフレームdfとデータフレームdf2をカラムcolをキーにして内部結合する	pd.merge(df, df2, on=col, how='inner')
リストxdataとリストydataについてナバホホワイト色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
リストxdataとリストydataについて折れ線グラフを描画して、その色をオリーブに設定する	plt.plot(xdata, ydata, color='olive')
アクアマリン色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
破線グラフの色をドジャーブルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
散布図にイエローグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='yellowgreen')
B(イテレータ)をA(イテレータ)に続けて繰り返す	for X in itertools.chain(A, B):
データ列xdataとデータ列ydataについて散布図を描画して、マーカーの色をライトサーモンに設定する	plt.plot(xdata, ydata, c='lightsalmon')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, color='mediumspringgreen')
リストxdataをアリスブルー色の柱状グラフとして描画する	plt.hist(xdata, color='aliceblue')
グラフにy=0の実線を付ける	plt.axhline(y=0, linestyle='solid')
データフレームdfを10の位で丸める	df.round(-1)
グレーを用いてヒストグラムを描画する	plt.hist(xdata, color='grey')
リストxdataとリストydataについて散布図を描画して、マーカーの色をディムグレーに設定する	plt.plot(xdata, ydata, c='dimgray')
散布図にライトグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightgray')
リストxdataとデータ列ydataについてrgbの破線グラフを描く	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
日時dtが日曜日かどうか	dt.weekday() == 6
リストxdataとイテラブルydataの散布図を描画して、▲印の色をカラーコードrgbに指定する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストxdataとリストydataについての散布図をパールバイオレットレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
リストxdataと配列ydataについてダークブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
数式として、zについてeを積分する	sympy.integrate(e, z)
ベージュ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='beige')
リストxdataとデータ列ydataについての散布図をベージュ色を使ってプロットする	plt.plot(xdata, ydata, c='beige')
zが無限大に近づくときのeの極限値を求める	sympy.limit(e, z, oo)
オプションで、スキップするフッタをnに増やす	skipfooter = n
数式として、eを部分分数に展開する	sympy.apart(e)
数式として、eを簡単にする	sympy.sympify(e)
オリベドラブ色を用いて散布図を描画する	plt.plot(xdata, ydata, c='olivedrab')
ロイヤルブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='royalblue')
平均x標準偏差x2の正規分布で乱数を得る	random.normalvariate(x, x2)
マルーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='maroon')
データフレームdfをJSONLファイルfilenameに保存する	df.to_excel(filename)
プラム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='plum')
破線グラフの色を貝殻に設定する	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
ライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
データ列xdataとデータ列ydataについて青色の点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color='b')
ミディアムオーキッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
データフレームdfをカラムcol毎にグループ化して、標準偏差を求める	df.groupby(col).std()
シャルトルーズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='chartreuse')
adateからn分、減算する	adate - datetime.timedelta(minutes=n)
dfのcolを十の位で四捨五入する	df[col].round(-1)
インディアンレッド色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indianred')
破線グラフの色をチョコレートに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, color='midnightblue')
ダークレッド色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkred')
平均x、標準偏差x2の正規分布で疑似乱数を生成する	random.normalvariate(x, x2)
標準入力を得る	sys.stdin
イテラブルxdataとリストydataについての散布図をオレンジレッド色で描画する	plt.plot(xdata, ydata, c='orangered')
ライトスチールブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightsteelblue')
dtをISO書式の文字列に変換する	dt.isoformat()
折れ線グラフの色をトマトに設定する	plt.plot(xdata, ydata, color='tomato')
リストxdataとリストydataについての散布図をダークカーキ色で描画する	plt.plot(xdata, ydata, c='darkkhaki')
s中のs2を最大n回だけs3に置き換える	s.replace(s2, s3, n)
標準入力から1行だけ読む	sys.stdin.readline()
リストxdataとリストydataについてコーンフラワーブルー色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
折れ線グラフの丸印の大きさをnに設定する	plt.plot(xdata, ydata, marker='o', markersize=n)
破線の色をラベンダーブラッシュにする	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
sが全てアルファベットか調べる	s.isalpha()
折れ線グラフの色をグリーンイエローに設定する	plt.plot(xdata, ydata, color='greenyellow')
ライトイエロー色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
アイボリー色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='ivory')
リストxdataとリストydataについて散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
アイボリー色の折れ線を描く	plt.plot(xdata, ydata, color='ivory')
ブラック色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='black')
フローラルホワイト色のヒストグラムを用いてイテラブルxdataを描画する	plt.hist(xdata, color='floralwhite')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, color='mediumseagreen')
xを整数型にする	int(x)
dfのcolの未入力値を最大値に設定する	df[col].fillna(df[col].max())
リストxdataとリストydataについての散布図をパパイヤウィップ色で描画する	plt.plot(xdata, ydata, c='papayawhip')
データフレームdfのカラムcolの時を使う	df[col].dt.hour
要素ひとつのりスト	[element]
リストxdataと配列ydataについてダーク・スラテグレー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
データフレームdfの欠損値を中央値に設定する	df.fillna(df.median())
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, c='darkgoldenrod')
xが有限か調べる	math.isfinite(x)
リストxdataとリストydataについて破線グラフを描画して、その色をライトコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
数列xdataをオリーブ色の柱状図としてプロットする	plt.hist(xdata, color='olive')
リストalist中の最小値	min(alist)
xとx2をそれぞれnとn2とする	x, x2 = n, n2
日時dtは何時か知る	dt.hour
nがn2以下か調べる	n <= n2
散布図にサンディーブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='sandybrown')
リストxdataと数列ydataの散布図をダークゴールデンロッド色として描画する	plt.plot(xdata, ydata, c='darkgoldenrod')
dfのcolカラムをリストにする	df[col].values.tolist()
チョコレート色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='chocolate')
ライトスカイブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightskyblue')
データフレームdfの欠損値をxに設定する	df.fillna(x)
トマト色でデータ列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='tomato')
リストxdataとリストydataの折れ線グラフに星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
グラフを綺麗にする	import seaborn as sns
シアン色でリストxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='cyan')
リストxdataとリストydataについて折れ線グラフを描画して、その色をスノーに設定する	plt.plot(xdata, ydata, color='snow')
ゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
sのn番目とn2番目の間にs2が含まれないか調べる	s.find(s2, start=n, end=n2) == -1
データフレームdfをカラムcolとカラムcol2によって降順にソートする	df.sort_values(by=[col,col2], ascending=False)
破線グラフの色をオールドレースに設定する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
リストxdataとリストydataについて破線グラフを描画して、その色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
sのHEXから浮動小数点数に変換する	float.fromhex(s)
折れ線グラフの色をアンティークホワイトに設定する	plt.plot(xdata, ydata, color='antiquewhite')
s2パターンのsを日時に変換する	datetime.datetime.strptime(s, s2)
日時dtをn月前に戻す	dt - datetime.timedelta(months=n)
折れ線グラフの色をライトシアンに設定する	plt.plot(xdata, ydata, color='lightcyan')
折れ線グラフの色をローングリーンに設定する	plt.plot(xdata, ydata, color='lawngreen')
xはx2である	x = x2
保存するCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
正規表現でsのの中でASCII限定のパターンにマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
リストxdataとリストydataについて折れ線グラフを描画して、その色をミントクリームに設定する	plt.plot(xdata, ydata, color='mintcream')
データフレームdfのリストalistカラム中にある文字列valueと文字列value2の合計を数える	df[alist].isin([value, value2]).sum()
日時dtが何曜日か知る	dt.weekday()
リストalistのn番目からn2番目までの部分	alist[n:n2]
既存のファイルfilenameをBOM付きで追加できるようにオープンする]	open(filename, mode='a', encoding='utf_8_sig')
カデットブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
リストxdataとリストydataについての散布図をダークレッド色で描画する	plt.plot(xdata, ydata, c='darkred')
ライトスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
リストxdataをダークオレンジ色のヒストグラムで描画する	plt.hist(xdata, color='darkorange')
ファイルfilenameから追加ストリームをオープンして]、fとする	f = open(filename, mode='a')
xの小数点以下'1'桁までをプリントする	print(':.1f'.format(x))
sをカンマで区切る	s.split(',')
配列xdataをダークマゼンタ色の柱状図として描画する	plt.hist(xdata, color='darkmagenta')
折れ線グラフの色を黒くする	plt.plot(xdata, ydata, color='k')
ライトスカイブルー色の折れ線を描く	plt.plot(xdata, ydata, color='lightskyblue')
s2でsを二つに区切って、最初の文字列を使う	s.partition(s2)[0]
リストxdataとリストydataについての散布図をコーンズシルク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
オリーブ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='olive')
リストxdataについてのヒストグラムを描画する際に、透明度をxに設定する	plt.hist(xdata, alpha=x)
破線の色をライトグレーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
パパイヤウィップ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
フクシア色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
sをISO8601で日時にする	datetime.datetime.fromisoformat(s)
数列xdataと配列ydataについての散布図をミディアムスレートブルー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
破線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dash', color='red')
セットasetとセットaset2の共通部分を求める	aset.intersection(aset2)
ハニーデュー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
日時dtが何秒か知る	dt.second
dfをカラムcol毎にまとめて、グループの大きさを求める	df.groupby(col).size()
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムバイオレットレッドにセットする	plt.plot(xdata, ydata, color='mediumvioletred')
折れ線グラフにダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D')
数列xdataとデータ列ydataについて散布図を描画してマーカーの色をサンディーブラウンにする	plt.plot(xdata, ydata, c='sandybrown')
レベッカパープル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='rebeccapurple')
ファイルfilenameをSJISで書き込み用にオープンする]	open(filename, mode='w', encoding='shift_jis')
データフレームdfから数値データのみ抽出する	df.select_dtypes('number')
データフレームdfのcol列の文字列がsで始まらない行を抽出する	df[not df[col].str.startswith(s)]
データフレームdfの重複した行のみを抽出する	df[df.duplicated(keep=False)]
クリムゾン色を用いてデータ列xdataとリストydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
データ列dsが正規分布からどの程度、尖っているか見る	ds.skew()
データフレームdfをリストalistで与えられた列によって昇順にソートして、更新する	df.sort_values(by=alist, ascending=True, inplace=True)
ダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D')
ホワイト色の柱状グラフを使ってリストxdataを描く	plt.hist(xdata, color='white')
リストxdataとデータ列ydataの折れ線に、黄色い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
リストxdataとリストydataの折れ線グラフを描画して、アルファをxに設定する	plt.plot(xdata, ydata, alpha=x)
データ列dsのタイムゾーンを日本にセットする	ds.tz_convert('Asia/Tokyo')
データフレームdfのカテゴリデータの要約統計量	df.describe(include='O')
折れ線グラフの菱形マーカーを赤くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
セットasetを空にする	aset.clear()
破線の色をブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='brown')
データフレームdfのcolのユニークな要素	df[col].unique()
リストxdataをマゼンタ色のヒストグラムで描画する	plt.hist(xdata, color='magenta')
三角印で散布図を描く	plt.plot(xdata, ydata, marker='^')
配列xdataとリストydataについて散布図を描画して色をフクシアに設定する	plt.plot(xdata, ydata, c='fuchsia')
ファイルfilenameを追加モードでオープンする]	open(filename, mode='a')
スノー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='snow', alpha=0.5)
ライトイエロー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightyellow')
コーンフラワーブルー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
Pandasで、データ列dsを日付データに変換しデータフレームdfのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
リストxdataとリストydataの折れ線グラフに、黄色いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
日付adateにn週間分、加算する	adate + datetime.timedelta(weeks=n)
ダークサーモン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='darksalmon')
リストxdataをシャルトルーズ色のヒストグラムで描画する	plt.hist(xdata, color='chartreuse')
リストxdataとイテラブルydataの折れ線グラフに下三角マーカーを描く	plt.plot(xdata, ydata, marker='v')
リストxdataをライトスレイグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightslategray')
リストxdataとリストydataについて折れ線グラフを描画して、その色を小麦に設定する	plt.plot(xdata, ydata, color='wheat')
イテラブルxdataとデータ列ydataについてライトブルー色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
データフレームdfのカラムcolの欠損値を平均値に設定する	df[col].fillna(df[col].mean())
破線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
deqを空にする	deq.clear()
数列xdataとイテラブルydataについて散布図を描画して、マーカーの色をパールゴールデンロッドにセットする	plt.plot(xdata, ydata, c='palegoldenrod')
s中の複数行対応のパターンpatternによる全てのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
データフレームdfのcolの各データが何回出現するか確認する	df[col].value_counts()
タプルatupleの個数	len(atuple)
adateとadate2の時間差は何秒か知る	(adate - adate2).total_seconds()
リストxdataとイテラブルydataの点線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dotted', color='b')
asetとaset2が互いに素か調べる	aset.isdisjoint(aset2)
n個のものからn2個取り出したときの並べ方の総数	math.perm(n, n2)
改行なしにsを表示する	print(s, end='')
リネン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='linen')
オプションで、ファイルを使う	file = sys.open(filename, 'w')
keyが辞書adict上で定義されているか調べる	key in adict
タプルatupleの先頭のn要素を除く	atuple[n:]
リストxdataについての柱状グラフをダークターコイズ色を使って描画する	plt.hist(xdata, color='darkturquoise')
線幅nの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
破線の色をアリスブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
散布図にダークスラテグレー色のマーカーを用いる	plt.plot(xdata, ydata, c='darkslategray')
リストxdataとリストydataについて散布図を描画して、マーカーの色をブラウンに設定する	plt.plot(xdata, ydata, c='brown')
ペールグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='palegreen')
オブジェクトobjが関数かどうかテストする	callable(obj)
dfを小数点以下n桁で丸める	df.round(n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(xdata, ydata, color='rosybrown')
データ列xdataと数列ydataについてアンティークホワイト色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
リストxdataとリストydataについてダークサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
カウンタaCounterのユニークな項目を列挙する	list(aCounter)
データフレームdfのNaNを最頻値で埋める	df.fillna(df.mode().iloc[0])
プログラムのファイル名を知る	sys.argv[0]
オプションでバイナリ書き込みモードにセットする	mode = 'wb'
セットasetとセットaset2が互いに素か調べる	aset.isdisjoint(aset2)
散布図にレベッカパープル色のマーカーを使う	plt.plot(xdata, ydata, c='rebeccapurple')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークグリーンに設定する	plt.plot(xdata, ydata, c='darkgreen')
配列xdataとイテラブルydataについて黒い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='k')
1からnまでの整数リストを使う	list(range(1, n+1))
リストxdataとリストydataについてラベンダーブラッシュ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
データフレームdfの内の欠損値をドロップする	df.dropna()
リストxdataとリストydataについてブラウン色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='brown')
配列xdataと配列ydataについて折れ線グラフを描画して、その色を赤に設定する	plt.plot(xdata, ydata, color='red')
リストxdataとリストydataについて破線グラフを描画して、その色をペルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peru')
文字列elementがタプルatupleに含まれないか調べる	element not in atuple
リストxdataとリストydataの折れ線グラフを描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
sの先頭でパターンpatternにマッチするか見る	re.match(pattern, s)
リストxdataとリストydataについての散布図をアクア色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
リストxdataとリストydataについてスプリンググリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
リストxdataとリストydataについてインディアンレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indianred')
ライトグレー色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
ダークシアン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
データフレームdfのリストalistカラム中にある文字列valueの合計を数える	df[alist].isin([value]).sum()
リストxdataをオリーブ色のヒストグラムで描画する	plt.hist(xdata, color='olive')
破線グラフの色をダークバイオレット変える	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
ホワイト色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='white')
折れ線グラフのバツマーカーを青くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
sがs2で終わるか確認する	s.endswith(s2)
dfのcollをdatetime64型に変換する	pd.to_datetime(df[col])
データフレームdfのリストalistカラムの相関行列をヒートマップで描画する	sns.heatmap(df[alist].corr())
サドルブラウン色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトシアンに設定する	plt.plot(xdata, ydata, color='lightcyan')
リストxdataと数列ydataについてパウダーブルー色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
データフレームdfをカラムcolによって破壊的にソートする	df.sort_values(by=col, inplace=True)
データフレームdfのリストalistカラム中にいくつ欠損値があるか数える	df[alist].isna().sum()
リストxdataとリストydataの折れ線グラフに、黒い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
データフレームdfの欠損値を最小値で埋める	df.fillna(df.min())
ミディアムパープル色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='mediumpurple')
データ列xdataと数列ydataについてスラグレー色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
リストxdataとリストydataについて散布図を描画して、マーカーの色をドジャーブルーに設定する	plt.plot(xdata, ydata, c='dodgerblue')
nからn2までの整数列	list(range(n, n2+1))
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトグレーに設定する	plt.plot(xdata, ydata, c='lightgrey')
nがn2よりも小さいか調べる	n < n2
符号付きで整数nをバイト列化する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
アリスブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='aliceblue')
ダークブルー色でリストxdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkblue')
ファイルfilenameをバイナリ書き込みモードでオープンする]	open(filename, mode='wb')
散布図にライムグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='limegreen')
データ列xdataとデータ列ydataの散布図をミディアムシアグリーン色として描画する	plt.plot(xdata, ydata, c='mediumseagreen')
文字列elementの無限イテラブル	itertools.repeat(element)
リストxdataとイテラブルydataについてロージーブラウン色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
リストxdataとリストydataについて破線グラフを描画して、その色をダークサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
dfから重複する行を残さず、取り除く	df.drop_duplicates(keep=False)
データフレームdfの第二四分位数を求める	df.median()
配列xdataとリストydataの折れ線グラフを描画して、その色をミディアムスレートブルー変える	plt.plot(xdata, ydata, color='mediumslateblue')
リストxdataとリストydataについて赤色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='red')
最初のコマンド引数を知る	sys.argv[1]
ミディアムパープル色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
nをn2で割る	n / n2
ダークグレー色を用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
サドルブラウン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='saddlebrown')
折れ線グラフの下三角マーカーの大きさをnに指定する	plt.plot(xdata, ydata, marker='v', markersize=n)
リストxdataとリストydataについての散布図をブルーバイオレット色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
ターコイズ色として散布図をプロットする	plt.plot(xdata, ydata, c='turquoise')
リストxdataとリストydataについてミディアムブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
dfの未入力値の合計を数える	df.isna().sum()
イテラブルxdataと配列ydataについて折れ線を描画して、色をバイオレットに設定する	plt.plot(xdata, ydata, color='violet')
リストxdataとリストydataの折れ線グラフに、黄色い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
折れ線グラフの色をゴールデンロッドに設定する	plt.plot(xdata, ydata, color='goldenrod')
ケンドール相関係数でデータフレームdfのリストalistカラムの相関行列	df[alist].corr(method='kendall')
リストxdataとリストydataについて破線グラフを描画して、その色をビスクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
リストxdataとリストydataについて破線グラフを描画して、その色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='grey')
破線グラフの色をダークシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
データフレームdfの列colをダミー変数に変換する	pd.get_dummies(df[col])
nをn2で割った余り	n % n2
リストxdataとリストydataについて破線グラフを描画して、その色をスノーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='snow')
ヒートマップでdfのリストalistカラムの相関行列を描画する	sns.heatmap(df[alist].corr())
ヒストグラムを描画する際に、透明度をxに設定する	plt.hist(xdata, alpha=x)
リストxdataとリストydataの破線グラフを描画して、色をダークゴールデンロッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
dfのcolカラム内にある文字列valueとvalue2の数をカウントする	df[col].isin([value, value2]).sum()
数式として、eを展開する	sympy.expand(e)
fを改行を取り除いて一行ずつ読み込む	f.readline()
整数nをゼロパディングを用いてn2桁の文字列にする	str(n).zfill(n2)
オプションで、バイナリ書き込みモードを使う	mode = 'wb'
リストxdataとリストydataについての散布図をダークゴールデンロッド色で描画する	plt.plot(xdata, ydata, c='darkgoldenrod')
aCounterをカウントが多い順に列挙する	aCounter.most_common()
データフレームdfをJSONLファイルfilenameに保存する	df.to_csv(filename)
リストxdataとリストydataについての散布図をゴールデンロッド色で描画する	plt.plot(xdata, ydata, c='goldenrod')
xの百の位で丸める	round(x, -2)
データ列xdataとリストydataについての散布図をバイオレット色を用いて描画する	plt.plot(xdata, ydata, c='violet')
折れ線のクロスマーカーのサイズをnに設定する	plt.plot(xdata, ydata, marker='x', markersize=n)
リストxdataとリストydataについてオールドレース色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
全ての印字文字	string.printable
トマト色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
nの二乗	n ** 2
イテラブルxdataとリストydataについて散布図を描画してマーカーの色をドジャーブルーに設定する	plt.plot(xdata, ydata, c='dodgerblue')
リストxdataと数列ydataの折れ線グラフにバツ印を描画する	plt.plot(xdata, ydata, marker='x')
イテラブルxdataをライトグリーン色のヒストグラムで描く	plt.hist(xdata, color='lightseagreen')
データフレームdfのn行より後ろ	df[n:]
整数nの各桁の和を計算する	sum(map(int, str(int(n))))
データ列dsの標本標準偏差	ds.std()
リストxdataとリストydataについて折れ線グラフを描画して、その色をビスクに設定する	plt.plot(xdata, ydata, color='bisque')
リストiterableから重複なく、n個ランダムに選ぶ	random.sample(iterable, k=n)
ハニーデュー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='honeydew')
スラグレー色として柱状図をプロットする	plt.hist(xdata, color='slategrey')
リストxdataとリストydataの折れ線グラフに、赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
リストalistの先頭のn要素を取り除く	alist[n:]
シャルトルーズ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='chartreuse')
cにカウンタadictを追加する	aCounter.update(adict)
リストxdataをスノー色のヒストグラムで描画する	plt.hist(xdata, color='snow')
三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^')
タプルatupleをnからナンバリングする	enumerate(atuple, start=n)
オレンジ色として散布図を描画する	plt.plot(xdata, ydata, c='orange')
折れ線グラフのダイアモンドマーカーを青くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
データ列xdataとリストydataについて破線グラフを描画して、その色をトマトとする	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
dtの曜日を整数で見る	dt.weekday()
要素数5の空配列を作る	np.empty(5)
グラフの用途をスライドに設定する	sns.set(context='talk')
赤色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='red')
xとx2が近いかどうか調べる	math.isclose(x, x2)
パールバイオレットレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
スレートブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='slateblue')
データ列xdataとデータ列ydataの折れ線を描画して、マーカーをポイントに変更する	plt.plot(xdata, ydata, marker='.')
点線グラフの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
dsの文字列長を列として見る	ds.str.len()
リストxdataとリストydataについて散布図を描画して、色をディムグレーに変更する	plt.plot(xdata, ydata, c='dimgray')
nがn2と等しいか調べる	n == n2
複数行対応の正規表現patternでsを分割する	re.split(pattern, s, flags=re.MULTILINE)
オプションで、標準エラーを出力にする	file = sys.stderr
破線グラフの色をサーモンとする	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
カーキ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='khaki')
グレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='grey')
行列の演算をする	import numpy as np
整数nのビット長	n.bit_length()
日付と時間dtと日付と時間dt2の時間差を秒で求める	(dt - dt2).total_seconds()//60
リストxdataとリストydataについての散布図に黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='k')
リストxdataとリストydataの折れ線グラフに、黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
数列xdataと配列ydataの折れ線グラフに大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
スプリンググリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='springgreen')
ダークオリーブグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
データフレームdfのどの値が頻出か調べる	df.mode()
ライトスレイグレーを用いてヒストグラムを描画する	plt.hist(xdata, color='lightslategrey')
リストxdataとリストydataについてベージュ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='beige')
リストxdataをミディアムブルー色のヒストグラムで描画する	plt.hist(xdata, color='mediumblue')
ペールグリーン色を用いてデータ列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='palegreen')
折れ線グラフの色をディムグレーとする	plt.plot(xdata, ydata, color='dimgray')
dsをビンニングする	pd.cut(ds, alist)
データフレームdfの最初	df.head()
dfの列の名前をcol列からsに付け直す	df.rename(columns={col: s})
dfのcol列の分散を計算する	df[col].var()
散布図にトマト色のマーカーを使う	plt.plot(xdata, ydata, c='tomato')
整数nをn2分の一にする	n //= n2
ミディアムターコイズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumturquoise')
JSONフォーマットのsをデータに変換する	json.loads(s)
グラフの文字化けを防ぐ	sns.set(font='IPAexGothic')
折れ線の大バツマーカーを緑色変える	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
整数nの8進数文字列を見る	oct(n)[2:]
原点からの(x,x2)の距離	math.hypot(x, x2)
ダークシアグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
データフレームdfのカラムcol毎の標準偏差	df.groupby(col).std()
最大値でデータフレームdfのcolカラムの欠損値を埋める	df[col].fillna(df[col].max())
リストiterableを集合に変換する	set(iterable)
データフレームdfのの中で、カラムcolとカラムcol2の重複を削除する	df.drop_duplicates(subset=[col, col2])
ディムグレー色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='dimgray')
nをn2だけ増加させる	n += n2
ファイルfilenameの絶対パス	os.path.abspath(filename)
オプションで、namesをカラムの名前に設定する	names = names
sの両端から改行を除く	s.strip('\n')
sに漢字が含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
nとn2の和	n + n2
nにn2を加える	n + n2
リストxdataと数列ydataについての散布図をホットピンク色でプロットする	plt.plot(xdata, ydata, c='hotpink')
破線グラフの色をパパイヤウィップに設定する	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
現在の時間数を見る	datetime.date.today().hour
プラム色を用いて配列xdataと配列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='plum', alpha=0.5)
n列までデータフレームを表示できるようにする	pd.set_option('display.max_columns', n)
リストiterableを表示する	print(iterable)
リストxdataとリストydataについて破線グラフを描画して、その色を赤に設定する	plt.plot(xdata, ydata, linestyle='dash', color='red')
イテラブルxdataとイテラブルydataについて折れ線グラフを描画して、その色をダークスラテグレーにする	plt.plot(xdata, ydata, color='darkslategray')
データ列xdataと配列ydataについての散布図をモカシン色としてプロットする	plt.plot(xdata, ydata, c='moccasin')
リストxdataと配列ydataの散布図を描画して、色をディムグレーに設定する	plt.plot(xdata, ydata, c='dimgrey')
Pandasで、エポック秒のデータフレームdfのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
折れ線グラフの下三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
オプションで、エンコーディングをUTF8に設定する	encoding = 'utf-8'
リストxdataと配列ydataについての散布図に赤い大バツ印をプロットする	plt.plot(xdata, ydata, marker='X', c='r')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(xdata, ydata, color='lightskyblue')
リストxdataとイテラブルydataの折れ線に、黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
データフレームdfをカラムcolとカラムcol2で小さい順に整列する	df.sort_values(by=[col,col2], ascending=True)
ダークレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkred')
日付adateと日付adate2の時間差	adate - adate2
alistをビン数nでビン分割して、namesのラベルをつける	pd.cut(alist, n, labels=names)
リストxdataをサドルブラウン色の柱状図で描画する	plt.hist(xdata, color='saddlebrown')
TSVファイルfilenameを読み込む	pd.read_csv(filename, sep='\t')
データフレームdfのリストalistで与えられたカラムの各列間の相関係数	df[alist].corr()
オブジェクトobjの参照カウントを知る	sys.getrefcount(obj)-1
オプションで、追加モードを使う	mode = 'a'
リストiterableのテイルフィルタを作る	collections.deque(iterable, maxlen=n)
数列xdataとリストydataについてダークサーモン色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
ファイルfilenameからストリームをオープンして]、fileとする	file = open(filename)
破線グラフの色をスラグレーにする	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
散布図を重なりを見やすくアイボリー色を使って描画する	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
折れ線グラフのポイントマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
データ列xdataとリストydataについて折れ線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(xdata, ydata, color='dodgerblue')
データフレームdfのcol列の未入力値を最小値に変更する	df[col].fillna(df[col].min())
カラーコードrgbの星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
カウンタaCounterの正のカウントのみ残す	+aCounter
データフレームdf中のcolとcol2に重複があれば、マスクする	df.duplicated(subset=[col1, col2])
リストxdataとイテラブルydataについて折れ線グラフを描画してその色をリネンにする	plt.plot(xdata, ydata, color='linen')
配列xdataをダークスレートブルー色の柱状グラフで描く	plt.hist(xdata, color='darkslateblue')
数列xdataと数列ydataの折れ線グラフに線幅nの四角マーカーを描く	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
散布図に赤いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='r')
データ列dsを等間隔でn個にビン分割する	pd.cut(ds, n)
リストxdataとリストydataの折れ線グラフに、青いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
nかけるn2	n * n2
リストxdataをトマト色のヒストグラムでプロットする	plt.hist(xdata, color='tomato')
リストxdataとリストydataについて折れ線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, color='blanchedalmond')
数列xdataと数列ydataについて散布図を描画して、マーカーの色をオリベドラブ変える	plt.plot(xdata, ydata, c='olivedrab')
イテラブルxdataとリストydataの折れ線を描画してマーカーを丸に変更する	plt.plot(xdata, ydata, marker='o')
グリーンイエロー色で重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
インデント付きで辞書adictを文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)
マルーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='maroon')
散布図にティール色のマーカーを使う	plt.plot(xdata, ydata, c='teal')
リストxdataについてのヒストグラムを描画する際に合計を1にする	plt.hist(xdata, density=True)
arrayをn個にビン分割して、namesのラベルをつける	pd.cut(array, n, labels=names)
dsカラムにいくつNaNが存在するか求める	ds.isna().sum()
散布図にライトスチールブルー色のマーカーを使う	plt.plot(xdata, ydata, c='lightsteelblue')
数列xdataとリストydataの散布図を描画して、マーカーの色をミディアムスプリンググリーンにする	plt.plot(xdata, ydata, c='mediumspringgreen')
データ列dsの欠損値をxで埋める	ds.fillna(x)
s中の大文字・小文字を無視したパターンpatternによる全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
現在の作業ディレクトリ	os.getcwd()
データフレームdfのcolカラムの中にある日付データvalueの個数を数える	df[col].isin([value]).sum()
リストxdataとリストydataについての散布図をミディアムアクアマリン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
リストxdataとリストydataについてハリウッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
ティール色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='teal')
折れ線グラフの色をミディアムバイオレットレッドにセットする	plt.plot(xdata, ydata, color='mediumvioletred')
オーキッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='orchid')
データ列xdataとリストydataの折れ線グラフに、黄色い菱形マーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
散布図にライトサーモン色のマーカーを用いる	plt.plot(xdata, ydata, c='lightsalmon')
リストxdataとリストydataについての散布図をライトゴールドロディイエロー色で描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
sが全て英数字か調べる	s.isalnum()
ライトブルー色として散布図を描く	plt.plot(xdata, ydata, c='lightblue')
リストxdataとリストydataについての散布図をピンク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='pink', alpha=0.5)
データフレームdfのカラムcolの欠損値を直後の値に設定する	df[col].fillna(method='bfill')
日付adateが何曜日か知る	adate.weekday()
fから1文字、読む	f.read(1)
ディムグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='dimgray')
リストxdataをサドルブラウン色のヒストグラムで描画する	plt.hist(xdata, color='saddlebrown')
配列xdataとリストydataについての散布図をゴーストホワイト色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
データフレームdfの第三四分位数	df.quantile(0.75)
asetがセットaset2と共通の要素を持たないかどうか調べる	aset.isdisjoint(aset2)
データフレームdfをカラムcolとカラムcol2によって昇順にソートして、更新する	df.sort_values(by=[col,col2], ascending=True, inplace=True)
リストxdataと配列ydataについて破線を描画してその色をシルバーにする	plt.plot(xdata, ydata, linestyle='dash', color='silver')
折れ線グラフの色をビスクに設定する	plt.plot(xdata, ydata, color='bisque')
散布図に黄色色のマーカーを使う	plt.plot(xdata, ydata, c='yellow')
UNIX秒のデータフレームdfのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
折れ線の大バツ印の線幅をnに指定する	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
日時dtをn時間前に戻す	dt - datetime.timedelta(hours=n)
リストiterableとリストiterable2をペアリングする	itertools.zip_longest(iterable, iterable2)
nからn2未満までのランダムな整数を求める	random.randrange(n, n2)
二進sを整数に変換する	int(s, 2)
マゼンタ色として配列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='magenta')
リストxdataとリストydataについて破線グラフを描画して、その色をティールに設定する	plt.plot(xdata, ydata, linestyle='dash', color='teal')
ゲインズボロ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='gainsboro')
リストxdataとリストydataの折れ線を描画して、色をブラックに指定する	plt.plot(xdata, ydata, color='black')
破線グラフの色をカデットブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
データ列xdataと数列ydataの折れ線グラフを描画して、その色をオリーブとする	plt.plot(xdata, ydata, color='olive')
リストxdataとリストydataについての散布図をミディアムブルー色で描画する	plt.plot(xdata, ydata, c='mediumblue')
ピアソン相関係数でデータフレームdfの相関行列	df.corr(method='pearson')
配列xdataと配列ydataについて散布図を描画して色をホワイトスモークに設定する	plt.plot(xdata, ydata, c='whitesmoke')
散布図をタン色で描画する	plt.plot(xdata, ydata, c='tan')
シエナ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='sienna')
データフレームdfのリストalist列のどの値が頻出か確認する	df[alist].mode()
タプルatuple内の最大値	max(atuple)
リストxdataとリストydataについて散布図を描画して、マーカーの色を耐火レンガに設定する	plt.plot(xdata, ydata, c='firebrick')
折れ線グラフの色をオレンジレッドに設定する	plt.plot(xdata, ydata, color='orangered')
オプションで文字コードをEUCに変更する	encoding = 'euc_jp'
配列xdataと数列ydataの折れ線グラフを描画して、その色をライトサーモンに変更する	plt.plot(xdata, ydata, color='lightsalmon')
リストxdataとリストydataについての散布図をライトグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
ホットピンク色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
破線の色をフローラルホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
リストxdataとリストydataについて折れ線グラフを描画して、その色をフォレストグリーンに設定する	plt.plot(xdata, ydata, color='forestgreen')
データフレームdfをカラムcolとカラムcol2によって破壊的にソートする	df.sort_values(by=[col,col2], inplace=True)
赤い△印で散布図をプロットする	plt.plot(xdata, ydata, marker='^', c='r')
オレンジレッド色を用いてヒストグラムを描画する	plt.hist(xdata, color='orangered')
リストxdataと配列ydataの散布図をダークシアグリーン色で描画する	plt.plot(xdata, ydata, c='darkseagreen')
リストxdataとリストydataについて散布図を描画して、大バツマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストxdataとイテラブルydataについてダークカーキ色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
リストxdataをシーグリーン色のヒストグラムで描画する	plt.hist(xdata, color='seagreen')
配列xdataと数列ydataについて散布図を描画して、マーカーの色をシャルトルーズにする	plt.plot(xdata, ydata, c='chartreuse')
dfをcol毎で集約して、列挙する	[(name, group) for name, group in df.groupby(col)]
ライトスカイブルー色として重なりを見やすくイテラブルxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
データフレームdfのカラム一覧	df.info()
Pandasを用いてfilenameを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
文字列elementがセットasetに含まれないか調べる	element not in aset
Pandasのバージョンを表示する	print(pd.__version__)
重なりを見やすく散布図をピンク色として描画する	plt.plot(xdata, ydata, c='pink', alpha=0.5)
配列xdataと配列ydataについて散布図を描画して、マーカーの色をミスティローズにする	plt.plot(xdata, ydata, c='mistyrose')
リストiterableを累加したイテラブル	itertools.accumulate(iterable)
nをバイナリに変換する	n.to_bytes(length=n2, byteorder='big')
リストxdataと配列ydataについてライトイエロー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
リストxdataとリストydataについて散布図を描画して、色をペルーにする	plt.plot(xdata, ydata, c='peru')
ライトグリーンでリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgreen')
リストxdataとリストydataについての散布図に赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
データフレームdfを配列に変換する	df.values
シルバー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='silver')
折れ線の色をピンクに設定する	plt.plot(xdata, ydata, color='pink')
ヒストグラムをグレーとして描画する	plt.hist(xdata, color='gray')
散布図にゴーストホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='ghostwhite')
トマト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='tomato')
リストxdataをライトグリーン色のヒストグラムで描画する	plt.hist(xdata, color='lightseagreen')
データフレームdfのリストalistカラムの欠損値を直前の値に設定する	df[alist].fillna(method='ffill')
データフレームdf中の欠損値がある行を削除する	df.dropna()
ライムグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='limegreen')
タプルatupleをナンバリングする	enumerate(atuple)
リストxdataとリストydataについて破線グラフを描画して、その色をパパイヤウィップに設定する	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
散布図にスラグレー色のマーカーを使う	plt.plot(xdata, ydata, c='slategray')
データフレームdfからカテゴリデータのカラム名一覧を使う	df.select_dtypes('object').columns
エクセルファイルファイルfilenameから全てのシートを読み込む	pd.read_excel(filename, sheet_name=None)
TYPE2=Person;$$クラスがTYPE2=Person;$$2クラスのサブクラスか調べる	issubclass(TYPE, TYPE2)
ユーザから入力される	input()
グラフ中に枠なしの凡例を入れる	plt.legend(frameon=False)
プラットフォームのユニコードの最大コードポイント	sys.maxunicode
データ列dsのn分位数	ds.quantile(n/100)
リストxdataとリストydataについて散布図を描画して、マーカーの色を貝殻に設定する	plt.plot(xdata, ydata, c='seashell')
イテラブルxdataとリストydataについての散布図をサドルブラウン色で描く	plt.plot(xdata, ydata, c='saddlebrown')
リストxdataとデータ列ydataについて破線グラフを描画して、その色をダークグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
日付adateをISO8601書式の文字列に変換する	adate.isoformat()
データフレームdfから破壊的に重複をドロップする	df.drop_duplicates(inplace=True)
リストxdataとリストydataについてライトゴールドロディイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
配列xdataとリストydataの実線を描画してその色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color='r')
リストxdataとリストydataの一点鎖線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
現在が何時か知る	datetime.date.today().hour
パールゴールデンロッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
nをn2で割った余りをnに代入する	n %= n2
改行なしにリストalistを表示する	print(alist, end='')
数式として、eの数値を求める	float(e)
散布図にナバホホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='navajowhite')
インディアンレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='indianred')
カラーバーを付ける	plt.colorbar()
リストxdataとデータ列ydataについて破線グラフを描画してその色をライトスレイグレーにする	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
データ列xdataをグレー色の柱状図として描く	plt.hist(xdata, color='grey')
散布図をピーチパフ色のマーカーで描く	plt.plot(xdata, ydata, c='peachpuff')
グラフのカラーパレットを濃くする	sns.set(pallete='deep')
散布図にラベンダーブラッシュ色のマーカーを使う	plt.plot(xdata, ydata, c='lavenderblush')
オブジェクトelementがリストalistに含まれないか	element not in alist
ミディアムスレートブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
タプルatupleの最初の文字列elementを探す	atuple.index(element)
リストxdataとリストydataの散布図をミディアムオーキッド色を使って描く	plt.plot(xdata, ydata, c='mediumorchid')
nが一桁の正の数	0 <= n <= 9
データ列dsのタイムゾーンを日本に設定する	ds.tz_convert('Asia/Tokyo')
リストxdataとリストydataの折れ線グラフに、緑色の大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
リストxdataとリストydataについてオレンジ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orange')
リストxdataとリストydataについての散布図をダークバイオレット色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
ダークバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
破線グラフの色をクリムゾンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
グリーンイエロー色の柱状図を用いて配列xdataを描画する	plt.hist(xdata, color='greenyellow')
破線グラフの色をライムグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
折れ線グラフの丸マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
dfの行を条件でフィルタするには	df[(df[col] == x) & (df[col2] == x2)]
リストxdataとリストydataについての散布図をクリムゾン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
散布図にライトゴールドロディイエロー色のマーカーを使う	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
n年n2月n3日の日付	datetime.date(year=n, month=n2, day=n3)
スプリンググリーン色で柱状図を描画する	plt.hist(xdata, color='springgreen')
リストxdataとイテラブルydataについて折れ線グラフを描画してその色をインディゴにする	plt.plot(xdata, ydata, color='indigo')
破線の色をライトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
データフレームdfのカラムcolとカラムcol2の相関行列をヒートマップで描画する	sns.heatmap(df[[col, col2]].corr())
ダークオリーブグリーン色で数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkolivegreen')
ファイルパスfilenameを文字コードtextでオープンする]	open(filename, encoding=text)
ミディアムシアグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumseagreen')
リストalistの合計値を求める	sum(alist)
リストalistをn個にビン分割して、namesのラベルをつける	pd.cut(alist, n, labels=names)
散布図にライム色のマーカーを使う	plt.plot(xdata, ydata, c='lime')
スチールブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='steelblue')
アイボリー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='ivory')
ビスク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='bisque')
__X__カラーパレットをグラフに使う	sns.set(pallete='bright')
数列xdataとイテラブルydataについて折れ線を描画して、色をパールバイオレットレッドに変更する	plt.plot(xdata, ydata, color='palevioletred')
データ列xdataとイテラブルydataについてホットピンク色の折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
データ列dsの欠損値をxに設定する	ds.fillna(x)
リストxdataと配列ydataの折れ線グラフを描画してその色をトマトに変更する	plt.plot(xdata, ydata, color='tomato')
sでフォーマットして日付と時間dtを文字列に変換する	dt.strftime()
sを積極的に英小文字に変換する	s.casefold()
セットaset⊆セットaset2	aset.issubset(aset2)
リストxdataとリストydataについてイエローグリーン色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
配列xdataとリストydataの散布図を描画して、マーカーの色をミディアムブルーに変更する	plt.plot(xdata, ydata, c='mediumblue')
重なりを見やすくインディアンレッド色で散布図を描画する	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
sの先頭でASCII限定としてパターンpatternにマッチさせる	re.match(pattern, s, flags=re.ASCI)
リストxdataとリストydataについて散布図を描画して、マーカーの色をネイビーに設定する	plt.plot(xdata, ydata, c='navy')
s中の大文字・小文字を無視したパターンpatternよって置き換える	re.sub(pattern, repl, s, flags=re.IGNORECASE)
日時dtが何年か知る	dt.year
ダークオーキッド色でデータ列xdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkorchid')
タン色の折れ線を描く	plt.plot(xdata, ydata, color='tan')
ファイル名filenameがCSVファイルか	filename.endswith('.csv')
散布図にホワイトスモーク色のマーカーを使う	plt.plot(xdata, ydata, c='whitesmoke')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライムに設定する	plt.plot(xdata, ydata, color='lime')
ミントクリーム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
ディープスカイブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
n個の要素があるリスト	[element] * n
リストxdataと数列ydataについて折れ線を描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategrey')
リストxdataとリストydataの折れ線グラフに、緑色のバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
ミディアムオーキッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumorchid')
不揃いな長さののzip	itertools.zip_longest(iterable, iterable2)
ダークオリーブグリーン色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
n年n2月を日時に変換する	datetime.datetime(year=n, month=n2, day=1)
リストxdataとリストydataの散布図を描画してマーカーの色をライトゴールドロディイエローに指定する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
dfの行がnの行を抽出する	df.loc[n]
ハニーデュー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
日付adateがadate2と同時か調べる	adate == adate2
リストxdataとリストydataについて散布図を描画して、三角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストalist内の要素が少なくともひとつ真か調べる	any(alist)
n個の集まりからn2個重複なく選ぶ方法	math.comb(n, n2)
折れ線グラフの色をブラックに設定する	plt.plot(xdata, ydata, color='black')
リストxdataとリストydataについて折れ線グラフを描画して、その色をインディゴに設定する	plt.plot(xdata, ydata, color='indigo')
データフレームdfのカラムcolの値が欠損値か調べる	df[col].isna()
数列xdataとリストydataについての散布図をダークオレンジ色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
sがs2と同じか比較する	s == s2
ダークグレー色で重なりを見やすくリストxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
データフレームdfの値を正規表現patternでまとめてsに置き換える	df.replace(pattern, s, regex=True)
リストxdataとリストydataの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid')
データフレームdfのカラムcolが何分か見る	df[col].dt.minute
ナバホホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='navajowhite')
リストxdataとリストydataについて散布図を描画してマーカーの色をプラムにセットする	plt.plot(xdata, ydata, c='plum')
サドルブラウン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='saddlebrown')
データフレームdfの先頭n行	df.head(n)
リストxdataとリストydataについての散布図をダークターコイズ色で描画する	plt.plot(xdata, ydata, c='darkturquoise')
sを複数行対応のパターンpatternで分割する	re.split(pattern, s, flags=re.MULTILINE)
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして右結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='right')
数列xdataとリストydataについて破線グラフを描画して色をシーグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
xでdfのalist列のNaNを置き換える	df[alist].fillna(x)
sがアルファベットかどうか調べる	s.isalpha()
リストxdataと数列ydataについて破線を描画して、その色をミディアムシアグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
リストxdataとリストydataについてスラグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
本日が何月か知る	datetime.datetime.today().month
カウンタaCounterとカウンタaCounter2に共通する要素からなるカウンタ	aCounter & aCounter2
折れ線の▲マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='^', markersize=n)
colでデータフレームdfをソートして、インプレイスする	df.sort_values(by=col, inplace=True)
本日の曜日を整数で使う	datetime.datetime.today().weekday()
Pandasとしてnという名前のシートをfilenameからデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
青色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blue')
リストxdataとリストydataについての散布図をダークマゼンタ色で描画する	plt.plot(xdata, ydata, c='darkmagenta')
リストxdataとリストydataについての散布図をミディアムスプリンググリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
NaN	math.nan
イテレータAとBを連続して繰り返す	for X in itertools.chain(A, B):
データフレームdfの行を条件でフィルタするには	df[(df[col] == x) & (df[col2] == x2)]
リストxdataとリストydataについてネイビー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navy')
リストxdataとリストydataについての散布図をインディアンレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
タプルatupleの各要素を関数funcに適用した結果でソートする	sorted(atuple, key=func)
sを最後のs2で分けたときの前半の文字列	s.rpartition(s2)[0]
リストxdataとリストydataについての散布図にカラーコードrgbの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
dtが火曜日かどうか確認する	dt.weekday() == 1
Pythonパスの一覧	sys.path
データフレームdfのリストalist列のsを欠損値に変換する	df[alist].replace(s, np.nan)
リストxdataをスラグレー色のヒストグラムで描画する	plt.hist(xdata, color='slategrey')
ミディアムスレートブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumslateblue')
ダークオーキッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkorchid')
配列xdataと配列ydataについて折れ線グラフを描画して、その色をアクア変える	plt.plot(xdata, ydata, color='aqua')
紺碧色で散布図をプロットする	plt.plot(xdata, ydata, c='azure')
シルバー色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='silver')
レベッカパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
アンティークホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
日時dtにn週間分加える	dt + datetime.timedelta(weeks=n)
破線グラフの色をグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='green')
データフレームdfのリストalistカラム中の欠損値の合計を数える	df[alist].isna().sum()
リストxdataとリストydataについての散布図を貝殻色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
タプルatupleとタプルatuple2を連結する	atuple + atuple2
データ列xdataとリストydataについての散布図を大きさnでプロットする	plt.scatter(xdata, ydata, s=n)
日時dtと日時dt2の時間差を秒数で求める	(dt - dt2).total_seconds()
折れ線グラフの色をダークバイオレットに設定する	plt.plot(xdata, ydata, color='darkviolet')
sを表示する	print(s)
データ列dsの値が欠損値か調べる	ds.isna()
リストalistの長さ	len(alist)
リストxdataとデータ列ydataについてグレー色の折れ線グラフを描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='grey')
乱数シードをnで初期化する	random.seed(n)
ダークグリーン色としてヒストグラムを描く	plt.hist(xdata, color='darkgreen')
数列xdataとリストydataについての散布図をスカイブルー色で描画する	plt.plot(xdata, ydata, c='skyblue')
最大長をnにしてリストiterableから両端キューを作る	collections.deque(iterable, maxlen=n)
ファイルfilenameを読み込みモードで開く]	open(filename, mode='r')
ダークマゼンタ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
カウンタaCounterの項目数	len(aCounter)
数列xdataをカーキ色の柱状図で描く	plt.hist(xdata, color='khaki')
keyが辞書adict上で定義済みか調べる	key in adict
折れ線グラフの色をオレンジレッドに変更する	plt.plot(xdata, ydata, color='orangered')
データフレームdfのリストalistカラムを10の位で丸める	df[alist].round(-1)
リストxdataとリストydataについての散布図をアリスブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
散布図をドジャーブルー色のマーカーで重なりを見やすく描画する	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
データフレームdfのcolをsにリネームする	df.rename(columns={col: s})
散布図をブラウン色で描画する	plt.plot(xdata, ydata, c='brown')
リストxdataとリストydataについての散布図をダークスラテグレー色で描画する	plt.plot(xdata, ydata, c='darkslategray')
nの順列の総数	math.perm(n)
リストxdataとリストydataについての散布図をスノー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='snow', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
バイオレット色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='violet')
イテラブルxdataとリストydataについての散布図をダークサーモン色でプロットする	plt.plot(xdata, ydata, c='darksalmon')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(xdata, ydata, color='darkmagenta')
sのn番目からとn2までの範囲にs2が存在しないか	s.find(s2, start=n, end=n2) == -1
ケンドール順位相関係数を用いてdfのcolとカラムcol2の相関行列	df[[col, col2]].corr(method='kendall')
配列xdataとデータ列ydataの散布図をパウダーブルー色で描画する	plt.plot(xdata, ydata, c='powderblue')
数式として、方程e=0を解く	sympy.solve(e)
ベージュ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='beige')
リストxdataとリストydataについて散布図を描画して、マーカーの色をパウダーブルーに設定する	plt.plot(xdata, ydata, c='powderblue')
iterableをセットに変換する	set(iterable)
折れ線のダイアモンドマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
ヒストグラムの透明度をxにする	plt.hist(xdata, alpha=x)
破線グラフの色をダークターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
文字列elementと文字列element2をカンマで区切って表示する	print(element, element2, sep=',')
リストxdataとリストydataについてスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をパパイヤウィップに設定する	plt.plot(xdata, ydata, c='papayawhip')
数列xdataとリストydataについて散布図を描画して、マーカーの色をグリーンイエローに設定する	plt.plot(xdata, ydata, c='greenyellow')
代数計算を使用する	import sympy
データフレームdfのカラムの名前の一覧を使う	df.columns
データフレームdfのの中で、カラムcolの重複を見る	df.duplicated(subset=col)
ダークサーモン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darksalmon')
xの絶対値	math.fabs(x)
散布図にカデットブルー色のマーカーを使う	plt.plot(xdata, ydata, c='cadetblue')
リストxdataとリストydataについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
最大値でデータフレームdfのリストalistカラムの欠損値を補う	df[alist].fillna(df[alist].max())
イテラブルiterableからn個、ランダムに選ぶ	random.choices(iterable, k=n)
リストxdataをホワイト色のヒストグラムで描画する	plt.hist(xdata, color='white')
データフレームdfの平均値	df.mean()
破線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')
ミディアムスプリンググリーン色でリストxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='mediumspringgreen')
リストalistを境界値としてリストalistを分割する	pd.cut(alist, alist)
リストxdataとリストydataについて散布図を描画して、色をライトスレイグレー変える	plt.plot(xdata, ydata, c='lightslategray')
リストxdataとリストydataについての散布図をミディアムシアグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
ラベンダー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
ビン数をnに設定してリストxdataのヒストグラムを描画する	plt.hist(xdata, bins=n)
リストxdataと配列ydataについての散布図にカラーコードrgbのダイアモンド印を描く	plt.plot(xdata, ydata, marker='D', c=rgb)
リストalistの値を逆順にする	alist[::-1]
データフレームdfのカラムcol中にある文字列valueの合計を数える	df[col].isin([value]).sum()
x以上の最小の整数を求める	math.ceil(x)
Pandasで、書式fmtでデータフレームdfのcollを日付データにする	pd.to_datetime(df[col], format=fmt)
リストxdataとリストydataについて破線グラフを描画して、その色をオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
シエナ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='sienna')
ゴーストホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='ghostwhite')
dfのcolカラムの値がx以上かつx2未満の行を抽出する	df[(x <= df[col]) & (df[col] < x2)]
sにおいてs3にs2を全て置き換える	s.replace(s2, s3)
データフレームdfとデータフレームdf2をcolカラムをキーにして外部結合する	pd.merge(df, df2, on=col, how='outer')
破線グラフの色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
黒い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='k')
xの複素数	complex(x)
データフレームdfのカラムcolを100の位で丸める	df[col].round(-2)
日付と時間dtからn秒分、減算する	dt - datetime.timedelta(seconds=n)
データフレームdfをカラムcolによって降順に破壊的にソートする	df.sort_values(by=col, ascending=False, inplace=True)
データフレームdfの数値をまとめて小数点以下n桁で丸める	df.round(n)
ミディアムブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
配列xdataとリストydataの破線グラフを描画して、その色をミディアムアクアマリンにする	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
keyが辞書adictに存在するか調べる	key in adict
ライトグレー色のヒストグラムでリストxdataをプロットする	plt.hist(xdata, color='lightgray')
リストxdataとリストydataについての散布図をオリベドラブ色で描画する	plt.plot(xdata, ydata, c='olivedrab')
散布図をプラム色のマーカーで重なりを見やすく描画する	plt.plot(xdata, ydata, c='plum', alpha=0.5)
リストxdataをライトスカイブルー色のヒストグラムで描画する	plt.hist(xdata, color='lightskyblue')
データ列xdataとイテラブルydataの折れ線グラフを描画してマーカーを星に変更する	plt.plot(xdata, ydata, marker='*')
折れ線グラフの色をマルーンに設定する	plt.plot(xdata, ydata, color='maroon')
データフレームdfのリストalistカラムのsを欠損値に変換する	df[alist].replace(s, np.nan)
sの先頭からs2を探す	s.find(s2)
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、標準偏差	df.groupby([col, col2], as_index=False).std()
ライトシアン色でリストxdataとリストydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
文字列elementがセットasetに含まれるか調べる	element in aset
サンディーブラウン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
リストxdataとリストydataについての散布図をライトスレイグレー色で描画する	plt.plot(xdata, ydata, c='lightslategray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, color='mediumslateblue')
ビスク色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='bisque')
ダークシアグリーン色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画してその色をネイビーに変更する	plt.plot(xdata, ydata, color='navy')
カウンタaCounterとカウンタaCounter2の積集合	aCounter & aCounter2
asetがセットaset2の真上位集合	aset > aset2
リストxdataをミスティローズ色のヒストグラムで描画する	plt.hist(xdata, color='mistyrose')
リストxdataとリストydataについて散布図を描画して、マーカーの色をインディアンレッドに設定する	plt.plot(xdata, ydata, c='indianred')
カウンタadictとカウンタadict2をチェーンする	collections.ChainMap(adict, adict2)
配列xdataと数列ydataについてダークシアグリーン色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
aCounterをカウントが少ない順にリストとして得る	aCounter.most_common()[::-1]
スノーとしてデータ列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='snow')
日時dtと日時dt2の時間差	dt - dt2
ファイルfilenameをバイナリできるようにオープンする]	open(filename, mode='rb')
散布図に黒い右三角印を用いる	plt.plot(xdata, ydata, marker='>', c='k')
プロット中のフォントを日本語に設定する	sns.set(font='IPAexGothic')
dtの分数	dt.minite
モカシン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='moccasin')
本日が日曜日か調べる	datetime.datetime.today().weekday() == 6
シルバー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='silver')
バイオレット色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='violet', alpha=0.5)
データフレームdfのカラムcol中にある文字列valueと文字列value2の合計を数える	df[col].isin([value, value2]).sum()
ブラウン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='brown')
数列xdataとリストydataについて淡いピンク色色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
objがオブジェクトobj2か調べる	obj == obj2
ホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='white')
散布図にベージュ色のマーカーを使う	plt.plot(xdata, ydata, c='beige')
重なりを見やすく配列xdataとリストydataについての散布図をシルバー色で描画する	plt.plot(xdata, ydata, c='silver', alpha=0.5)
長さnのリスト	[0] * n
配列xdataをビスク色のヒストグラムとして描画する	plt.hist(xdata, color='bisque')
破線グラフの色をローングリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
ペールグリーン色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='palegreen')
リストxdataとリストydataについての散布図をライトスチールブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
書式textをリストalistを引数としてフォーマットする	text.format(*alist)
リストxdataとデータ列ydataについての散布図をカーキ色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
エポック秒のdsからdatetime64型に変換する	pd.to_datetime(ds, unit='s', utc=True)
タプルatupleの文字列elementが最初に見つかるインデックス	atuple.index(element)
グラフで使える色の一覧を見る	matplotlib.colors.cnames
mathを使う	import math
折れ線グラフの色をインディゴに設定する	plt.plot(xdata, ydata, color='indigo')
折れ線グラフの色を青に設定する	plt.plot(xdata, ydata, color='blue')
リストxdataとリストydataの折れ線グラフを描画して、色を黄色くする	plt.plot(xdata, ydata, color='y')
破線グラフの色をリネンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='linen')
グラフ中の縦軸にsという軸ラベルを付ける	plt.ylabel(s)
リストxdataをインディアンレッド色のヒストグラムで描画する	plt.hist(xdata, color='indianred')
日時dtの秒数	dt.second
xのx2乗	x ** x2
スクリプトファイルのディレクトリ名	os.path.dirname(os.path.abspath(__file__))
エクセルファイルファイルfilenameからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
配列xdataとリストydataについて散布図を描画して、マーカーの色をマルーン変える	plt.plot(xdata, ydata, c='maroon')
辞書adictに文字列elementをkeyとして加える	adict[key] = element
オブジェクトobjはリストクラスか調べる	isinstance(obj, list)
日付と時刻dtにn時間分、加算する	dt + datetime.timedelta(hours=n)
配列xdataとリストydataについてミディアムアクアマリン色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
日時dtの日数	dt.day
重なりを見やすくデータ列xdataとリストydataの散布図をミディアムターコイズ色で描画する	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
データフレームdfのカラムcolを破壊的に削除する	df.drop(col, axis=1, inplace=True)
カウンタaCounterにリストiterableを増やす	aCounter.update(iterable)
イエローグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='yellowgreen')
リストxdataとリストydataについての散布図を小麦色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(xdata, ydata, color='antiquewhite')
リストxdataとリストydataについてコーンズシルク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
リストxdataと数列ydataについてライトコーラル色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
データフレームを表示するとき、カラムの最大幅をnに設定する	pd.set_option('max_colwidth', n)
リストxdataとリストydataについての散布図をダークシアン色で描画する	plt.plot(xdata, ydata, c='darkcyan')
ダークオーキッド色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
破線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dashed', color='k')
配列xdataと配列ydataについての散布図を黄色色で描画する	plt.plot(xdata, ydata, c='yellow')
dfのリストalist列のNaNを中央値にセットする	df[alist].fillna(df[alist].median())
nを表示する	print(n)
散布図にフクシア色のマーカーを使う	plt.plot(xdata, ydata, c='fuchsia')
sをコロンで分割し、文字列リストに変換する	s.split(':')
ライトゴールドロディイエロー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightgoldenrodyellow')
ミントクリーム色を用いて散布図を描画する	plt.plot(xdata, ydata, c='mintcream')
重なりを見やすく配列xdataとリストydataについての散布図をパールゴールデンロッド色で描画する	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
スチールブルー色の折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
小麦色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='wheat')
イテラブルxdataとデータ列ydataの散布図を描画して、色をダークオリーブグリーンにする	plt.plot(xdata, ydata, c='darkolivegreen')
日時dtの時刻	dt.time()
リストxdataとリストydataの黒い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='k')
リストalistをn回、連結する	alist * n
データフレームdfを各colと列col2の組み合わせ毎に集約して個数を算出する	df.groupby([col, col2], as_index=False).count()
dfをカラムcolによって昇順に並べて、更新する	df.sort_values(by=col, ascending=True, inplace=True)
リストxdataとリストydataについて折れ線グラフを描画して、その色を淡いピンク色に設定する	plt.plot(xdata, ydata, color='lightpink')
セットasetがセットaset2と交わりを持たないかどうか調べる	aset.isdisjoint(aset2)
リストxdataとリストydataについての散布図をディムグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、色をオリーブに指定する	plt.plot(xdata, ydata, c='olive')
デピンク色のマーカーを用いて散布図を描く	plt.plot(xdata, ydata, c='deeppink')
s全体がパターンpatternに複数行対応としてマッチするか見る	re.fullmatch(pattern, s, flags=re.MULTILINE)
データフレームdf中のカラムcolを等間隔でn個にビン分割する	pd.cut(df[col], n)
折れ線グラフの色をライムに設定する	plt.plot(xdata, ydata, color='lime')
デックdeqの最大長	deq.maxlen
日付adateにn年分加える	adate + datetime.timedelta(years=n)
リストxdataとリストydataについての散布図をリネン色で描画する	plt.plot(xdata, ydata, c='linen')
リストxdataとリストydataについての散布図をダークシアグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
リストxdataとリストydataについての散布図をペールグリーン色で描画する	plt.plot(xdata, ydata, c='palegreen')
辞書adictをJSON形式で出力foutに保存する	json.dump(adict, fout, ensure_ascii=False)
グラフの色を全般的にパステル調にする	sns.set(pallete='pastel')
散布図に赤い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='r')
赤い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='r')
折れ線グラフの右三角マーカーを黒くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
マゼンタ色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='magenta')
リストxdataを縦軸、リストydataを横軸として、散布図を描画する	plt.scatter(xdata, ydata)
ダークシアグリーン色の柱状図としてリストxdataを描く	plt.hist(xdata, color='darkseagreen')
Pandasで、フォーマットでデータフレームdfのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
散布図にレモンシフォン色のマーカーを使う	plt.plot(xdata, ydata, c='lemonchiffon')
リストxdataとイテラブルydataの折れ線グラフに、黄色い上三角マーカーを描く	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
データ列xdataと数列ydataについての散布図をイエローグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトグレーに設定する	plt.plot(xdata, ydata, c='lightgray')
dsの曜日の名前	ds.dt.weekday_name
データ列dsに文字列valueと文字列value2がいくつあるか数える	ds.isin([value, value2]).sum()
グラフのカラーパレットをsに設定する	sns.set(pallete=s)
データフレームdfのリストalistカラムの第三四分位数	df[alist].quantile(0.75)
リストxdataとリストydataについてグリーンイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
リストxdataと配列ydataについての散布図をライトグリーン色で重なりを見やすく描く	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
オプションでエンコーディングをsの示すエンコーディングに設定する	encoding = s
デックdeqの要素を右にローテートする	deq.rotate()
数列xdataとリストydataについて散布図を描画して、色をライトスチールブルーに設定する	plt.plot(xdata, ydata, c='lightsteelblue')
折れ線グラフの色をプラムに設定する	plt.plot(xdata, ydata, color='plum')
イテラブルxdataとリストydataについて折れ線を描画して、その色をオリベドラブ変える	plt.plot(xdata, ydata, color='olivedrab')
シルバー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='silver')
散布図にカラーコードrgbの菱形マーカーを使う	plt.plot(xdata, ydata, marker='D', c=rgb)
リストxdataとリストydataについての散布図をダークグリーン色で描画する	plt.plot(xdata, ydata, c='darkgreen')
リストxdataとリストydataについてリネン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='linen')
グラフ中の(x,x2)の位置に凡例を入れる	plt.legend(loc=(x, x2))
破線の色をミディアムブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
リストxdataとリストydataの折れ線グラフに、緑色のダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
ダークターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
重なりを見やすくデータ列xdataとイテラブルydataについての散布図をミディアムオーキッド色で描画する	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
dsの欠損値を直前の値で埋める	ds.fillna(method='ffill')
ファイルfilenameを追加モードでオープンして]、fとする	f = open(filename, mode='a')
折れ線グラフにバツマーカーを使う	plt.plot(xdata, ydata, marker='x')
リストalistの要素を昇順にソートする	sorted(alist, reverse=True)
ライトブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightblue')
nの無限な整数イテラブル	itertools.repeat(n)
配列xdataをシエナ色のヒストグラムで描く	plt.hist(xdata, color='sienna')
ミディアムシアグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
カデットブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='cadetblue')
折れ線グラフの左三角マーカーを青くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
折れ線グラフのマーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
リストxdataとリストydataの折れ線グラフを描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
オーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orchid')
散布図にダークレッド色のマーカーを使う	plt.plot(xdata, ydata, c='darkred')
リストxdataとリストydataについての散布図をミディアムオーキッド色で描画する	plt.plot(xdata, ydata, c='mediumorchid')
日時dtにn月分、加算する	dt + datetime.timedelta(months=n)
リストxdataとリストydataについての散布図をライトブルー色で描画する	plt.plot(xdata, ydata, c='lightblue')
データフレームdfのカラムcolをリストとして抽出する	df[col].values.tolist()
sを黒色にする	f'\033[30m{s}\033[0m'
日付adateからn秒分、減算する	adate - datetime.timedelta(seconds=n)
リストxdataとリストydataについてラベンダー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavender')
耐火レンガ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='firebrick')
ライトスレイグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
リストxdataをアクア色のヒストグラムで描画する	plt.hist(xdata, color='aqua')
データフレームdfから重複した行を削除する	df.drop_duplicates()
リストalistをイミュータブルにする	tuple(alist)
オプションで、ファイルを使用する	file = sys.open(filename, 'w')
リストxdataと配列ydataの散布図をクリムゾン色で描画する	plt.plot(xdata, ydata, c='crimson')
数列xdataとデータ列ydataの折れ線グラフにポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
リストxdataとイテラブルydataの折れ線グラフに、青い三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
配列xdataとデータ列ydataについての散布図をペールグリーン色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
データ列xdataと配列ydataの破線グラフを描画して、色をオレンジレッドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
名前付きタプルオブジェクトobjのフィールド名の一覧	"if isinstance(obj, NamedTuple):
    obj._fields"
パウダーブルー色を用いて配列xdataについての柱状図を描画する	plt.hist(xdata, color='powderblue')
リストalistの先頭を捨てる	alist[1:]
散布図にピーチパフ色のマーカーを用いる	plt.plot(xdata, ydata, c='peachpuff')
ディープスカイブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='deepskyblue')
日付adateををn時間後に進める	adate + datetime.timedelta(hours=n)
十六進sを整数に変換する	int(s, 16)
サンディーブラウン色として配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='sandybrown')
ライトイエロー色で配列xdataについての柱状グラフをプロットする	plt.hist(xdata, color='lightyellow')
ダークスラテグレー色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='darkslategray')
s全体を大文字・小文字を無視してパターンpatternにマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
リストxdataとリストydataについての散布図をパウダーブルー色で描画する	plt.plot(xdata, ydata, c='powderblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークオレンジに設定する	plt.plot(xdata, ydata, c='darkorange')
リストxdataとリストydataについてディムグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
オブジェクトobjのtextフィールドの値を見る	getattr(obj, text)
ペールグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='palegreen')
リストxdataとリストydataについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
レベッカパープル色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='rebeccapurple')
スラグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='slategrey')
リストxdataとリストydataについて散布図を描画して、マーカーの色を赤に設定する	plt.plot(xdata, ydata, c='red')
グレー色の折れ線を描く	plt.plot(xdata, ydata, color='gray')
イエローグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
カウンタaCounterから高頻出項目をn個、リストとして使う	aCounter.most_common(n)
dsカラムの欠損値を最頻値にセットする	ds.fillna(ds.mode().iloc[0])
データ列dsが正規分布からどの程度尖っているか調べる	ds.skew()
デックdeqの先頭にリストiterableの各要素を追加する	deq.extendleft(iterable)
重なりを見やすく散布図を小麦色のマーカーで描画する	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
デックdeqのn番目	deq[n]
逆順のデックdeqを使う	reversed(deq)
ヒストグラムを半透明にする	plt.hist(xdata, alpha=0.5)
リストxdataとリストydataについてライム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lime')
dsカラムのモード	ds.mode()
配列xdataと数列ydataについて散布図を描画してマーカーの色をベージュに設定する	plt.plot(xdata, ydata, c='beige')
重なりを見やすく散布図をダーク・スラテグレー色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
ミディアムオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
データフレームdfのカラムcolがx、かつカラムcol2がx2である行を抽出する	df[(df[col] == x) & (df[col2] == x2)]
オプションで、BOM付きを使う	encoding = 'utf_8_sig'
dfからtyのカラムの名前一覧	df.select_dtypes(ty).columns
xの絶対値	abs(x)
折れ線に四角マーカーを用いる	plt.plot(xdata, ydata, marker='s')
データフレームdfのリストalistカラムの最頻値の出現回数	df[alist].freq()
破線グラフの色をアンティークホワイトとする	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
ライトグリーン色としてリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='lightseagreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークサーモンに設定する	plt.plot(xdata, ydata, color='darksalmon')
配列xdataとリストydataの折れ線グラフに、赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')
破線の色をスレートブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
データフレームdfからランダムにn行を抽出する	df.sample(n)
配列xdataと配列ydataについて散布図を描画して、色をパウダーブルーに指定する	plt.plot(xdata, ydata, c='powderblue')
数列xdataと配列ydataについて紺碧色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='azure')
リストxdataとリストydataについての散布図をパレットトルコイズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
データフレームdfのカラムcolの欠損値を最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
ファイルパスfilenameを追加できるように開く]	open(filename, mode='a')
リストxdataとリストydataについて破線グラフを描画して、その色をミスティローズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
データフレームdfのcolカラムがxより小さいデータを取り出す	df[df[col] < x]
オレンジレッド色の折れ線をプロットする	plt.plot(xdata, ydata, color='orangered')
リストxdataとリストydataについての散布図をオレンジ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='orange', alpha=0.5)
列iterableの各要素に対して、関数predicatefuncがtrueであればその要素を出力する	itertools.takewhile(predicatefunc, iterable)
折れ線グラフの色をピーチパフに設定する	plt.plot(xdata, ydata, color='peachpuff')
折れ線グラフの三角マーカーを黒くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
デックdeqのn〜n2の部分要素	collections.deque(itertools.islice(deq, n, n2))
dfのリストalist列のNaNを直後の値で埋める	df[alist].fillna(method='bfill')
リストxdataをダークターコイズ色のヒストグラムで描画する	plt.hist(xdata, color='darkturquoise')
リストxdataと数列ydataについてアイボリー色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='ivory')
リストxdataと配列ydataの散布図をデピンク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
日付adateからn週間分、減算する	adate - datetime.timedelta(weeks=n)
nがn2以下、または、n3以上か調べる	n <= n2 or n >= n3
ミディアムオーキッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumorchid')
再帰数の上限を上げる	sys.setrecursionlimit(1000000)
リストalistをシャッフルする	random.shuffle(alist)
シエナ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
散布図にパールバイオレットレッド色のマーカーを使う	plt.plot(xdata, ydata, c='palevioletred')
リストxdataとリストydataについて散布図を描画して、マーカーの色をシアンに設定する	plt.plot(xdata, ydata, c='cyan')
折れ線グラフを破線に設定する	plt.plot(xdata, ydata, linestyle='dashed')
散布図にスラグレー色のマーカーを使う	plt.plot(xdata, ydata, c='slategrey')
カウンタaCounterを上位n個カウントが多い順に列挙する	aCounter.most_common(n)
データ列xdataについてのヒストグラムをサーモン色で描く	plt.hist(xdata, color='salmon')
ダーク・スラテグレーで数列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='darkslategrey')
リストxdataについてのヒストグラムをカデットブルーで描画する	plt.hist(xdata, color='cadetblue')
アヤメのデータセットをロードする	sns.load_dataset('iris')
破線の色をオールドレースに指定する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
リストxdataをマルーン色のヒストグラムで描画する	plt.hist(xdata, color='maroon')
タプルatupleのn番目からn2番目までの部分	atuple[n:n2]
ゲインズボロ色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
列iterableとリストiterable2の直積を得る	itertools.product(iterable, iterable2)
リストxdataとリストydataの折れ線に、線幅nの星マーカーを描く	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
keyが辞書adict上で未定義か調べる	key not in adict
ダークサーモン色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
dfの列colとカラムcol2の相関行列を求める	df[[col, col2]].corr()
Pandasで、データ列dsを日付データに変換し、データフレームdfのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
リストxdataとイテラブルydataについてのヒストグラムを横に並べて描画する	plt.hist([xdata, ydata], color=['b', 'r'])
sの右側からs2を取り除く	s.rstrip(s2)
折れ線グラフの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, color='palevioletred')
sをs2で区切って文字列リストに変換する	s.split(s2)
ダークスラテグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
リストxdataとリストydataについての散布図にカラーコードrgbの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
ヘッダー行を右寄せに設定する	pd.set_option('colheader_justify', 'right')
リストxdataをダークスレートブルー色のヒストグラムで描画する	plt.hist(xdata, color='darkslateblue')
配列xdataとリストydataについてパールバイオレットレッド色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
リストxdataとイテラブルydataの散布図を描画して色をライトグリーンに設定する	plt.plot(xdata, ydata, c='lightgreen')
リストxdataとリストydataの折れ線グラフに三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
散布図にインディアンレッド色のマーカーを使う	plt.plot(xdata, ydata, c='indianred')
イエローグリーン色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='yellowgreen')
散布図に赤い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='r')
ミディアムパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
データフレームdfのカラムcolの第三四分位数	df[col].quantile(0.75)
オプションで、書き込みモードに設定する	mode = 'w'
sを右トリムする	s.rstrip(s2)
リストalistをタプル化する	tuple(alist)
グラフにx=0の一点鎖線を付ける	plt.axvline(x=0, linestyle='dashbot')
チョコレート色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='chocolate')
リストxdataとリストydataについて破線グラフを描画して、その色をハリウッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
オレンジ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='orange')
データ列xdataと配列ydataについての散布図をコーラル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='coral', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
散布図にスノー色のマーカーを使う	plt.plot(xdata, ydata, c='snow')
インディゴ色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
データ列xdataと配列ydataについて破線グラフを描画して、その色をダーク・スラテグレーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
重なりを見やすく散布図をミディアムパープル色のマーカーで描く	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
ファイルfilenameを読み込みモードでオープンして]、fとする	f = open(filename, mode='r')
配列xdataとリストydataについてパープル色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='purple')
リストxdataと配列ydataについてスプリンググリーン色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
ミディアムスプリンググリーン色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
リストxdataとリストydataについて折れ線グラフを描画して、色をダーク・スラテグレーにする	plt.plot(xdata, ydata, color='darkslategrey')
ミディアムスプリンググリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumspringgreen')
ペールグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
オプションで、n番目のカラムをインデックスにセットする	index_col = n
ダークサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
破線グラフの色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='grey')
ダークバイオレット色で数列xdataとデータ列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
ダークグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgray')
日時dtの分数	dt.minite
リストxdataと配列ydataについて散布図を描画してマーカーの色をロージーブラウンに変更する	plt.plot(xdata, ydata, c='rosybrown')
整数nをゼロパディングでn2桁の文字列に変換する	str(n).zfill(n2)
折れ線グラフの色をシルバーに設定する	plt.plot(xdata, ydata, color='silver')
重なりを見やすくライトスレイグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をナバホホワイトに設定する	plt.plot(xdata, ydata, c='navajowhite')
dsの各データが何回出現するか確認する	ds.value_counts()
リストxdataとリストydataの折れ線グラフに、大きさnの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markersize=n)
日時dtをタイムスタンプに変換する	dt.timestamp()
グレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='grey')
数列xdataと配列ydataについて散布図を描画して、色をサドルブラウンにする	plt.plot(xdata, ydata, c='saddlebrown')
リストxdataとリストydataについての散布図をブラウン色で描画する	plt.plot(xdata, ydata, c='brown')
arrayをビン数nでビン分割する	pd.cut(array, n)
何回まで再帰ができるか知る	sys.getrecursionlimit()
データフレームdfを丸める	df.round()
事前にASCII限定としてパターンpatternをコンパイルする	re.compile(pattern, flag=re.ASCI)
数式として、eのzについてのn階微分を求める	sympy.diff(e, z, n)
sの接頭辞からs2を取り除く	s.removeprefix(s2)
データフレームdfのカラムcolに重複があれば、マスクする	df.duplicated(subset=col)
リストxdataとリストydataについての散布図をミディアムスレートブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
配列xdataとリストydataについて散布図を描画してマーカーを下三角にする	plt.plot(xdata, ydata, marker='v')
散布図にチョコレート色のマーカーを使う	plt.plot(xdata, ydata, c='chocolate')
線幅nの一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
dfのcolの第二四分位数	df[col].median()
デピンク色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
リストxdataとリストydataについての散布図を青色で描画する	plt.plot(xdata, ydata, c='blue')
スレートブルー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
オプションで、EUCを使う	encoding = 'euc_jp'
オプションで、ファイルに出力する	file = sys.open(filename, 'w')
リストxdataとリストydataについてオレンジレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orangered')
配列xdataと配列ydataの破線グラフを描画して、その色をダークカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
折れ線の色をフクシアに設定する	plt.plot(xdata, ydata, color='fuchsia')
折れ線グラフのポイントマーカーを赤くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')
ダークグリーン色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
折れ線グラフの色をモカシンに設定する	plt.plot(xdata, ydata, color='moccasin')
リストxdataとリストydataの折れ線グラフに、青いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
データフレームdfの数値をまとめて丸めて、インプレイスする	df.round(inplace=True)
ライトグリーン色のマーカーを用いて重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
折れ線グラフの色をクリムゾンに設定する	plt.plot(xdata, ydata, color='crimson')
データフレームdfからカテゴリデータのカラムを抽出する	df.select_dtypes('object')
オブジェクトobjのtextプロパティの値	getattr(obj, text)
インディアンレッド色の折れ線を描画する	plt.plot(xdata, ydata, color='indianred')
リストxdataとリストydataについて破線グラフを描画して、その色をアイボリーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
データフレームdfのn行までを抽出する	df[:n]
リストalistをランダムにシャッフルする	random.shuffle(alist)
折れ線グラフの色をオレンジに設定する	plt.plot(xdata, ydata, color='orange')
配列xdataとリストydataについての散布図をアクア色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
折れ線グラフの上三角印の線幅をnに指定する	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
リストxdataとリストydataの点線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
リストxdataとイテラブルydataの折れ線グラフに、黄色い大バツ印を描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
リストxdataをミディアムアクアマリン色のヒストグラムとして描く	plt.hist(xdata, color='mediumaquamarine')
リストxdataとリストydataについての散布図をライトブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
リストxdataとリストydataの折れ線グラフを描画してマーカーを四角変える	plt.plot(xdata, ydata, marker='s')
円周率	math.pi
rgbのポイントマーカーを散布図に使う	plt.plot(xdata, ydata, marker='.', c=rgb)
nからn2までのn3ごとによるスライス	slice(n, n2, n3)
アクア色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='aqua')
dfのリストalistカラムの中に日付データvalueが含まれる	df[alist].isin([value])
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークスレートブルーに設定する	plt.plot(xdata, ydata, c='darkslateblue')
リストxdataとリストydataについて破線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
下三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='v')
ブルーバイオレット色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='blueviolet')
sをコロンで区切る	s.split(':')
リストxdataとイテラブルydataについて折れ線グラフを描画してその色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, color='mediumaquamarine')
ミディアムスプリンググリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumspringgreen')
nから無限にカウントダウンする	itertools.count(start=n, step=-1)
リストxdataと配列ydataについて折れ線グラフを描画して、その色をミディアムシアグリーンに変更する	plt.plot(xdata, ydata, color='mediumseagreen')
ダークサーモン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
アクア色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='aqua')
オリーブ色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='olive', alpha=0.5)
本日が土曜日か調べる	datetime.datetime.today().weekday() == 5
綺麗なグラフを使う	import seaborn as sns
ファイルfilenameを読み込みできるようにオープンする]	open(filename, mode='r')
リストxdataとリストydataについての散布図をダークゴールデンロッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
赤色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='red')
sの英大文字を英小文字にする	s.lower()
散布図をコーンズシルク色のマーカーとして描画する	plt.plot(xdata, ydata, c='cornsilk')
実線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='solid', color='k')
データフレームdfをカラムcolとカラムcol2によって昇順にソートする	df.sort_values(by=[col,col2], ascending=True)
リストxdataとリストydataについてパパイヤウィップ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
オブジェクトobjのバイトサイズを知る	sys.getsizeof(obj)
日付と時間dtは何秒か知る	dt.second
破線グラフの色を耐火レンガに設定する	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
全ての数字	string.digits
リストxdataとリストydataについて折れ線グラフを描画して、その色をシーグリーンに設定する	plt.plot(xdata, ydata, color='seagreen')
エクセルファイルファイルfilenameから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
破線グラフの色を淡いピンク色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
散布図にカーキ色のマーカーを使う	plt.plot(xdata, ydata, c='khaki')
オブジェクトobjをユーザ向けの文字列に変換する	str(obj)
リストxdataとリストydataについてライトイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
objはリストクラスのインスタンスかどうか確認する	isinstance(obj, list)
リストxdataとリストydataについての散布図をコーンフラワーブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
Pandasで、エポック秒のデータ列dsから日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
紺碧色の折れ線を描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='azure')
リストxdataとリストydataについて破線グラフを描画して、その色をネイビーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navy')
データフレームdfの値が欠損値	df.isna()
xの逆正弦	math.asin(x)
Pandasで、データフレームdfのカラムcolをインデックスにする	df.set_index(col, inplace=True)
ミディアムブルー色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
sを青色で表示する	print(f'\033[34m{s}\033[0m')
ダークグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkgreen')
データフレームdfをカラムcol毎にグループ化して、最大値を求める	df.groupby(col).max()
パパイヤウィップ色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
破線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
折れ線グラフの色をライムグリーンに設定する	plt.plot(xdata, ydata, color='limegreen')
実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid')
データフレームdfのカラムcol、カラムcol2、カラムcol3を抽出する	df[[col, col2, col3]]
リストxdataとリストydataについて折れ線グラフを描画して、その色をデピンクに設定する	plt.plot(xdata, ydata, color='deeppink')
リストxdataとリストydataの赤い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
リストxdataとリストydataについて折れ線を描画して、色を小麦にする	plt.plot(xdata, ydata, color='wheat')
データ列xdataと配列ydataについて破線グラフを描画して、その色をスラグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
リストxdataとリストydataについて破線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
重なりを見やすくペルー色としてリストxdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='peru', alpha=0.5)
辞書adictと辞書adict2を合体する	adict | adict2
数列xdataとリストydataについて破線を描画して、色をプラムとする	plt.plot(xdata, ydata, linestyle='dash', color='plum')
散布図にオレンジレッド色のマーカーを使う	plt.plot(xdata, ydata, c='orangered')
リストxdataとデータ列ydataの折れ線に、緑色の▲マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
リストxdataとリストydataについての散布図をカーキ色で描画する	plt.plot(xdata, ydata, c='khaki')
リストiterableとリストiterable2の直積	itertools.product(iterable, iterable2)
データフレームdfの重複していない行のみを抽出する	df[not df.duplicated(keep=False)]
データフレームdfの相関行列	df.corr()
リストxdataとリストydataについて破線グラフを描画して、その色をオリベドラブに設定する	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
折れ線グラフの△印を黒くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
リストxdataとイテラブルydataの折れ線グラフに、大きさnの▽マーカーをプロットする	plt.plot(xdata, ydata, marker='v', markersize=n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークシアンに設定する	plt.plot(xdata, ydata, color='darkcyan')
リストxdataと配列ydataについてミディアムバイオレットレッド色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
イテラブルxdataと数列ydataの散布図を描画して、マーカーの色をシルバーに指定する	plt.plot(xdata, ydata, c='silver')
ゲインズボロ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
リストxdataとリストydataについて散布図を描画して、マーカーの色をバイオレットに設定する	plt.plot(xdata, ydata, c='violet')
alistをビン分割する	pd.cut(alist, alist)
データフレームdfのcolカラムの秒を使う	df[col].dt.second
ビン数nのヒストグラムをプロットする	plt.hist(xdata, bins=n)
nからn2の値を引いてnに代入する	n -= n2
破線グラフの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
重なりを見やすく配列xdataと数列ydataについての散布図をアザミ色としてプロットする	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
デックdeqの先頭に文字列elementを追加する	deq.appendleft(element)
n2がnより大きくかつn3未満か	n < n2 and n2 < n3
リストxdataと配列ydataについてデピンク色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
折れ線グラフの色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, color='midnightblue')
リストxdataとリストydataについて破線グラフを描画して、その色をゲインズボロに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
破線グラフの色をビスクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
配列xdataと配列ydataについて折れ線グラフを描画して、その色をミディアムブルーにセットする	plt.plot(xdata, ydata, color='mediumblue')
xの常用対数	math.log10(x)
リストxdataとリストydataについての散布図をチョコレート色で描画する	plt.plot(xdata, ydata, c='chocolate')
データフレームdfをインデックスによってソートする	df.sort_index()
リストxdataとリストydataについての散布図をグリーンイエロー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
データフレームdfをcol列とcol2列の組み合わせごとに集約して関数適用した値	df.groupby([col, col2], as_index=False).agg(func)
コマンド引数を一案として得る	sys.argv[1:]
リストxdataと配列ydataの破線を描画して、その色をハリウッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategray')
dsの欠損値を直前の値にセットする	ds.fillna(method='ffill')
黒い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='k')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークシアグリーンに設定する	plt.plot(xdata, ydata, color='darkseagreen')
s全体がパターンpatternに大文字・小文字を無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
dfをカラムcolごとにグループ化して、最大値を求める	df.groupby(col).max()
リストxdataをナバホホワイト色のヒストグラムで描画する	plt.hist(xdata, color='navajowhite')
散布図にサーモン色のマーカーを使う	plt.plot(xdata, ydata, c='salmon')
グラフに鉛直方向の点線を設定する	plt.axvline(x=0, linestyle='dotted')
Pandasでエクセルデータファイルfilenameから複数のシートを読む	pd.read_excel(filename, sheet_name=[n, n2])
リストxdataとリストydataの折れ線グラフを描画して、色をダークバイオレットとする	plt.plot(xdata, ydata, color='darkviolet')
データフレームdfのカラムcolがxでない行をフィルタする	df[df[col] == x]
データフレームdfをcol毎に集計する	df.groupby(col)
散布図にラベンダー色のマーカーを用いる	plt.plot(xdata, ydata, c='lavender')
JSONLファイルfilenameを読み込む	pd.read_json(filename, orient='records', lines=True)
折れ線グラフのマーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
データフレームを表示するとき、表示可能な列数の最大値をnにセットする	pd.set_option('display.max_columns', n)
リストxdataとリストydataについて折れ線グラフを描画してその色をライトコーラル変える	plt.plot(xdata, ydata, color='lightcoral')
nが一桁の正の数か調べる	0 <= n <= 9
破線グラフの色をインディアンレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indianred')
配列xdataとリストydataについてスノー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='snow')
ディムグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='dimgray')
dfのcol毎の個数	df.groupby(col).count()
リストxdataとリストydataの散布図をダークスレートブルー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
配列xdataとイテラブルydataについて折れ線グラフを描画して、その色をダークグリーンに指定する	plt.plot(xdata, ydata, color='darkgreen')
データフレームdfをカラムcol毎にグループ化して、合計を求める	df.groupby(col).sum()
配列xdataの変遷を折れ線グラフに描画する	plt.plot(range(len(xdata)), xdata)
トマト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='tomato')
散布図に赤色の▼印を使用する	plt.plot(xdata, ydata, marker='v', c='r')
リストxdataとリストydataについて散布図を描画して、マーカーの色をフローラルホワイトに設定する	plt.plot(xdata, ydata, c='floralwhite')
nかつn2	n and n2
リストxdataとリストydataの折れ線グラフに、青い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
数式として、eの微分を求める	sympy.diff(e)
数式として、eのn階微分を求める	sympy.diff(e, z, n)
xを文字列型に変換する	str(x)
ライトグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightseagreen')
折れ線グラフの色をラベンダーに設定する	plt.plot(xdata, ydata, color='lavender')
dsを分割数nとしてビン分割する	pd.cut(ds, n)
xの角度	math.degrees(x)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgray')
データ列dsの母標準偏差	ds.std(ddof=0)
データフレームdfのインデックスの名前をまとめて、sからs2に付け直す	df.rename(index={s: s2})
リストxdataとリストydataについて散布図を描画して、マーカーの色をスラグレーに設定する	plt.plot(xdata, ydata, c='slategrey')
リストxdataとリストydataについての散布図を貝殻色で描画する	plt.plot(xdata, ydata, c='seashell')
日付と時間dtからn時間分、引く	dt - datetime.timedelta(hours=n)
データ列xdataと配列ydataについて散布図を描画して、色をブルーバイオレットに設定する	plt.plot(xdata, ydata, c='blueviolet')
グレー色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='gray', alpha=0.5)
折れ線グラフの色をダークサーモンに設定する	plt.plot(xdata, ydata, color='darksalmon')
数列xdataをインディゴ色のヒストグラムとして描画する	plt.hist(xdata, color='indigo')
リストxdataとリストydataについての散布図をブルーバイオレット色で描画する	plt.plot(xdata, ydata, c='blueviolet')
データフレームdfの欠損値を最頻値に設定する	df.fillna(df.mode().iloc[0])
リストxdataと配列ydataについてロイヤルブルー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
配列xdataとリストydataについて破線グラフを描画してその色をライムにする	plt.plot(xdata, ydata, linestyle='dash', color='lime')
dfをalistのカラムによって並べ直して入れ替える	df.sort_values(by=alist, inplace=True)
データフレームdfの欠損値を最大値に設定する	df.fillna(df.max())
リストxdataとリストydataについて散布図を描画して、マーカーの色をフォレストグリーンに設定する	plt.plot(xdata, ydata, c='forestgreen')
リストxdataと配列ydataについて実線を描画して、その色をrgbに設定する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
dsを四分位数ごとにビン分割する	pd.qcut(ds, 4)
リストxdataと数列ydataの線幅nの折れ線グラフを描画する	plt.plot(xdata, ydata, linewidth=n)
sのn番目以前にs2があるか調べる	s.find(s2, end=n) != -1
破線グラフの色をブルーバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
s内に数字があるか調べる	any(c.isdigit() for c in s)
データフレームdfの相関行列をヒートマップで描画する	sns.heatmap(df.corr())
データ列xdataとデータ列ydataについてグリーン色の折れ線グラフを描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='green')
ブルーバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
matplotlibのカラーパレットをsに変更する	sns.set(pallete=s)
リストxdataとリストydataの折れ線グラフを描画して、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
スレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
折れ線グラフの丸マーカーを黄色くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
リストxdataとリストydataについてミスティローズ色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
黒いバツマーカーで散布図を描く	plt.plot(xdata, ydata, marker='x', c='k')
ダークスレートブルー色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
ゲインズボロ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='gainsboro')
デピンク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='deeppink')
散布図にタン色のマーカーを使う	plt.plot(xdata, ydata, c='tan')
データ列dsの最頻値	ds.mode()
データ列dsを100の位で四捨五入する	ds.round(-2)
リストxdataとリストydataについて散布図を描画して、色をホワイト変える	plt.plot(xdata, ydata, c='white')
折れ線グラフの色をホワイトスモークに設定する	plt.plot(xdata, ydata, color='whitesmoke')
リストxdataとリストydataについて折れ線グラフを描画して、その色を青に設定する	plt.plot(xdata, ydata, color='blue')
リストxdataとリストydataについての散布図をライトシアン色で描画する	plt.plot(xdata, ydata, c='lightcyan')
リストxdataとリストydataの折れ線グラフを描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
リネン色として重なりを見やすく配列xdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='linen', alpha=0.5)
データフレームdfのリストalist列の25パーセンタイルを求める	df[alist].quantile(0.25)
リストxdataとリストydataについての散布図をミディアムスプリンググリーン色で描画する	plt.plot(xdata, ydata, c='mediumspringgreen')
xの自然対数	math.log(x)
折れ線グラフの色をアイボリーに設定する	plt.plot(xdata, ydata, color='ivory')
リストxdataとリストydataについて破線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
リストxdataとリストydataの折れ線グラフに線幅nの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
arrayを中央値でビン分割する	pd.qcut(array, 2)
空の両端キューを新しく作って、Xに代入する	X = collections.deque()
データ列xdataとリストydataの散布図をベージュ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='beige', alpha=0.5)
dfのインデックスの名前を一度にsからs2に付け直す	df.rename(index={s: s2})
パレットトルコイズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='paleturquoise')
リストxdataをピーチパフ色のヒストグラムで描画する	plt.hist(xdata, color='peachpuff')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムバイオレットレッドに指定する	plt.plot(xdata, ydata, c='mediumvioletred')
データ列dsの欠損値を最小値で埋める	ds.fillna(ds.min())
リストxdataとリストydataについての散布図にカラーコードrgbの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストxdataとリストydataの折れ線グラフに、線幅nの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
折れ線グラフの色をダークレッドに設定する	plt.plot(xdata, ydata, color='darkred')
分母の最大値を指定して近似したい	q.limit_denominator(max_denominator=1000000)
n進sを整数に変換する	int(s, n)
ライトスチールブルー色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='lightsteelblue')
折れ線グラフのマーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストxdataとリストydataについての散布図をベージュ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='beige', alpha=0.5)
リストxdataと配列ydataについて散布図を描画して、色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, c='mediumseagreen')
リストalistを逆順にする	alist[::-1]
dfのカラムcolが何年か確認する	df[col].dt.year
ミッドナイトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
データフレームdfのカラムcolをsにリネームする	df.rename(columns={col: s})
ダークグレー色で散布図を描く	plt.plot(xdata, ydata, c='darkgrey')
リストxdataと数列ydataについての散布図をハリウッド色で重なりを見やすく描く	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
リストiterableをsで連結する	s.join(map(str, iterable))
リストxdataとデータ列ydataの折れ線グラフを描画して、その色をライトシアンに設定する	plt.plot(xdata, ydata, color='lightcyan')
リストiterableのイミュータブルなセット	frozenset(iterable)
リストxdataとリストydataの折れ線グラフを描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
グラフのカラーパレットを淡くする	sns.set(pallete='muted')
イテラブルxdataとデータ列ydataについて耐火レンガ色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
点線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='dotted', color='b')
データ列xdataとデータ列ydataの折れ線グラフを描画して色をsにする	plt.plot(xdata, ydata, color=s)
0からnの範囲	range(n)
ネイビー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='navy', alpha=0.5)
データフレームdfが重複している	df.duplicated()
空のリスト	[]
リストxdataとデータ列ydataの散布図を描画して、マーカーの色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, c='darkslategrey')
Pandasでフォーマットとしてdfのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
破線グラフの色をブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='brown')
折れ線グラフを点線に設定する	plt.plot(xdata, ydata, linestyle='dotted')
sがs2で終わるか調べる	s.endswith(s2)
リストxdataとリストydataについてロージーブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
リストxdataについてのヒストグラムをパールバイオレットレッドとして描く	plt.hist(xdata, color='palevioletred')
ライムグリーン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
データフレームdfを列col毎にNaNを含めて集約する	df.groupby(col, dropna=False)
xがNaNか調べる	math.isnan(x)
散布図にパープル色のマーカーを使う	plt.plot(xdata, ydata, c='purple')
折れ線の色をパウダーブルーに設定する	plt.plot(xdata, ydata, color='powderblue')
オブジェクトobjのメモリビュー	memoryview(obj)
textとtext2をファイルパスとして結合する	os.path.join(text, text2)
sの末尾からs2を探す	s.rfind(s2)
散布図をペルー色のマーカーで描画する	plt.plot(xdata, ydata, c='peru')
0から始まる無限数列	itertools.count()
ライトコーラル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightcoral')
グラフ中のフォントを日本語表示に設定する	sns.set(font='IPAexGothic')
配列xdataとイテラブルydataの散布図を描画してマーカーの色をシーグリーンにする	plt.plot(xdata, ydata, c='seagreen')
リストxdataとリストydataについての散布図をダークレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
リストxdataとリストydataについての散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
データフレームdfの重複を見る	df.duplicated()
ライトスレイグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightslategrey')
データフレームdfをカラムcolによって昇順にソートする	df.sort_values(by=col, ascending=True)
リストxdataとリストydataについての散布図をライムグリーン色で描画する	plt.plot(xdata, ydata, c='limegreen')
dictでデータ列dsの値をまとめて変更する	ds.replace(adict)
データ列dsを丸める	ds.round()
数列xdataとデータ列ydataについての散布図をダークバイオレット色で描画する	plt.plot(xdata, ydata, c='darkviolet')
チョコレート色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をパープルに設定する	plt.plot(xdata, ydata, c='purple')
本日の日時	datetime.datetime.today()
文字列elementの出力を改行なしに行う	print(alist, end='')
フォレストグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
データ列xdataを小麦色の柱状図として描画する	plt.hist(xdata, color='wheat')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークバイオレットに設定する	plt.plot(xdata, ydata, color='darkviolet')
リストxdataをオレンジレッド色のヒストグラムで描画する	plt.hist(xdata, color='orangered')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライムグリーンに設定する	plt.plot(xdata, ydata, color='limegreen')
日時dtにn時間分、加算する	dt + datetime.timedelta(hours=n)
ファイルfilenameをバイナリ書き込みモードでオープンして]、fとする	f = open(filename, mode='wb')
リストxdataとリストydataについて散布図を描画して、丸マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストxdataと配列ydataの実線を描画してその色を青くする	plt.plot(xdata, ydata, linestyle='solid', color='b')
データフレームdfを列colによって破壊的に並べる	df.sort_values(by=col, inplace=True)
ピンク色として柱状グラフを描画する	plt.hist(xdata, color='pink')
Pandasでデータフレームdfのカラムcolをインデックスにする	df.set_index(col, inplace=True)
sのの中で複数行対応のパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s, flags=re.MULTILINE)
dfのリストalistカラムを百の位で丸めて、整数型にする	df[alist].round(-2).astype(int)
リストxdataとリストydataについて折れ線グラフを描画して、その色をフォレストグリーンにする	plt.plot(xdata, ydata, color='forestgreen')
破線グラフの色をナバホホワイトに指定する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
sを白色で表示する	print(f'\033[37m{s}\033[0m')
データフレームdfのリストalistカラムのNaNを最大値に設定する	df[alist].fillna(df[alist].max())
ダークスラテグレー色でヒストグラムを描画する	plt.hist(xdata, color='darkslategray')
折れ線グラフの丸マーカーを黒くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
xの小数点以下'2'桁までの文字列に変換する	':.2f'.format(x)
折れ線グラフのダイアモンド印を緑色にする	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
リストxdataと配列ydataについての散布図をゴールド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='gold', alpha=0.5)
ホワイト色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='white', alpha=0.5)
フォレストグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='forestgreen')
イテラブルxdataとリストydataの折れ線グラフに、大きさnの四角印を描画する	plt.plot(xdata, ydata, marker='s', markersize=n)
改行でsを分割し文字列リストにする	s.splitlines()
配列xdataとリストydataについて折れ線を描画して、その色をダークオーキッドとする	plt.plot(xdata, ydata, color='darkorchid')
リストxdataをヒストグラムにする	plt.hist(xdata)
リストxdataとリストydataについてダークグリーン色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
sのn番目とn2番目の間にs2が存在する	s.find(s2, start=n, end=n2) != -1
リストxdataについてのヒストグラムを描画して、透明度をxに設定する	plt.hist(xdata, alpha=x)
本日をISO形式の文字列に変換する	datetime.datetime.today().isoformat()
データフレームdf中に文字列valueと文字列value2がいくつあるか数える	df.isin([value, value2]).sum()
データフレームdfのカラムcol毎の合計	df.groupby(col).sum()
ブランチドアーモンド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
スラグレー色のヒストグラムで配列xdataを描く	plt.hist(xdata, color='slategrey')
データフレームdfのカラムcol中に文字列valueと文字列value2がいくつあるか数える	df[col].isin([value, value2]).sum()
配列xdataとリストydataの折れ線グラフを描画して、マーカーを左三角にする	plt.plot(xdata, ydata, marker='<')
リストxdataを黄色色のヒストグラムで描画する	plt.hist(xdata, color='yellow')
折れ線グラフの色をダークカーキに設定する	plt.plot(xdata, ydata, color='darkkhaki')
配列xdataをライトスレイグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightslategrey')
アリスブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='aliceblue')
__X__パレットをグラフ全般に使用する	sns.set(pallete='colorblind')
インプレースにdeqの要素を反転する	deq.reverse()
破線グラフの色を紺碧に設定する	plt.plot(xdata, ydata, linestyle='dash', color='azure')
リストxdataについてのヒストグラムをフォレストグリーン色で描画する	plt.hist(xdata, color='forestgreen')
ファイルfilenameを文字コードtextで書き込み用にオープンする]	open(filename, mode='w', encoding=text)
日付と時刻dtと日時dt2の時間差を秒数で計算する	(dt - dt2).total_seconds()
リストxdataと数列ydataについて破線グラフを描画して、色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
数列xdataと配列ydataについてダークレッド色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkred')
リストxdataとリストydataについて破線グラフを描画して、その色をフォレストグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
リストalistのn番目以降の部分を取り出す	alist[n:]
マルーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='maroon')
パレットトルコイズ色でリストxdataと配列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
ライトスレイグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightslategray')
リストxdataとリストydataについての散布図をビスク色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
リストxdataとデータ列ydataの折れ線グラフに、黒いクロス印を描く	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
新たにキューをリストiterableから生成して、Xとする	X = collections.deque(iterable)
オールドレース色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='oldlace')
nとn2が同じ値かどうか調べる	n == n2
オブジェクトobjは整数クラスか調べる	isinstance(obj, int)
数列xdataと数列ydataについてダークグレー色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
マゼンタ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='magenta')
オプションで、SJISを使う	encoding = 'shift_jis'
リストxdataとリストydataの折れ線グラフに、線幅nの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
破線グラフの色をグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='green')
リストxdataとリストydataについての散布図をコーラル色で描画する	plt.plot(xdata, ydata, c='coral')
リストxdataをフローラルホワイト色のヒストグラムで描画する	plt.hist(xdata, color='floralwhite')
dfの列の名前をまとめて、sをs2に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
リストiterableを累加する	itertools.accumulate(iterable)
オブジェクトobjはバイト列クラスか調べる	isinstance(obj, bytes)
オプションで標準出力を出力先にする	file = sys.stdout
f全体を文字列として読み込む	f.read()
リストxdataとリストydataについて破線グラフを描画して、その色をシーグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
データ列xdataについての柱状グラフをライトサーモン色として描く	plt.hist(xdata, color='lightsalmon')
リストxdataをオリベドラブ色のヒストグラムで描画する	plt.hist(xdata, color='olivedrab')
レモンシフォン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
アザミ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='thistle')
デックdeq中に文字列elementが含まれてるか調べる	element in deq
ライトグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
シャルトルーズ色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
リストxdataとリストydataについてサドルブラウン色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
リストxdataとリストydataの線幅nの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
空のカウンタを新しく作って、Xに代入する	X = collections.Counter()
xの印字可能な文字列	ascii(x)
データ列dsを等量でn個にビン分割する	pd.qcut(ds, n)
sを青色にする	f'\033[34m{s}\033[0m'
線幅nの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
タプルatupleのn番目以降の部分を取り出す	atuple[n:]
dfのcol列がリストalistに含まれるデータを選択する	df[df[col].isin(alist)]
データフレームdfをカラムcol毎にグループ化して、カラムcol2の最小値を求める	df.groupby(col)[col2].min()
大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X')
グリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='green')
整数nの八進表現	oct(n)
データフレームdfのカラムcolが正規分布からどの程度、歪んでいるか見る	df[col].kurt()
リストxdataについての柱状図をベージュを用いて描画する	plt.hist(xdata, color='beige')
ミスティローズ色の柱状グラフとしてリストxdataを描く	plt.hist(xdata, color='mistyrose')
グリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='green')
クリムゾン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='crimson')
リストxdataとデータ列ydataの散布図を描画して、マーカーの色をダークグリーンに設定する	plt.plot(xdata, ydata, c='darkgreen')
リストxdataとリストydataについてロイヤルブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
配列xdataとデータ列ydataについての散布図をライトコーラル色でプロットする	plt.plot(xdata, ydata, c='lightcoral')
折れ線グラフに三角マーカーを使う	plt.plot(xdata, ydata, marker='^')
辞書adictからkeyの値をエラーなく得る	adict.get(key, None)
パープル色でデータ列xdataについての柱状図をプロットする	plt.hist(xdata, color='purple')
ティール色で重なりを見やすく配列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='teal', alpha=0.5)
コーラル色で散布図を描く	plt.plot(xdata, ydata, c='coral')
リストxdataをダークターコイズ色のヒストグラムとして描画する	plt.hist(xdata, color='darkturquoise')
リストxdataとリストydataについて折れ線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, color='palegoldenrod')
リストxdataとリストydataについて散布図を描画して、色をミディアムパープルにセットする	plt.plot(xdata, ydata, c='mediumpurple')
配列xdataについての柱状図を紺碧色で描画する	plt.hist(xdata, color='azure')
リストxdataとリストydataについて散布図を描画して、マーカーの色をスノーに設定する	plt.plot(xdata, ydata, c='snow')
破線グラフの色をナバホホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
スプリンググリーン色で重なりを見やすくイテラブルxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
リストxdataとリストydataについてシャルトルーズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
オブジェクトobjがオブジェクトobj2に等しいか調べる	obj == obj2
破線グラフの色をダークシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
リストxdataとリストydataについての散布図を黄色色で描画する	plt.plot(xdata, ydata, c='yellow')
リストxdataをダークシアグリーン色のヒストグラムで描画する	plt.hist(xdata, color='darkseagreen')
リストiterableと列iterable2の全組み合わせを繰り返す	"for x, y in itertools.product(iterable, iterable2):
    pass"
ライム色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lime')
リストxdataとリストydataについて耐火レンガ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
データフレームdfのインデックスがnの行を抽出する	df.loc[n]
sを左トリムする	s.lstrip()
散布図を重なりを見やすくシャルトルーズ色のマーカーでプロットする	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
モカシン色のヒストグラムでデータ列xdataを描画する	plt.hist(xdata, color='moccasin')
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトイエローに設定する	plt.plot(xdata, ydata, color='lightyellow')
alistの各要素を関数funcに適用した結果でソートする	sorted(alist, key=func)
ミスティローズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mistyrose')
xにx2を加える	x + x2
リストxdataとリストydataについて折れ線グラフを描画して、その色をアクアに設定する	plt.plot(xdata, ydata, color='aqua')
日付adateををn分後に進める	adate + datetime.timedelta(minutes=n)
ライトシアンとしてヒストグラムを描く	plt.hist(xdata, color='lightcyan')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategray')
リネン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='linen')
データフレームdfから型tyのカラムの名前の一覧	df.select_dtypes(ty).columns
xが一桁の正の数か調べる	0 <= x <= 9
データフレームdfのカラムcolとカラムcol2を削除する	df.drop([col, col2], axis=1)
リストxdataとリストydataの折れ線グラフに、緑色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
ファイルfilenameからの入力ストリームを使う	open(filename)
データ列xdataと数列ydataについてミッドナイトブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
ダークスレートブルー色としてデータ列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkslateblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークターコイズに設定する	plt.plot(xdata, ydata, color='darkturquoise')
折れ線グラフの色をダークグレーとする	plt.plot(xdata, ydata, color='darkgrey')
配列xdataとリストydataの折れ線を描画してマーカーをバツ変える	plt.plot(xdata, ydata, marker='x')
リストxdataとリストydataについて散布図を描画して、四角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図にブラック色のマーカーを用いる	plt.plot(xdata, ydata, c='black')
__X__カラーパレットをグラフに使う	sns.set(pallete='muted')
アンティークホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='antiquewhite')
折れ線グラフの色を耐火レンガに設定する	plt.plot(xdata, ydata, color='firebrick')
オプションで先頭のカラムを行にする	index_col = 0
sを白色で出力する	print(f'\033[37m{s}\033[0m')
折れ線グラフの四角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='s', markersize=n)
リストiterableとリストiterable2の全組み合わせを繰り返す	"for x, y in itertools.product(iterable, iterable2):
    pass"
データフレームdfをリストalistで指定されたカラムによって昇順にソートする	df.sort_values(by=alist, ascending=True)
プラム色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='plum')
リストxdataとリストydataの折れ線グラフを透明度xで描画する	plt.plot(xdata, ydata, alpha=x)
ファイルfilenameをオープンして]、バイナリストリームを使う	open(filename, mode='rb')
イテラブルxdataと数列ydataについて散布図を描画して、マーカーの色をシアンに設定する	plt.plot(xdata, ydata, c='cyan')
ホットピンク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='hotpink')
nが1、もしくは2、もしくは3に等しいかどうか調べる	n == 1 or n == 2 or n == 3
リストxdataと配列ydataの折れ線グラフに青色のバツ印を描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
dfをJSONLファイルfilenameにヘッダを付けずに書き込む	df.to_csv(filename, header=None)
データ列xdataとリストydataについて折れ線グラフを描画して、色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, color='blanchedalmond')
折れ線グラフの▲マーカーを緑色にセットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
データフレームdf中のカラムcolを四分位数ごとにビン分割する	pd.qcut(df[col], 4)
dfのcolカラムとcol2カラムに重複があれば、削除する	df.drop_duplicates(subset=[col, col2])
赤い丸マーカーを散布図に使う	plt.plot(xdata, ydata, marker='o', c='r')
データフレームdfの先頭	df.head()
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして右ジョインする	pd.merge(df, df2, left_on=col, right_on=col2, how='right')
散布図にダーク・スラテグレー色のマーカーを使う	plt.plot(xdata, ydata, c='darkslategrey')
dfので、colの重複を見る	df.duplicated(subset=col)
配列xdataとリストydataについて黄色色の折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='yellow')
リストxdataとリストydataについてダークオレンジ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
デックdeqのn番目にオブジェクトelementを挿入する	deq.insert(n, element)
sからs2のパターンで日付に変換する	datetime.date.strptime(s, s2)
配列xdataとデータ列ydataの破線グラフを描画してその色をフローラルホワイトにする	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
モードでデータフレームdfのcolのNaNを補う	df[col].fillna(df[col].mode().iloc[0])
イテラブルxdataとリストydataの折れ線を描画して、その色をピンクに設定する	plt.plot(xdata, ydata, color='pink')
アクアマリン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
オレンジ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='orange')
リストxdataとイテラブルydataについて破線を描画して色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
オプションで、改行しないように設定する	end = ''
ダークグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkgreen')
nをn2で整数除算する	n // n2
sを長さnで左寄せにする	s.ljust(n)
arrayを等間隔でn個にビンニングする	pd.cut(array, n)
スノー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='snow')
配列xdataとデータ列ydataの折れ線グラフに、黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
リストxdataを青色のヒストグラムとして描画する	plt.hist(xdata, color='blue')
折れ線グラフの色をコーンフラワーブルーに変更する	plt.plot(xdata, ydata, color='cornflowerblue')
配列xdataと配列ydataについて散布図を描画して、マーカーの色をグレーに設定する	plt.plot(xdata, ydata, c='grey')
グラフで使うパレットを明るくする	sns.set(pallete='bright')
リストxdataとデータ列ydataの折れ線グラフを描画してマーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
数列xdataとリストydataについてコーンズシルク色の折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
リストxdataとイテラブルydataについてターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
日付と時刻dtをn年前にする	dt - datetime.timedelta(years=n)
dfのcolが正規分布からどの程度歪んでいるか見る	df[col].kurt()
データフレームdfのカラムcolの秒	df[col].dt.second
dsカラムを1000の位で丸めて、整数にする	ds.round(-3).astype(int)
リストxdataについての度数分布図をティール色で描画する	plt.hist(xdata, color='teal')
データ列xdataをライトグレー色のヒストグラムで描く	plt.hist(xdata, color='lightgrey')
リストxdataとデータ列ydataについて破線グラフを描画して、色をダークシアグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
リストxdataとリストydataについて小麦色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='wheat')
nをn2分の一にする	n /= n2
リストxdataとリストydataについて折れ線グラフを描画して、その色をスカイブルーに設定する	plt.plot(xdata, ydata, color='skyblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークターコイズに設定する	plt.plot(xdata, ydata, c='darkturquoise')
コーンズシルク色でリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='cornsilk')
折れ線グラフの左三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
リストxdataをサーモン色の柱状図を使って描く	plt.hist(xdata, color='salmon')
グレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gray')
リストalistの合計値	sum(alist)
sのn番目とn2番目の間にs2が含まれるか調べる	s.find(s2, start=n, end=n2) != -1
オブジェクトobjがPerson;$$クラスか調べる	isinstance(obj, TYPE)
ディムグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='dimgrey')
辞書adictのエントリ数	len(adict)
破線グラフの色をベージュ変える	plt.plot(xdata, ydata, linestyle='dash', color='beige')
レモンシフォン色として数列xdataについての度数分布図を描画する	plt.hist(xdata, color='lemonchiffon')
四分位数でデータフレームdf中のカラムcolを分割する	pd.qcut(df[col], 4)
データフレームdfをエクセルファイルファイルでfilenameに保存する	df.to_excel(filename)
リストxdataとリストydataについての散布図をミディアムパープル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
数列xdataとリストydataについての散布図をラベンダー色として描く	plt.plot(xdata, ydata, c='lavender')
パールゴールデンロッド色を用いてリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='palegoldenrod')
データフレームdfをカラムcolとカラムcol2によってソートして、更新する	df.sort_values(by=[col,col2], inplace=True)
xを切り上げて整数に変換する	math.ceil(x)
重なりを見やすくパウダーブルー色としてリストxdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
データフレームdfのリストalistカラムのn分位数	df[alist].quantile(n/100)
ミディアムアクアマリン色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='mediumaquamarine')
デピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
リストalistをビン数nでビン分割して、namesのラベルをつける	pd.cut(alist, n, labels=names)
nがn2以上か判定する	n >= n2
散布図にダークグレー色のマーカーを使う	plt.plot(xdata, ydata, c='darkgrey')
リストxdataとリストydataについて破線グラフを描画して、その色をピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pink')
リストxdataとデータ列ydataについて散布図を描画してマーカーの色をダークカーキに設定する	plt.plot(xdata, ydata, c='darkkhaki')
数列xdataとリストydataの破線を描画して、その色をダークスレートブルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
スプリンググリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
s内にisasciiが含まれる	any(c.アスキー文字() for c in s)
商と余りを同時に計算する	divmod(x, x2)
セットasetが空集合でないか	len(aset) != 0
データ列dsの欠損値を平均値に設定する	ds.fillna(ds.mean())
リストxdataとデータ列ydataの折れ線グラフを描画して、色を赤くする	plt.plot(xdata, ydata, color='r')
リストxdataとリストydataについて散布図を描画して、マーカーの色をゲインズボロに設定する	plt.plot(xdata, ydata, c='gainsboro')
sを緑色で表示する	print(f'\033[32m{s}\033[0m')
グラフ中に凡例をsとs2と入れる	plt.legend([s, s2])
リストxdataとリストydataについて散布図を描画して、マーカーの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, c='lavenderblush')
リストxdataとリストydataについてスノー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='snow')
データフレームdfのの中で、カラムcolに重複があるか見る	df.duplicated(subset=col)
折れ線の色をゴーストホワイトに変更する	plt.plot(xdata, ydata, color='ghostwhite')
リストxdataとリストydataについてカーキ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='khaki')
__Y__を日付データに変換し、dfのインデックスにする	df.index = pd.to_datetime(df)
リストxdataと配列ydataの破線を描画して色をビスクとする	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
リストxdataとリストydataの赤い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='r')
散布図にデピンク色のマーカーを使う	plt.plot(xdata, ydata, c='deeppink')
データフレームdfのカラムcolの各データ値の出現数を計算する	df[col].value_counts()
s全体をパターンpatternにマッチさせる	re.fullmatch(pattern, s)
日時dtををn月後に進める	dt + datetime.timedelta(months=n)
数式として、eの積分を求める	sympy.integrate(e)
alistn番目から要素をポップする	alist.pop(n)
イテラブルxdataとリストydataについてクリムゾン色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='crimson')
リストxdataとリストydataについての散布図にカラーコードrgbのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
sの長さ	len(s)
データフレームdfをカラムcol毎にグループ化して、個数を求める	df.groupby(col).count()
{atupleを/ひとつ置きに}得る	atuple[::2]
データフレームdfのカラムcolを百の位で四捨五入する	df[col].round(-2)
ダークカーキ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkkhaki')
ゴールド色としてリストxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='gold')
破線グラフの色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
ファイルパスfilenameからの入力ストリームを使う	open(filename)
ダークマゼンタ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkmagenta')
リストxdataとリストydataについて破線グラフを描画して、その色をシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
線幅nの折れ線グラフを描画する	plt.plot(xdata, ydata, linewidth=n)
fにxを文字列に変換して書き込む	f.write(str(x))
リストxdataとリストydataについて散布図を描画して、マーカーの色をシャルトルーズに設定する	plt.plot(xdata, ydata, c='chartreuse')
リストxdataとリストydataの一点鎖線グラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
リストxdataとリストydataについて破線グラフを描画して、その色をホットピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
リストxdataとリストydataについて破線を描画してその色をマルーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
オプションで、エンコーディングをEUCに設定する	encoding = 'euc_jp'
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークグレーに設定する	plt.plot(xdata, ydata, c='darkgrey')
データフレームdfのカラムcolの日	df[col].dt.day
dfのalistカラムのNaNを最頻値で埋める	df[alist].fillna(df[alist].mode().iloc[0])
n2分のn	n / n2
xの指数	math.frexp(x)[1]
リストxdataとリストydataについて折れ線を描画してその色をディムグレーにする	plt.plot(xdata, ydata, color='dimgray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をシルバーに設定する	plt.plot(xdata, ydata, color='silver')
カウンタaCounterの全数	aCounter.total()
xの正接	math.tan(x)
リストxdataと配列ydataについて折れ線を描画してその色をミントクリームに設定する	plt.plot(xdata, ydata, color='mintcream')
ゴールデンロッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='goldenrod')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミスティローズに設定する	plt.plot(xdata, ydata, c='mistyrose')
TSVファイルfilenameからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
リストxdataとリストydataの折れ線グラフに丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
グリーンイエロー色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
データフレームdfのカラムcolからユニークな要素を抽出し、リスト化する	df[col].unique().tolist()
リストxdataとリストydataについての散布図をダークターコイズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
alistの要素数だけ繰り返す	range(len(alist))
折れ線グラフの色を小麦に設定する	plt.plot(xdata, ydata, color='wheat')
辞書adictをソートしてJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False, sort_keys=True)
nをn2で割った結果の切り上げ	(n + n2 - 1) // n2
ダークシアン色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
折れ線グラフの色をアクアにセットする	plt.plot(xdata, ydata, color='aqua')
ナバホホワイト色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='navajowhite')
データフレームdfから重複を削除する	df.drop_duplicates()
破線の色をダークグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
破線グラフの色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
ゴールド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='gold', alpha=0.5)
リストxdataとリストydataについての散布図をシャルトルーズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
データフレームdfをカラムcol毎にグループ化して、最小値を求める	df.groupby(col).min()
リストxdataとリストydataについて散布図を描画して、マーカーの色をホワイトに設定する	plt.plot(xdata, ydata, c='white')
折れ線グラフの色をダークシアンにセットする	plt.plot(xdata, ydata, color='darkcyan')
リストxdataとリストydataについて破線を描画して、その色を淡いピンク色にする	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
sが全て英小文字	s.islower()
リストxdataとリストydataについて折れ線グラフを描画して、その色をアザミに設定する	plt.plot(xdata, ydata, color='thistle')
リストxdataをコーンフラワーブルー色のヒストグラムで描画する	plt.hist(xdata, color='cornflowerblue')
配列xdataとリストydataについての散布図を重なりを見やすくゲインズボロ色で描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
リストxdataとリストydataについての散布図をタン色で描画する	plt.plot(xdata, ydata, c='tan')
インディゴ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
データフレームを表示するとき、小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
ファイルfilenameを書き込みできるようにオープンする]	open(filename, mode='w')
リストxdataとリストydataについて折れ線グラフを描画して、その色をオリベドラブに設定する	plt.plot(xdata, ydata, color='olivedrab')
データフレームdfのリストalistカラムの欠損値をxに設定する	df[alist].fillna(x)
グリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='green')
配列xdataとリストydataについて散布図を描画して、ダイアモンドマーカーの色をカラーコードrgbにセットする	plt.plot(xdata, ydata, marker='D', c=rgb)
数列xdataとリストydataについて折れ線を描画して色をブラウンにする	plt.plot(xdata, ydata, color='brown')
2×3の空配列を作成する	np.empty((2, 3))
イテラブルxdataと配列ydataについての散布図をネイビー色で描く	plt.plot(xdata, ydata, c='navy')
折れ線グラフの色をカデットブルーに設定する	plt.plot(xdata, ydata, color='cadetblue')
配列xdataとリストydataについてシルバー色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='silver')
日時dtがdt2より遅い	dt > dt2
データフレームdfのリストalist列のNaNを平均値に設定する	df[alist].fillna(df[alist].mean())
オレンジ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orange')
散布図にミディアムスレートブルー色のマーカーを使う	plt.plot(xdata, ydata, c='mediumslateblue')
ライトグリーン色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
sをユニコードエスケープでバイト列に変換する	s.encode(encoding='unicode_escape')
リストxdataとリストydataについての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
散布図に黒い丸印を用いる	plt.plot(xdata, ydata, marker='o', c='k')
リストxdataとリストydataについての散布図をマゼンタ色で描画する	plt.plot(xdata, ydata, c='magenta')
filenameのn番目のシートを読む	pd.read_excel(filename, sheet_name=n)
リストxdataと数列ydataについて散布図を描画してsという補足用のラベルをつける	plt.scatter(xdata, xdata, label=s)
リストxdataとリストydataについての散布図をローングリーン色で描画する	plt.plot(xdata, ydata, c='lawngreen')
セットasetから任意の要素を取り出す	aset.pop()
リストxdataとリストydataについて散布図を描画して、マーカーの色をインディゴに設定する	plt.plot(xdata, ydata, c='indigo')
リストxdataとリストydataについて破線を描画して、その色をダークマゼンタ変える	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
赤色で数列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='red')
リストxdataをサーモン色のヒストグラムで描画する	plt.hist(xdata, color='salmon')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
データフレームdfのリストalistで与えられたカラムの相関行列ピアソン相関係数でを求める	df[alist].corr(method='pearson')
データフレームdfのカラムcolを配列として抽出する	df[col].values
ターコイズ色を使って散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
乱数シードをnで固定化する	random.seed(n)
辞書adictに辞書adict2のエントリを追加更新する	adict.update(adict2)
リストxdataと数列ydataについてシーグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
xの小数点以下'5'桁までを表示する	print(':.5f'.format(x))
イテラブルxdataとリストydataについての散布図をフォレストグリーン色で描画する	plt.plot(xdata, ydata, c='forestgreen')
dtからn日分、引く	dt - datetime.timedelta(days=n)
散布図をライムグリーン色のマーカーを使って描画する	plt.plot(xdata, ydata, c='limegreen')
リストxdataとリストydataの折れ線グラフを描画して、点線に設定する	plt.plot(xdata, ydata, linestyle='dotted')
sをs2で区切る	s.split(s2)
表データをインポートする	import pandas as pd
日付adateにn時間分、加算する	adate + datetime.timedelta(hours=n)
散布図に赤い△マーカーを使用する	plt.plot(xdata, ydata, marker='^', c='r')
オブジェクトobjのtextプロパティの値を文字列elementに設定する	setattr(obj, text, element)
nにn2を足して代入する	n += n2
フォレストグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='forestgreen')
データフレームdfのcolカラムの記述統計量	df[col].describe()
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークブルーに設定する	plt.plot(xdata, ydata, c='darkblue')
赤いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')
アンティークホワイト色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='antiquewhite')
数列xdataをダークグレー色の柱状図を用いて描画する	plt.hist(xdata, color='darkgray')
データフレームdfから重複する行を消し、、更新する	df.drop_duplicates(inplace=True)
プラム色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='plum')
リストxdataとリストydataについての散布図をミディアムターコイズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
アクアマリン色としてデータ列xdataとイテラブルydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
リストxdataとリストydataについての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
ファイルfilenameをsの示すエンコーディングとしてオープンする]	open(filename, encoding=s)
折れ線の色をライトスカイブルーに指定する	plt.plot(xdata, ydata, color='lightskyblue')
nとn2の論理和	n | n2
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, color='mediumaquamarine')
xの双曲線余弦	math.cosh(x)
データ列dsのどの値が頻出か見る	ds.mode()
イテラブルxdataとイテラブルydataについて散布図を描画してマーカーの色をアクアに変更する	plt.plot(xdata, ydata, c='aqua')
cからリストiterableを引く	aCounter.subtract(iterable)
cから辞書adictを引く	aCounter.subtract(adict)
エクセルファイルファイルfilenameをデータフレームとして読み込む	pd.read_excel(filename)
配列xdataとデータ列ydataについて散布図を描画してマーカーの色をスラグレーに変更する	plt.plot(xdata, ydata, c='slategrey')
リストxdataとリストydataについて破線グラフを描画して、その色をバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='violet')
ケンドール順位相関係数としてデータフレームdfの相関行列	df.corr(method='kendall')
数列xdataをライトスチールブルー色のヒストグラムで描画する	plt.hist(xdata, color='lightsteelblue')
折れ線グラフの色をコーラルに設定する	plt.plot(xdata, ydata, color='coral')
データフレームdfの欠損値を平均値に設定する	df.fillna(df.mean())
インディゴ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='indigo')
xとx2の斜辺	math.hypot(x, x2)
オプションで、改行コードをUNIXに設定する	newline = '\n'
asetに含まれセットaset2に含まれない集合	aset.difference(aset2)
大きい順にcol列とcol2によってデータフレームdfを破壊的に並べる	df.sort_values(by=[col,col2], ascending=False, inplace=True)
文字コードnの文字を使う	chr(n)
リストxdataをダークグリーン色のヒストグラムで描画する	plt.hist(xdata, color='darkgreen')
破線グラフの色をダークグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
ネイビー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navy')
dfのリストalist列を丸めて、整数型にする	df[alist].round().astype(int)
sのnからn2までの範囲でs2を数える	s.count(s2, start=n, end=n2)
日付adateをn年前に戻す	adate - datetime.timedelta(years=n)
dtの月を使う	dt.month
ゴーストホワイト色のヒストグラムとしてリストxdataを描画する	plt.hist(xdata, color='ghostwhite')
リストxdataとリストydataについて折れ線グラフを描画して、色を淡いピンク色に設定する	plt.plot(xdata, ydata, color='lightpink')
折れ線グラフの色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgrey')
ブラック色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='black')
リストxdataをデピンク色のヒストグラムで描画する	plt.hist(xdata, color='deeppink')
イテラブルxdataとリストydataについての散布図をダークシアグリーン色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
日時dtが何分か知る	dt.minite
数列xdataと配列ydataの折れ線グラフに緑色の大バツ印をプロットする	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
グラフのカラーパレットを暗くする	sns.set(pallete='dark')
破線グラフの色をダークサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
s内にひとつでもisasciiが含まれるか調べる	any(c.アスキー文字() for c in s)
配列xdataと数列ydataについて破線グラフを描画して、色をダークレッド変える	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
リストxdataとリストydataの破線グラフを描画してその色をロージーブラウンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
リストxdataとリストydataについてオリーブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olive')
折れ線のマーカーをバツとする	plt.plot(xdata, ydata, marker='x')
リストxdataとリストydataについての散布図をシエナ色で描画する	plt.plot(xdata, ydata, c='sienna')
リストxdataとリストydataについての散布図をプラム色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='plum', alpha=0.5)
リストxdataとリストydataについて淡いピンク色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
sのn番目がs2で始まるか調べる	s.startswith(s2, n)
ブルーバイオレット色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='blueviolet')
データフレームdfを100の位で丸める	df.round(-2)
リストxdataとリストydataの散布図を描画して、マーカーの色をライトブルーに設定する	plt.plot(xdata, ydata, c='lightblue')
グラフに鉛直方向の実線を付ける	plt.axvline(x=0, linestyle='solid')
ナバホホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
イテラブルiterableから重複なく、n要素ランダムに選ぶ	random.sample(iterable, k=n)
データフレームdfのalistカラムの平均値	df[alist].mean()
リストxdataとリストydataについて散布図を描画して、マーカーの色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, c='cornflowerblue')
リストxdataとリストydataについての散布図をフクシア色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
リストxdataとリストydataの折れ線グラフに、緑色の星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')
データ列xdataとリストydataの折れ線に、黒色の左三角印を描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
データフレームを表示するとき、表示可能な列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
セットasetにリストiterableの要素を全て追加する	aset.update(iterable)
折れ線グラフの星マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='*', markersize=n)
ブラック色としてリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='black')
折れ線グラフの四角マーカーを青くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
データフレームdfのリストalistカラムの欠損値を最頻値で埋める	df[alist].fillna(df[alist].mode().iloc[0])
破線グラフの色をハリウッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
バイオレット色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='violet')
セットaset⊃セットaset2	aset > aset2
スラグレー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='slategrey')
数式として、連立方程e=0,e2の解を求める	sympy.solve([e, e2])
ライトスチールブルー色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
アクアマリン色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
リストxdataをミディアムオーキッド色のヒストグラムで描画する	plt.hist(xdata, color='mediumorchid')
リストxdataとデータ列ydataの折れ線グラフを描画してマーカーを▼に設定する	plt.plot(xdata, ydata, marker='v')
オプションで出力先をファイルに変更する	file = sys.open(filename, 'w')
dfの欠損値を直後の値に設定する	df.fillna(method='bfill')
イテラブルxdataとリストydataについて破線を描画して、色をターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
配列xdataとリストydataについての散布図をダーク・スラテグレー色で描画する	plt.plot(xdata, ydata, c='darkslategrey')
リストalistを複製する	alist.copy()
破線グラフの色をラベンダーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
アンティークホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='antiquewhite')
散布図にハニーデュー色のマーカーを使う	plt.plot(xdata, ydata, c='honeydew')
データフレームdfのリストalistカラムがどの程度、分散しているか見る	df[alist].var()
リストxdataとリストydataの折れ線グラフに、大きさnの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markersize=n)
八進sをバイト列に変換する	int(s, 8).to_bytes(length=n2, byteorder='big')
リストxdataとリストydataについての散布図にカラーコードrgbの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
__X__カラーパレットをグラフに使う	sns.set(pallete='dark')
nはn2と等しい	n == n2
折れ線グラフの色をミディアムパープルに設定する	plt.plot(xdata, ydata, color='mediumpurple')
データフレームdfの歪度	df.kurt()
リストxdataをバイオレット色のヒストグラムで描く	plt.hist(xdata, color='violet')
折れ線グラフの色をペールグリーンに設定する	plt.plot(xdata, ydata, color='palegreen')
プログラムの名前を知る	sys.argv[0]
データフレームdfをカラムcolとカラムcol2によってソートして、NaNを先頭にする	df.sort_values(by=[col,col2], na_position='first')
ロージーブラウン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='rosybrown')
データ列dsの日	ds.dt.day
現在が何年か知る	datetime.datetime.today().year
xをx2で割る	x / x2
JSONファイルのファイル入力finを辞書に変換する	json.load(fin)
パレットトルコイズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='paleturquoise')
散布図にミディアムパープル色のマーカーを使う	plt.plot(xdata, ydata, c='mediumpurple')
列iterableから上限長nのデックを作成して、Xに代入する	X = collections.deque(iterable, maxlen=n)
オブジェクトelementがasetのメンバーに含まれないか調べる	element not in aset
リストxdataとリストydataの散布図を描画して色をパパイヤウィップに指定する	plt.plot(xdata, ydata, c='papayawhip')
リストxdataとリストydataの折れ線グラフに、緑色の丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
リストxdataとリストydataについてライトスレイグレー色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
黒い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='k')
イテラブルxdataと数列ydataの破線を描画してその色をラベンダーにする	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
ファイルパスfilenameを文字コードtextで書き込み用にオープンする]	open(filename, mode='w', encoding=text)
sの両端から空白を取り除く	s.strip()
破線グラフの色をダークオレンジにする	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
入力から1行読み取る	input()
データ列xdataを淡いピンク色色の柱状図で描画する	plt.hist(xdata, color='lightpink')
イエローグリーン色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
deqの末尾	deq[-1]
リストxdataとリストydataについて折れ線グラフを描画して、その色をロイヤルブルーに設定する	plt.plot(xdata, ydata, color='royalblue')
折れ線グラフのバツ印の線幅をnに設定する	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
日付adateにn秒分、加算する	adate + datetime.timedelta(seconds=n)
ドジャーブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
ダークシアグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkseagreen')
ライトコーラル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をブラックに設定する	plt.plot(xdata, ydata, linestyle='dash', color='black')
データフレームdfに重複があるか見る	df.duplicated()
リストxdataとリストydataについての散布図をパープル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='purple', alpha=0.5)
sを走査し、パターンpatternにASCII限定としてマッチするか見る	re.search(pattern, s, flags=re.ASCI)
リストxdataとリストydataについての散布図をダークブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をペールグリーンに設定する	plt.plot(xdata, ydata, color='palegreen')
alistが全て真か調べる	all(alist)
nをn2で割ったモジュロを求める	n % n2
データフレームdfのカラムcolの欠損値をxに設定する	df[col].fillna(x)
リストxdataとイテラブルydataについて破線を描画して、その色をブラウンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='brown')
数列xdataと配列ydataについてビスク色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='bisque')
データフレームdfのカラムの名前を付け直す	df.rename(columns={col: s})
データ列dsを四分位数ごとにビン分割する	pd.qcut(ds, 4)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
リストxdataとリストydataについての散布図をサンディーブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
散布図をオールドレース色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='oldlace')
ミントクリーム色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mintcream')
リストxdataとリストydataについて散布図を描画して、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
ロージーブラウンで数列xdataについての度数分布図を描画する	plt.hist(xdata, color='rosybrown')
ハニーデュー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='honeydew')
データフレームdfの重複した行数のマスク	df.duplicated()
データフレームdfのカラムcolがxより小さい行を抽出する	df[df[col] < x]
xの双曲線正接	math.tanh(x)
リストxdataとリストydataの折れ線グラフに、黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
破線グラフの色をダークオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
リストxdataとリストydataについてホワイト色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='white')
ファイルfilenameをバイナリできるように開く]	open(filename, mode='rb')
リストxdataとリストydataについてダークグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
rgbの丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ列dsは何曜日か見る	ds.dt.weekday_name
データ列dsの欠損値を中央値に設定する	ds.fillna(ds.median())
数列xdataとデータ列ydataについての散布図に黒色の右三角印をプロットする	plt.plot(xdata, ydata, marker='>', c='k')
ssを連結する	''.join(ss)
ロイヤルブルー色でリストxdataと配列ydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
リストxdataとリストydataについてスラグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategray')
デックdeqのn番目からn2番目の部分要素	collections.deque(itertools.islice(deq, n, n2))
オリーブ色として配列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='olive')
ダークターコイズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkturquoise')
xの天井	math.ceil(x)
イテラブルxdataとリストydataの折れ線に、大きさnのバツマーカーを描く	plt.plot(xdata, ydata, marker='x', markersize=n)
イテラブルxdataとリストydataについて散布図を描画して、色をダークオレンジに設定する	plt.plot(xdata, ydata, c='darkorange')
nがn2で割り切れるか	n % n2 == 0
リストxdataと数列ydataについて破線を描画して、その色をグリーンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='green')
ダークレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkred')
散布図にダークバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='darkviolet')
数列xdataと配列ydataの散布図をディムグレー色で描画する	plt.plot(xdata, ydata, c='dimgrey')
nが3の倍数か調べる	n % 3 == 0
データ列xdataとリストydataについてインディアンレッド色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='indianred')
疑似乱数を生成する	random.random()
matplotlibの背景色を暗くする	sns.set(style='darkgrid')
数列xdataと配列ydataについてディムグレー色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
__X__カラーパレットをグラフに使う	sns.set(pallete='colorblind')
折れ線グラフの色をパールバイオレットレッドに指定する	plt.plot(xdata, ydata, color='palevioletred')
sをSJISのバイト列に変換する	s.encode(encoding='sjis', errors='ignore')
小麦色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='wheat')
リストxdataとリストydataについて散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
データフレームを表示するとき、ヘッダー行を左寄せに変更する	pd.set_option('colheader_justify', 'left')
破線グラフの色をペルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peru')
データフレームdfのalistカラムの欠損値を最小値に指定する	df[alist].fillna(df[alist].min())
スクリプトファイルと同じディレクトリのファイルfilenameのパス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filename)
正規表現でまとめてdfのcolカラムを置き換える	df[col].replace(pattern, s, regex=True)
リストxdataとリストydataについて散布図を描画して、マーカーの色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, c='palegoldenrod')
リストxdataとリストydataについて破線グラフを描画して、その色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
イテラブルxdataとリストydataについての散布図をラベンダー色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
データフレームdfのカラムcolの要約統計量	df[col].describe()
n年を日付に変換する	datetime.date(year=n, month=1, day=1)
s3にs内のs2を置換する	s.replace(s2, s3)
sの両端からs2を除去する	s.strip(s2)
リストxdataとリストydataの白い折れ線グラフを描画する	plt.plot(xdata, ydata, color='w')
散布図にライトグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightgrey')
リストxdataとリストydataの折れ線グラフを描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
リネン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='linen', alpha=0.5)
パールバイオレットレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='palevioletred')
ホットピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
散布図に赤い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='r')
sを幅nでセンタリングする	s.center(n)
破線グラフの色をホットピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
Pandasで、フォーマットでsを日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
リストxdataとリストydataについての散布図に黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
データフレームdfのリストalistカラムの欠損値を最小値で埋める	df[alist].fillna(df[alist].min())
データフレームdfのカラムcolを丸めて、整数型にする	df[col].round().astype(int)
データフレームdfをカラムcolによって昇順にソートして、更新する	df.sort_values(by=col, ascending=True, inplace=True)
セットaset∪セットaset2	aset.union(aset2)
データ列xdataと配列ydataについて散布図を描画して、マーカーの色をダークバイオレットに設定する	plt.plot(xdata, ydata, c='darkviolet')
数式として、eのzを微分する	sympy.diff(e, z)
数列xdataとリストydataの散布図にバツマーカーを描く	plt.plot(xdata, ydata, marker='x')
丸印を用いて散布図を描く	plt.plot(xdata, ydata, marker='o')
整数nがタプルatupleのどれかかどうか調べる	n in atuple
ds内にある日付データvalueと文字列value2の個数を数える	ds.isin([value, value2]).sum()
ファイルfilenameからバイナリ書き込みストリームをオープンして]、fとする	f = open(filename, mode='wb')
散布図にアンティークホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='antiquewhite')
破線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
リストxdataとリストydataについての散布図をアイボリー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をクリムゾンに設定する	plt.plot(xdata, ydata, color='crimson')
nの階乗	math.factorial(n)
s内にひとつでも非アスキー文字が含まれるか調べる	any(not c.isascii() for c in s)
折れ線の色をミディアムオーキッドにする	plt.plot(xdata, ydata, color='mediumorchid')
ダークスレートブルー色でリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='darkslateblue')
データフレームdfのカラムcolがsで始まる行を抽出する	df[df[col].str.startswith(s)]
日時dtが金曜日か調べる	dt.weekday() == 4
ティール色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='teal')
ダークスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
ダークサーモン色のマーカーを使って散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
破線グラフの色をライトスレイグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
散布図にドジャーブルー色のマーカーを使う	plt.plot(xdata, ydata, c='dodgerblue')
dsの秒	ds.dt.second
カラーコードrgbの下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
破線グラフの色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
リストxdataとリストydataの折れ線グラフに赤色の下三角印を描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
配列iterableと配列iterable2を連結する	itertools.chain(iterable, iterable2)
配列xdataとリストydataの赤い折れ線グラフをプロットする	plt.plot(xdata, ydata, color='r')
リストxdataとリストydataについての散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
nが無限に続く数列	itertools.repeat(n)
xからx2を引く	x - x2
日付adateが日曜日か調べる	adate.weekday() == 6
ファイルfilenameからバイナリストリームをオープンして]、fとする	f = open(filename, mode='rb')
日時dtが何日か知る	dt.day
データフレームdfのカラムcolを10の位で丸める	df[col].round(-1)
折れ線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgray')
赤色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='red')
リストalistをナンバリングする	enumerate(alist)
リストxdataとリストydataについて破線グラフを描画して、その色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
配列xdataとリストydataの折れ線に大きさnのポイント印をプロットする	plt.plot(xdata, ydata, marker='.', markersize=n)
ピアソン相関係数でデータフレームdfのカラムcolとカラムcol2の相関行列	df[[col, col2]].corr(method='pearson')
アクア色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
データフレームdfのカテゴリデータをダミー変数に変換する	pd.get_dummies(df)
リストxdataと数列ydataについて散布図を描画して、色をダークサーモンにする	plt.plot(xdata, ydata, c='darksalmon')
リストxdataとリストydataについて折れ線グラフを描画して、その色をハリウッドに設定する	plt.plot(xdata, ydata, color='burlywood')
スピアマン相関係数でデータフレームdfのカラムcolとカラムcol2の相関行列	df[[col, col2]].corr(method='spearman')
リストxdataとリストydataについての散布図をミディアムバイオレットレッド色で描画する	plt.plot(xdata, ydata, c='mediumvioletred')
リストxdataをネイビー色のヒストグラムで描画する	plt.hist(xdata, color='navy')
データフレームdfのデータ型の一覧	df.dtypes
リストalistとリストalist2から辞書	dict(zip(alist, alist2))
散布図にサドルブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='saddlebrown')
リストxdataとリストydataについて破線グラフを描画して、その色を黄色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='yellow')
配列xdataと配列ydataについての散布図をホワイトスモーク色で描く	plt.plot(xdata, ydata, c='whitesmoke')
ローングリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をインディゴに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
リストxdataとリストydataについて破線グラフを描画して、その色をライトサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
リストxdataとリストydataについて折れ線を描画して、その色をライトスチールブルーに設定する	plt.plot(xdata, ydata, color='lightsteelblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色を紺碧に変更する	plt.plot(xdata, ydata, c='azure')
リストxdataとリストydataの散布図をミディアムターコイズ色で描画する	plt.plot(xdata, ydata, c='mediumturquoise')
日時dtにn日分、加える	dt + datetime.timedelta(days=n)
破線グラフの色をコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='coral')
重なりを見やすく配列xdataと配列ydataについての散布図をダークオーキッド色を用いて描く	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして左結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='left')
小麦色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
数式として、eのインテグラルを行う	sympy.integrate(e)
sのnからn2までの範囲でs2の出現回数	s.count(s2, start=n, end=n2)
破線グラフの色をハニーデューに設定する	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
日付adateの月	adate.month
リストxdataを紺碧色のヒストグラムで描画する	plt.hist(xdata, color='azure')
デックdeqの順番をn個分右にローテートする	deq.rotate(n)
折れ線の色をオリベドラブに設定する	plt.plot(xdata, ydata, color='olivedrab')
黒い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
ミントクリーム色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
散布図にダークグレー色のマーカーを使う	plt.plot(xdata, ydata, c='darkgray')
配列xdataとリストydataについて破線グラフを描画して、色をサーモンとする	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
ティール色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='teal')
日付adateをn月前に戻す	adate - datetime.timedelta(months=n)
オレンジレッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
dfのカラムcolの年	df[col].dt.year
リストalistを四分位数ごとにビン分割する	pd.qcut(alist, 4)
データフレームdfから破壊的に重複を削除する	df.drop_duplicates(inplace=True)
散布図にアクア色のマーカーを使う	plt.plot(xdata, ydata, c='aqua')
sのの中でASCII限定のパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s, flags=re.ASCI)
xの千の位で丸める	round(x, -3)
リストalistの末尾から要素をポップする	alist.pop()
リストxdataとリストydataについて散布図を描画して、マーカーの色をスレートブルーに設定する	plt.plot(xdata, ydata, c='slateblue')
散布図をダークカーキ色として描く	plt.plot(xdata, ydata, c='darkkhaki')
sを文字リストに変換する	list(s)
ディムグレー色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
aCounterの全カウント回数	aCounter.total()
折れ線グラフのポイントマーカーを黄色くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
タプルatupleの平均値	sum(atuple)/len(atuple)
本日の日数	datetime.datetime.today().day
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトイエローに設定する	plt.plot(xdata, ydata, c='lightyellow')
紫色でsを表示する	print(f'\033[35m{s}\033[0m')
配列xdataと数列ydataについて破線を描画して、その色をカデットブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
散布図にアクアマリン色のマーカーを使う	plt.plot(xdata, ydata, c='aquamarine')
データ列xdataと数列ydataについて破線グラフを描画して、色をオレンジとする	plt.plot(xdata, ydata, linestyle='dash', color='orange')
散布図にアイボリー色のマーカーを使う	plt.plot(xdata, ydata, c='ivory')
アザミ色でデータ列xdataについての柱状グラフを描画する	plt.hist(xdata, color='thistle')
データフレームdfのカラムcol中にいくつ欠損値があるか数える	df[col].isna().sum()
文字列elementの出力を改行なしに行う	print(s, end='')
リストxdataとイテラブルydataの散布図を描画してバツマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
ハリウッド色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
ダークグレー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
リストxdataとリストydataについてミディアムターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
一点鎖線の色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
データ列dsを1000の位で丸めて、整数型にする	ds.round(-3).astype(int)
データ列xdataと配列ydataについて散布図を描画してマーカーの色をトマトにセットする	plt.plot(xdata, ydata, c='tomato')
ダークブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkblue')
等間隔でarrayをn個にビン分割してnamesのラベルをつける	pd.cut(array, n, labels=names)
ヒストグラムをスレートブルー色で描画する	plt.hist(xdata, color='slateblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(xdata, ydata, color='rebeccapurple')
オプションで、エンコーディングエラーがあるとき例外を発生させる	errors = 'strict'
リストxdataとリストydataについて折れ線グラフを描画して、その色をホワイトスモークに設定する	plt.plot(xdata, ydata, color='whitesmoke')
ビスク色で重なりを見やすくリストxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
リストxdataとリストydataについての散布図をナバホホワイト色で描画する	plt.plot(xdata, ydata, c='navajowhite')
イテラブルxdataとデータ列ydataについてライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o')
散布図をライトグリーン色のマーカーで描画する	plt.plot(xdata, ydata, c='lightgreen')
ds列の欠損値をxで置換する	ds.fillna(x)
バイオレット色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='violet')
リストxdataとリストydataについて破線グラフを描画して、その色をモカシンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
データフレームdfのcolカラムのタイムゾーンを日本にする	df[col].tz_convert('Asia/Tokyo')
データフレームdfのカラムcolとカラムcol2を折れ線グラフで描画する	plt.plot(df[col], df[col2])
配列xdataと配列ydataについて破線を描画してその色をホットピンクにする	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
リストxdataとリストydataについての散布図をスカイブルー色で描画する	plt.plot(xdata, ydata, c='skyblue')
データフレームdfのalistカラムを千の位で丸めて、整数にする	df[alist].round(-3).astype(int)
リストxdataとリストydataの折れ線グラフに大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
ミディアムバイオレットレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
日付adateからn月を引く	adate - datetime.timedelta(months=n)
スチールブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
リストxdataをコーラル色の度数分布図として描画する	plt.hist(xdata, color='coral')
エクセルファイルファイルfilenameからnという名前のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
リストxdataをアンティークホワイト色のヒストグラムで描画する	plt.hist(xdata, color='antiquewhite')
データフレームdfのリストalistカラムの最頻値の出現回数を求める	df[alist].freq()
データフレームdfのの中で、カラムcolとカラムcol2の重複を見る	df.duplicated(subset=[col1, col2])
ファイルfilenameをBOM付きで書き込み用にオープンする]	open(filename, mode='w', encoding='utf_8_sig')
散布図にフローラルホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='floralwhite')
リストxdataとリストydataについて破線グラフを描画して、その色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
シアン色としてリストxdataについての柱状図を描画する	plt.hist(xdata, color='cyan')
追加モードを用いてファイルfilenameをオープンして]、fとする	f = open(filename, mode='a')
縦にデータフレームdfとdf2を繋ぐ	pd.concat([df, df2])
データフレームdfをカラムcol毎にグループ化して、カラムcol2の個数を求める	df.groupby(col)[col2].count()
データ列dsの第一四分位数	ds.quantile(0.25)
sの左側から空白を取り除く	s.lstrip()
データ列dsの各データ値の出現数	ds.value_counts()
破線グラフの色をシエナに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
ハリウッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
折れ線グラフの色をグレーに設定する	plt.plot(xdata, ydata, color='gray')
文字列elementはリストalistの要素でないか確認する	element not in alist
データ列dsが何年か見る	ds.dt.year
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, c='mediumorchid')
リストxdataとリストydataについて破線グラフを描画して、その色をミントクリームに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')
ダークオレンジ色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
リストxdataとリストydataについての散布図をライトグリーン色で描画する	plt.plot(xdata, ydata, c='lightgreen')
ラベンダー色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='lavender')
データフレームdfのカラムcolの月	df[col].dt.month
数列xdataをアンティークホワイト色のヒストグラムで描画する	plt.hist(xdata, color='antiquewhite')
iterableからクラスCのインスタンスを新しく作る	C._make(iterable)  # issubclass(C, tuple)
オブジェクトobjのプロパティをsで指定して、その値を使う	getattr(obj, s)
カーキ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='khaki')
リストxdataと配列ydataについての散布図を重なりを見やすくライトグリーン色で描く	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
点線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
リストxdataとリストydataについて散布図を描画して、マーカーの色を青に設定する	plt.plot(xdata, ydata, c='blue')
dsカラムを100の位で四捨五入して、整数型にする	ds.round(-2).astype(int)
散布図にマゼンタ色のマーカーを使用する	plt.plot(xdata, ydata, c='magenta')
ラベンダー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lavender')
データ列dsの曜日が何日目か見る	ds.dt.dayofweek
散布図にパパイヤウィップ色のマーカーを使う	plt.plot(xdata, ydata, c='papayawhip')
パレットトルコイズ色としてヒストグラムを描画する	plt.hist(xdata, color='paleturquoise')
ディムグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dimgrey')
最大長をnにして両端キューを新しく作る	collections.deque(maxlen=n)
データ列xdataと配列ydataについてチョコレート色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
オレンジレッド色の折れ線を描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='orangered')
イテラブルxdataと配列ydataの破線を描画して、その色をチョコレートに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
破線グラフの色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
alistを等間隔でn個に分割する	pd.cut(alist, n)
リストxdataとリストydataの折れ線グラフに、赤い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
sをs2で分けたときの後半の文字列	s.partition(s2)[-1]
データ列xdataとリストydataについてハニーデュー色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
折れ線グラフの色をゲインズボロに設定する	plt.plot(xdata, ydata, color='gainsboro')
散布図をフォレストグリーン色のマーカーで描画する	plt.plot(xdata, ydata, c='forestgreen')
nから無限にカウントアップする	itertools.count(start=n)
折れ線グラフのマーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
変数名をキーとして、辞書	dict(name=element)
ミディアムシアグリーン色の折れ線をプロットする	plt.plot(xdata, ydata, color='mediumseagreen')
リストalistとalist2の共通りストを使う	list(set(alist) & set(alist2))
シャルトルーズ色の柱状図でイテラブルxdataを描画する	plt.hist(xdata, color='chartreuse')
パールゴールデンロッド色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='palegoldenrod')
ライトコーラル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightcoral')
破線グラフの色をタンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='tan')
文字列elementと文字列element2をsで区切って表示する	print(element, element2, sep=s)
インディゴ色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='indigo')
重なりを見やすく散布図をミディアムブルー色として描画する	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
x以上の最小の整数	math.ceil(x)
リストxdataとリストydataの折れ線グラフに、黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')
折れ線グラフの丸マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
リストxdataとリストydataについての散布図をライトサーモン色で描画する	plt.plot(xdata, ydata, c='lightsalmon')
折れ線グラフの右三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='>', markersize=n)
xの絶対値を計算する	math.fabs(x)
ミディアムブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
オプションで、改行コードをWindowsに設定する	newline = '\r\n'
リストxdataとリストydataについての散布図をハニーデュー色で描画する	plt.plot(xdata, ydata, c='honeydew')
リストxdataとリストydataについて破線グラフを描画して、その色をパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='purple')
折れ線の右三角マーカーを黒くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
リストxdataとリストydataについての散布図をミスティローズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
データ列xdataとリストydataの破線グラフを描画して、その色を耐火レンガに変更する	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
本日をsでフォーマットする	datetime.datetime.today().strftime()
リストxdataをスチールブルー色のヒストグラムで描画する	plt.hist(xdata, color='steelblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトブルーに設定する	plt.plot(xdata, ydata, c='lightblue')
sのの中で大文字・小文字を無視したパターンpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s, flags=re.IGNORECASE)
ユーザの入力を読み取る	input()
データフレームdfのリストalistカラム中に文字列valueと文字列value2があるか調べる	df[alist].isin([value, value2])
数列xdataと配列ydataについて破線グラフを描画してその色をオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
n年n2月n3日n4時の日付と時間をオブジェクト化する	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
nの無限数列	itertools.repeat(n)
散布図にグレー色のマーカーを使う	plt.plot(xdata, ydata, c='gray')
破線の色をパパイヤウィップに設定する	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
データフレームdfとデータフレームdf2をカラムcolをキーにして右結合する	pd.merge(df, df2, on=col, how='right')
破線グラフの色をモカシンとする	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
リストxdataと配列ydataについての散布図をパープル色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='purple', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
リストxdataとリストydataについての散布図をモカシン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をダークバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
データフレームdfのカラムcolを0と1にマップする	df[col].map({s: 1, s2: 0})
iterableから両端キューを用意する	collections.deque(iterable)
リストxdataとリストydataについて折れ線グラフを描画して、その色を耐火レンガに設定する	plt.plot(xdata, ydata, color='firebrick')
リストxdataと配列ydataの折れ線グラフに、緑色の下三角マーカーを描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
配列xdataと配列ydataについてピーチパフ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
折れ線グラフの色をシアンに設定する	plt.plot(xdata, ydata, color='cyan')
xの小数点以下'1'桁までの文字列に変換する	':.1f'.format(x)
データフレームdfのcolに日付データvalueと日付データvalue2がいくつあるか数える	df[col].isin([value, value2]).sum()
nとn2の最小公倍数	math.lcm(n, n2)
アザミ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='thistle')
散布図にブラック色のマーカーを使う	plt.plot(xdata, ydata, c='black')
リストalistの最大値	max(alist)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークシアグリーンに設定する	plt.plot(xdata, ydata, c='darkseagreen')
破線グラフの色をゴーストホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
SJISとしてファイルパスfilenameをオープンする]	open(filename, encoding='shift_jis')
カデットブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='cadetblue')
リストxdataとリストydataについての散布図をティール色で描画する	plt.plot(xdata, ydata, c='teal')
スチールブルー色の折れ線をプロットする	plt.plot(xdata, ydata, color='steelblue')
シーグリーン色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
リストalistを等量でn個にビン分割する	pd.qcut(alist, n)
ライトグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
整数nの十六進表記を見る	hex(n)
リストxdataをシルバー色のヒストグラムで描画する	plt.hist(xdata, color='silver')
イテラブルxdataについてのヒストグラムを貝殻色でプロットする	plt.hist(xdata, color='seashell')
dfのリストalist列の空文字をドロップする	df[alist].replace('', np.nan).dropna()
グラフの用途を画面に設定する	sns.set(context='notebook')
リストxdataとリストydataについて散布図を描画して、マーカーの色をシルバーに設定する	plt.plot(xdata, ydata, c='silver')
データ列xdataとデータ列ydataについて散布図を描画してマーカーの色をコーラルにする	plt.plot(xdata, ydata, c='coral')
数列xdataと配列ydataの線幅nの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
データフレームdfをカラムcol毎にグループ化して、関数適用した値を求める	df.groupby(col).agg(func)
正規表現でs全体をpatternパターンにマッチさせる	re.fullmatch(pattern, s)
リストxdataとリストydataについて散布図を描画して、マーカーの色をベージュに設定する	plt.plot(xdata, ydata, c='beige')
リストxdataと数列ydataについて実線グラフをプロットする	plt.plot(xdata, ydata, linestyle='solid')
データフレームdfをカラムcol毎にグループ化して、カラムcol2の分散を求める	df.groupby(col)[col2].var()
破線グラフの色をディープスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
配列xdataと配列ydataについて散布図を描画して、マーカーの色をパレットトルコイズに設定する	plt.plot(xdata, ydata, c='paleturquoise')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, color='darkolivegreen')
データフレームdfから型tyのカラムを抽出する	df.select_dtypes(ty)
リストxdataとリストydataについての散布図をミントクリーム色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
散布図にカラーコードrgbの左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c=rgb)
リストxdataとリストydataの折れ線グラフに、線幅nの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
データフレームdfの欠損値を直後の値で埋める	df.fillna(method='bfill')
配列xdataとリストydataについて破線を描画して色をバイオレットにセットする	plt.plot(xdata, ydata, linestyle='dash', color='violet')
データフレームdfからランダムに抽出する	df.sample()
ダークオリーブグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
散布図にライトブルー色のマーカーを使う	plt.plot(xdata, ydata, c='lightblue')
Pandasで、フォーマットでデータ列dsを日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
カンマ区切りでリストiterableを結合する	','.join(map(str, iterable))
セットasetとaaset2のいずれか一方だけの集合	aset.symmetric_difference(aset2)
ロイヤルブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='royalblue')
オプションで、エンコーディングをsの示すエンコーディングに設定する	encoding = s
データフレームdfのカラムcolとカラムcol2毎の個数	df.groupby([col, col2], as_index=False).count()
配列xdataとイテラブルydataについての散布図をネイビー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='navy', alpha=0.5)
デックdeqをデキューする	deq.popleft()
nまでの偶整数リストを作る	list(range(2, n, 2))
破線グラフの色をミディアムスレートブルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
数列xdataとイテラブルydataの散布図をモカシン色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
xをx2で割って切り捨てる	x // x2
リストxdataとデータ列ydataの折れ線グラフを描画して、点線に設定する	plt.plot(xdata, ydata, linestyle='dotted')
重なりを見やすくダークゴールデンロッド色でリストxdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
sの先頭で複数行対応としてパターンpatternにマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
mathをインポートする	import math
リストxdataとリストydataの線幅nの折れ線グラフを描画する	plt.plot(xdata, ydata, linewidth=n)
データ列を使う	import pandas as pd
折れ線グラフの色をピンクに設定する	plt.plot(xdata, ydata, color='pink')
タプルiterableとタプルiterable2をペアリングする	itertools.zip_longest(iterable, iterable2)
リストxdataとリストydataについて散布図を描画して、マーカーの色をハリウッドに設定する	plt.plot(xdata, ydata, c='burlywood')
リストxdataとリストydataについて破線グラフを描画して、その色をダークオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
nからn2までの整数乱数を生成する	random.randint(n, n2)
赤い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
データ列xdataとイテラブルydataについて折れ線グラフを描画して、色をパウダーブルーに設定する	plt.plot(xdata, ydata, color='powderblue')
破線グラフの色をアンティークホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
オブジェクトelementがリストalistに含まれるか	element in alist
グレー色を用いてイテラブルxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='gray')
nがn2よりも大きいか調べる	n > n2
破線グラフの色をダークスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
リストxdataとリストydataについての散布図をブランチドアーモンド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
リストxdataとリストydataについてペルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peru')
リストxdataとリストydataについてミディアムパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
折れ線グラフのダイアモンド印の大きさをnに指定する	plt.plot(xdata, ydata, marker='D', markersize=n)
白い折れ線をプロットする	plt.plot(xdata, ydata, color='w')
シアン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
データ列xdataと配列ydataについて折れ線グラフを描画して色をサンディーブラウン変える	plt.plot(xdata, ydata, color='sandybrown')
タプルatupleを並べ変える	sorted(atuple)
dtの秒を求める	dt.second
整数nを16進数文字列に変換する	hex(n)[2:]
ターコイズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='turquoise')
ミディアムターコイズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumturquoise')
xの小数点以下'2'桁までを表示する	print(':.2f'.format(x))
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightseagreen')
一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot')
コーンズシルク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
リストxdataとリストydataの破線を描画して、色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
xの逆双曲線余弦	math.acosh(x)
データフレームdfのcol列がxより多い行を抽出する	df[df[col] > x]
標準エラーを得る	sys.stderr
xのx2乗のx3剰余	pow(x, x2, x3)
データフレームdfのリストalistカラムの欠損値を中央値に設定する	df[alist].fillna(df[alist].median())
データ列xdataと数列ydataについて散布図を描画してマーカーの色をアクアマリンに設定する	plt.plot(xdata, ydata, c='aquamarine')
ゴールド色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gold')
リストxdataとリストydataについて小麦色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='wheat')
xを浮動小数点数型に変換する	float(x)
nの各桁の総和	sum(map(int, str(n)))
nではない	not n
データフレームdfのカラムcolがsで終わらない行を抽出する	df[not df[col].str.endswith(s)]
セットasetをタプルに変換する	tuple(aset)
オリーブ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='olive')
オレンジ色でヒストグラムをプロットする	plt.hist(xdata, color='orange')
重なりを見やすく散布図をオレンジレッド色のマーカーでプロットする	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
ライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
オーキッド色の折れ線グラフを描く	plt.plot(xdata, ydata, color='orchid')
リストxdataとリストydataの実線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
ブルーバイオレット色のヒストグラムで配列xdataを描画する	plt.hist(xdata, color='blueviolet')
デックdeqの最初にelementをつけ加える	deq.appendleft(element)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgrey')
データ列xdataをディムグレー色のヒストグラムとしてプロットする	plt.hist(xdata, color='dimgray')
ディープスカイブルー色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
TSVファイルfilenameからCSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
ディープスカイブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='deepskyblue')
オプションで、文字コードtextを使用する	encoding = text
インディアンレッドを用いてイテラブルxdataについてのヒストグラムを描画する	plt.hist(xdata, color='indianred')
破線の色をシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
dfのalistカラムを10の位で丸める	df[alist].round(-1)
最初のカテゴリーを除外して、xをダミー変数に変換する	pd.get_dummies(x, drop_first=True)
Pandasで、データ列dsを日付データに変換する	pd.to_datetime(ds)
日付adateが火曜日か調べる	adate.weekday() == 1
リストxdataをパールゴールデンロッド色のヒストグラムで描画する	plt.hist(xdata, color='palegoldenrod')
JSON形式のsを読み込む	json.loads(s)
リストxdataとリストydataについての散布図をライトグレー色で描画する	plt.plot(xdata, ydata, c='lightgray')
リストxdataとリストydataについて散布図を描画して、マーカーの色をアリスブルーに設定する	plt.plot(xdata, ydata, c='aliceblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色を淡いピンク色に設定する	plt.plot(xdata, ydata, c='lightpink')
dfをリストalistのカラムによって昇順に破壊的にソートする	df.sort_values(by=alist, ascending=True, inplace=True)
赤色の四角マーカーをリストxdataと配列ydataについての散布図に描画する	plt.plot(xdata, ydata, marker='s', c='r')
日時dtをn週間前に戻す	dt - datetime.timedelta(weeks=n)
破線グラフの色をカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
辞書adictの全項目を消去する	adict.clear()
配列xdataとイテラブルydataの折れ線グラフをカラーコードrgbで描画する	plt.plot(xdata, ydata, color=rgb)
データフレームを表示するとき、折り返しをしない	pd.set_option('expand_frame_repr', False)
ペアリストpairsからカウンタを作る	collections.Counter(dict(pairs))
辞書adictにkeyが存在している	key in adict
データフレームdfのリストalistカラムがどの程度分散しているか確認する	df[alist].var()
データ列xdataと配列ydataの折れ線を描画して色をダークゴールデンロッドにする	plt.plot(xdata, ydata, color='darkgoldenrod')
リストxdataとリストydataについて折れ線グラフを描画して、その色をアクアマリンに設定する	plt.plot(xdata, ydata, color='aquamarine')
ナバホホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
データフレームdfのcolを小数点以下n桁で丸める	df[col].round(n)
折れ線グラフの星印の線幅をnにする	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
リストxdataとリストydataについてダークレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkred')
ローングリーンを用いてリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lawngreen')
xの小数点以下'3'桁までを表示する	print(':.3f'.format(x))
オレンジレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='orangered')
配列xdataと配列ydataについてバイオレット色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='violet')
赤色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='red')
xをタイムスタンプ型に変換する	pd.to_datetime(x)
データフレームdfのカラムcolでsが含まれる行を抽出する	df[df[col].str.contains(s)]
グレー色でデータ列xdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='grey')
リストxdataとリストydataについてグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='green')
filenameからデータフレームを読み込む	pd.read_csv(filename, sep=',')
破線グラフを描く	plt.plot(xdata, ydata, linestyle='dashed')
折れ線グラフの色をミディアムパープルとする	plt.plot(xdata, ydata, color='mediumpurple')
リストxdataとリストydataの折れ線グラフに、赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
グレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='gray')
リストxdataとリストydataについて散布図を描画して、マーカーの色をスラグレーに設定する	plt.plot(xdata, ydata, c='slategray')
データ列をインポートする	import pandas as pd
セットasetをイミュータブルに変換する	frozenset(aset)
データフレームdfのカラムcolがxより大きくx2より少ない行を取り出す	df[(x < df[col]) & (df[col] < x2)]
ハリウッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
折れ線グラフの色をミントクリームに設定する	plt.plot(xdata, ydata, color='mintcream')
xが1、もしくは2、もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
インディアンレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='indianred')
リストxdataとデータ列ydataについて散布図を描画してマーカーを丸にセットする	plt.plot(xdata, ydata, marker='o')
リストxdataとリストydataの折れ線グラフに、青い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
現在のエポック秒	int(time.time())
配列xdataをティール色の柱状グラフで描画する	plt.hist(xdata, color='teal')
オプションで、降順にする	ascending = False
数列xdataとリストydataについてライトグリーン色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
リストxdataとリストydataについてブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='brown')
配列xdataとリストydataの折れ線グラフに、青色の丸マーカーを描く	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
__X__カラーパレットをグラフに用いる	sns.set(pallete='pastel')
リストxdataと配列ydataについての散布図をダークカーキ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をアクアに設定する	plt.plot(xdata, ydata, c='aqua')
nが2で割り切れるか	n % 2 == 0
ダークシアン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkcyan')
s全体を複数行対応としてパターンpatternにマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
リストxdataをミディアムアクアマリン色のヒストグラムで描画する	plt.hist(xdata, color='mediumaquamarine')
リストxdataとデータ列ydataの青い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='b')
データフレームdfをcol列毎にグループ化してcol2の関数適用した値を求める	df.groupby(col)[col2].agg(func)
リストxdataとリストydataについて破線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
マゼンタ色のヒストグラムとしてリストxdataをプロットする	plt.hist(xdata, color='magenta')
配列xdataとリストydataの折れ線グラフを描画してsとラベル付けする	plt.plot(xdata, ydata, label=s)
リストxdataとリストydataについての散布図をアンティークホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
sの中から正規表現patternにASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)
リストxdataとリストydataの破線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
sを太字にする	f'\033[1m{s}\033[0m'
配列xdataをサンディーブラウン色のヒストグラムを使って描画する	plt.hist(xdata, color='sandybrown')
リストxdataとリストydataについて折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgrey')
オプションで、ファイルを出力にする	file = sys.open(filename, 'w')
折れ線グラフの色をハニーデューに設定する	plt.plot(xdata, ydata, color='honeydew')
現在が火曜日か判定する	datetime.datetime.today().weekday() == 1
リストxdataとリストydataについての散布図をブラック色で描画する	plt.plot(xdata, ydata, c='black')
リストxdataと配列ydataの散布図をサンディーブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
リストxdataとリストydataの破線グラフを描画してその色をホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='white')
sを長さnで右寄せにする	s.rjust(n)
ドジャーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')
リストxdataとリストydataの破線を描画して、その色をスカイブルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
リストxdataをパープル色のヒストグラムで描画する	plt.hist(xdata, color='purple')
データフレームdfをalistのカラムによって降順に破壊的にソートする	df.sort_values(by=alist, ascending=False, inplace=True)
レモンシフォン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lemonchiffon')
リストxdataとリストydataについての散布図をホットピンク色で描画する	plt.plot(xdata, ydata, c='hotpink')
日時dtをn秒前に戻す	dt - datetime.timedelta(seconds=n)
リストxdataについてのヒストグラムをライムグリーン色として描画する	plt.hist(xdata, color='limegreen')
CSVファイルTSVファイルfilenameをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
日時dtををn日後に進める	dt + datetime.timedelta(days=n)
オブジェクトobjのクラス	type(obj)
ダークオレンジ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkorange')
グラフ内の日本語表示を有効にする	sns.set(font='IPAexGothic')
最大長をnにして両端キューを作る	collections.deque(maxlen=n)
データフレームdfの各次元の大きさを見る	df.shape
sの先頭でpatternにASCII限定としてマッチするか確認する	re.match(pattern, s, flags=re.ASCI)
アルファベットからひとつランダムに選ぶ	random.choice(string.ascii_uppercase)
破線グラフの色をライムグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
ダークカーキ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkkhaki')
コーンフラワーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
リストxdataとリストydataについて破線グラフを描画して、その色をダークオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
赤い右三角マーカーをリストxdataと数列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='>', c='r')
イテラブルxdataとリストydataについての散布図をグリーンイエロー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
リストxdataをダークスラテグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkslategray')
データ列xdataと配列ydataについての散布図をミディアムバイオレットレッド色で描画する	plt.plot(xdata, ydata, c='mediumvioletred')
リストxdataとリストydataについて破線グラフを描画して、その色をシエナに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
リストxdataと配列ydataについての散布図をアザミ色で描画する	plt.plot(xdata, ydata, c='thistle')
フクシア色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='fuchsia')
データ列xdataをロージーブラウン色のヒストグラムで描く	plt.hist(xdata, color='rosybrown')
ダークカーキ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
リストxdataとリストydataについての散布図をカデットブルー色として描く	plt.plot(xdata, ydata, c='cadetblue')
分母が高々max_denominatorである、selfに最も近いFractionを見付けて	q.limit_denominator(max_denominator=1000000)
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムパープルに設定する	plt.plot(xdata, ydata, c='mediumpurple')
リストxdataをアリスブルー色のヒストグラムで描画する	plt.hist(xdata, color='aliceblue')
配列xdataとリストydataの折れ線を描画して、その色をビスクに変更する	plt.plot(xdata, ydata, color='bisque')
グラフのパレットをsに設定する	sns.set(palette=s)
リストxdataとリストydataについての散布図をスラグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムパープルに設定する	plt.plot(xdata, ydata, color='mediumpurple')
データ列dsの欠損値を平均値で埋める	ds.fillna(ds.mean())
配列xdataとリストydataの一点鎖線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
sの文字数	len(s)
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, c='mediumspringgreen')
リストxdataとリストydataについて破線グラフを描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
リストxdataとデータ列ydataについて破線を描画して、その色をライトイエローに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
破線グラフの色をシャルトルーズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
リストalistの末尾を取り除く	alist[:-1]
最大長をnに制限してリストiterableからキューを作る	collections.deque(iterable, maxlen=n)
リストxdataと配列ydataについて折れ線グラフを描画して色をマルーンに設定する	plt.plot(xdata, ydata, color='maroon')
オレンジレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orangered')
ミディアムスプリンググリーン色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='mediumspringgreen')
リストxdataとリストydataの黒い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='k')
データ列dsとds2カラムから重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
dfのcolと列col2のヒートマップを描画する	sns.heatmap(df[[col, col2]].corr())
タプルatuple内の要素が全て真か調べる	all(atuple)
配列xdataとリストydataについての散布図をアクアマリン色としてプロットする	plt.plot(xdata, ydata, c='aquamarine')
dfの重複を確認する	df.duplicated()
サーモン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='salmon')
空行をプリントする	print()
スカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
配列xdataとリストydataの折れ線グラフに、黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
ライム色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lime')
リストxdataとリストydataについて散布図を描画して、マーカーの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, c='palevioletred')
dfのcolカラムの欠損値を直後の値で埋める	df[col].fillna(method='bfill')
ダークシアン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkcyan')
データフレームdfのカラムcolがリストalistに含まれる行を抽出する	df[df[col].isin(alist)]
グラフを使う	import matplotlib.pyplot as plt
折れ線グラフのバツマーカーを黒くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
データ列xdataとイテラブルydataについての散布図をライトスチールブルー色として描画する	plt.plot(xdata, ydata, c='lightsteelblue')
破線グラフの色をゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
辞書adictと辞書adict2をチェーンする	collections.ChainMap(adict, adict2)
リストxdataとリストydataについての散布図をフォレストグリーン色で描画する	plt.plot(xdata, ydata, c='forestgreen')
文字列elementがasetの要素かどうか確認する	element in aset
スラグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='slategrey')
本日の年数	datetime.datetime.today().year
黄色色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='yellow')
破線グラフの色をミディアムオーキッドにする	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
正規表現で、s全体をパターンpatternに複数行対応としてマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
散布図にカラーコードrgbの三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c=rgb)
データフレームdfのカラムcolの分	df[col].dt.minute
日時dtをISO形式の文字列に変換する	dt.isoformat()
データ列xdataと配列ydataについての散布図をインディゴ色を用いて描画する	plt.plot(xdata, ydata, c='indigo')
ライトスチールブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
数列xdataと配列ydataの散布図をローングリーン色として描く	plt.plot(xdata, ydata, c='lawngreen')
空列	[]
配列xdataとリストydataの破線グラフを描画してその色をコーラルとする	plt.plot(xdata, ydata, linestyle='dash', color='coral')
ミディアムターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
コマンドのn番目の引数を得る	sys.argv[n]
ライトスレイグレー色で散布図を描く	plt.plot(xdata, ydata, c='lightslategray')
リストxdataとデータ列ydataについてパールゴールデンロッド色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
リストxdataとリストydataについて散布図を描画して、sという凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
ゴールド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gold')
破線グラフの色をピーチパフにセットする	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
リストxdataとリストydataの折れ線グラフを描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
データフレームdfのカラムcolとカラムcol2を抽出する	df[[col, col2]]
散布図にダークスレートブルー色のマーカーを使う	plt.plot(xdata, ydata, c='darkslateblue')
リストxdataについてのヒストグラムをブルーバイオレット色で描く	plt.hist(xdata, color='blueviolet')
小さい順にdfをcolカラムとカラムcol2でインプレイスで並べる	df.sort_values(by=[col,col2], ascending=True, inplace=True)
破線の色をパレットトルコイズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
リストxdataとリストydataについて破線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をサドルブラウンに設定する	plt.plot(xdata, ydata, color='saddlebrown')
サーモン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='salmon')
破線グラフの色をライトサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
ネイビー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='navy')
データ列xdataをアクア色のヒストグラムで描画する	plt.hist(xdata, color='aqua')
辞書adictをJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False)
データ列xdataについてのヒストグラムをディムグレー色として描く	plt.hist(xdata, color='dimgrey')
整数nがリストalistのどれかか調べる	n in alist
データ列dsが何分か見る	ds.dt.minute
dfのカラムcolを100の位で丸めて、整数にする	df[col].round(-2).astype(int)
ファイルfilenameから拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filename))[0]
リストxdataとリストydataについての散布図を紺碧色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='azure', alpha=0.5)
配列xdataとリストydataの折れ線グラフを描画して色をカデットブルーにセットする	plt.plot(xdata, ydata, color='cadetblue')
八進sを整数に変換する	int(s, 8)
ロージーブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
数列xdataとリストydataの折れ線グラフを描画して、色をフローラルホワイトにする	plt.plot(xdata, ydata, color='floralwhite')
イテラブルxdataとリストydataについての散布図をダークグレー色として重なりを見やすく描く	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
フローラルホワイト色でイテラブルxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='floralwhite')
リストalistの先頭	alist[0]
fを一行ずつ読み込む	f.readline()
リストxdataとリストydataについて折れ線グラフを描画して、その色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, color='palevioletred')
オブジェクトobjは集合クラスか調べる	isinstance(obj, set)
散布図に紺碧色のマーカーを使う	plt.plot(xdata, ydata, c='azure')
ピアソン相関係数でデータフレームdfのリストalistカラムの相関行列	df[alist].corr(method='pearson')
iterableをsで結合する	s.join(map(str, iterable))
リストxdataとリストydataについて散布図を描画して、マーカーの色をレモンシフォンに設定する	plt.plot(xdata, ydata, c='lemonchiffon')
リストxdataとリストydataについて散布図を描画してマーカーの色をクリムゾン変える	plt.plot(xdata, ydata, c='crimson')
要素ひとつのタプル	(element,)
データ列ds中に文字列valueと文字列value2がいくつあるか数える	ds.isin([value, value2]).sum()
データフレームdfとデータフレームdf2をカラムcolをキーにして外部結合する	pd.merge(df, df2, on=col, how='outer')
リストxdataとリストydataについてライトスレイグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, color='darkgoldenrod')
リストxdataとリストydataを折れ線グラフで描画する	plt.plot(xdata, ydata)
ミディアムシアグリーン色のヒストグラムでリストxdataを描く	plt.hist(xdata, color='mediumseagreen')
リストxdataとリストydataの折れ線を描画して、その色をアイボリー変える	plt.plot(xdata, ydata, color='ivory')
ダークオリーブグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkolivegreen')
リストxdataとイテラブルydataの折れ線グラフを描画して、色をディムグレーに変更する	plt.plot(xdata, ydata, color='dimgrey')
ブラック色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='black')
リストxdataとリストydataについての散布図をライム色で描画する	plt.plot(xdata, ydata, c='lime')
データ列を使う	from sympy import substitution
nをn2だけ減少させる	n -= n2
配列xdataとリストydataの一点鎖線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
リストxdataとリストydataについて散布図を描画して、マーカーの色をマゼンタに設定する	plt.plot(xdata, ydata, c='magenta')
リストxdataとリストydataの破線を描画して、その色をペールグリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
xの逆双曲線正接	math.atanh(x)
コーンズシルク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='cornsilk')
ミスティローズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
配列xdataと配列ydataの破線グラフを描画して、色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
大文字・小文字を無視してパターンpatternをコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
リストxdataとイテラブルydataの散布図を描画して、マーカーの色をインディゴ変える	plt.plot(xdata, ydata, c='indigo')
ライトブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightblue')
バイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='violet')
オブジェクトobjがオブジェクトobj2と同一オブジェクトか調べる	obj is obj2
リストxdataとリストydataについて折れ線グラフを描画して、色をタンにする	plt.plot(xdata, ydata, color='tan')
sの右側から空白を取り除く	s.rstrip()
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークオーキッドに設定する	plt.plot(xdata, ydata, color='darkorchid')
パープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='purple')
リストxdataとリストydataについてリストalistの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=alist, cmap='Blues')
リストxdataとリストydataについての散布図をライムグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
マルーン色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='maroon')
リストxdataとリストydataについて折れ線グラフを描画して、その色をベージュに設定する	plt.plot(xdata, ydata, color='beige')
dfのcolの値をdictでまとめて置き換える	df[col].replace(adict)
タプルatupleをミュータブルにする	list(atuple)
折れ線の色をアザミとする	plt.plot(xdata, ydata, color='thistle')
イテラブルxdataをホワイトスモーク色の柱状グラフで描画する	plt.hist(xdata, color='whitesmoke')
配列としてデータフレームdfからcolを選択する	df[col].values
リストxdataとリストydataについての散布図に黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
sの先頭	s[0]
dfのカラムcol中にいくつNaNがあるか数える	df[col].isna().sum()
折れ線グラフの色をペルーに設定する	plt.plot(xdata, ydata, color='peru')
データフレームdfをTSVファイルでJSONLファイルfilenameに保存する	df.to_csv(filename, sep='\t')
リストxdataとリストydataの折れ線グラフに、黄色い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
カウンタaCounterを低頻出方からリストとして得る	aCounter.most_common()[::-1]
折れ線の四角印の線幅をnに設定する	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
リストxdataとイテラブルydataについての散布図を青色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)
ミッドナイトブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='midnightblue')
データフレームdfの中央値	df.median()
折れ線グラフの色をナバホホワイトに設定する	plt.plot(xdata, ydata, color='navajowhite')
散布図にブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='brown')
リストxdataとリストydataについての散布図をダークグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
ファイルfilenameの拡張子をtextに変更する	os.path.splitext(filename)[0] + text
折れ線グラフの色をダークマゼンタに設定する	plt.plot(xdata, ydata, color='darkmagenta')
数列xdataと配列ydataについて破線を描画して、その色をブルーバイオレットに変更する	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
辞書adictのkeyの値	adict[key]
データ列xdataとリストydataについて破線グラフを描画して、色をモカシンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
リストxdataとリストydataについての散布図をダークオレンジ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
配列xdataとデータ列ydataについて破線を描画して、その色をクリムゾンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
sを式として評価する	eval(s)
散布図にディープスカイブルー色のマーカーを使う	plt.plot(xdata, ydata, c='deepskyblue')
整数nの二進文字列	bin(n)[2:]
日付と時間dtをn分前に戻す	dt - datetime.timedelta(minutes=n)
セットasetにおけるセットaset2の補集合	aset.difference(aset2)
リストxdataとイテラブルydataについて破線グラフを描画して色をダークサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
リストxdataとリストydataについて散布図を描画して、マーカーの色をハリウッドにセットする	plt.plot(xdata, ydata, c='burlywood')
折れ線グラフの右三角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
紺碧色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='azure')
アンティークホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='antiquewhite')
配列xdataを耐火レンガ色のヒストグラムを使ってプロットする	plt.hist(xdata, color='firebrick')
dfの行列を入れ替える	df.T
ミディアムアクアマリン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumaquamarine')
配列xdataとデータ列ydataについて散布図を描画して、マーカーの色を黄色に設定する	plt.plot(xdata, ydata, c='yellow')
オブジェクトobjのtext属性の値を文字列elementに設定する	setattr(obj, text, element)
散布図に淡いピンク色色のマーカーを使う	plt.plot(xdata, ydata, c='lightpink')
空のタプル	()
リストxdataとリストydataについての散布図をライトスチールブルー色で描画する	plt.plot(xdata, ydata, c='lightsteelblue')
dfとデータフレームdf2を列colをキーにして内部結合する	pd.merge(df, df2, on=col, how='inner')
本日をタプルに変換する	datetime.datetime.today().timetuple()
dfをcolとcol2の組み合わせ毎にまとめて、分散	df.groupby([col, col2], as_index=False).var()
オブジェクトelementがセットasetに含まれるか調べる	element in aset
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, c='lightslategrey')
カウンタaCounterをカウントが多い順に列挙する	aCounter.most_common()
データ列xdataとデータ列ydataの散布図を描画して、色をダークスレートブルーに指定する	plt.plot(xdata, ydata, c='darkslateblue')
カーキ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='khaki')
データフレームdfを十の位で丸める	df.round(-1)
データフレームdfのカラムcolの欠損値を直前の値に設定する	df[col].fillna(method='ffill')
赤色としてリストxdataについての柱状図を描画する	plt.hist(xdata, color='red')
データフレームdfのカラムcolが何秒か見る	df[col].dt.second
リストxdataとリストydataについての散布図をインディゴ色で描画する	plt.plot(xdata, ydata, c='indigo')
タプルatupleのn番目の	atuple[n]
リストxdataとリストydataについて破線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
グラフにy=0の点線を付ける	plt.axhline(y=0, linestyle='dotted')
配列xdataとデータ列ydataについて破線を描画して、色を紺碧にする	plt.plot(xdata, ydata, linestyle='dash', color='azure')
リストxdataとリストydataについて散布図を描画して、マーカーの色をオレンジレッドに設定する	plt.plot(xdata, ydata, c='orangered')
デックdeqをタプルに変換する	tuple(deq)
配列xdataとリストydataの折れ線に、緑色のクロス印をプロットする	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
リストxdataとリストydataについて破線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
dfのcolの空文字をドロップする	df[col].replace('', np.nan).dropna()
青色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='blue')
リストxdataとデータ列ydataの散布図をダークレッド色で描画する	plt.plot(xdata, ydata, c='darkred')
書き込みできるようにUTF8としてファイルfilenameをオープンする]	open(filename, mode='w', encoding='utf-8')
リストxdataとリストydataの折れ線グラフをsとラベル付けして描画する	plt.plot(xdata, ydata, label=s)
リストxdataをライトグレー色のヒストグラムで描画する	plt.hist(xdata, color='lightgrey')
重なりを見やすくスレートブルー色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
デックdeqの先頭	deq[0]
データフレームdfのカラムcolをカテゴリデータに変換する	df[col].astype(object)
プログラムの実行を正しく終了する	sys.exit(0)
数列xdataとリストydataについて折れ線を描画して、その色をホワイトに変更する	plt.plot(xdata, ydata, color='white')
日付を使う	import datetime
折れ線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, color='mediumspringgreen')
オプションで、出力先を標準エラーに設定する	file = sys.stderr
データフレームdfのカラムcol中にいくつ文字列valueがあるか数える	df[col].isin([value]).sum()
リストxdataをバイオレット色のヒストグラムで描画する	plt.hist(xdata, color='violet')
ブラック色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='black')
ミディアムバイオレットレッド色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='mediumvioletred')
ベージュ色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='beige')
日時dtををn年後に進める	dt + datetime.timedelta(years=n)
リストxdataとリストydataについて折れ線を描画してその色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategrey')
データ列xdataをライトイエロー色の柱状グラフとして描画する	plt.hist(xdata, color='lightyellow')
カデットブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークマゼンタに設定する	plt.plot(xdata, ydata, c='darkmagenta')
ヒストグラムを描画して、半透明ににする	plt.hist(xdata, alpha=0.5)
リストxdataをリネン色のヒストグラムでプロットする	plt.hist(xdata, color='linen')
リストxdataとリストydataについての散布図をアイボリー色で重なりを見やすく描く	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
データ列dsの欠損値を直後の値に設定する	ds.fillna(method='bfill')
スラグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategray')
辞書adictにキーワード引数kwargsを追加更新する	adict.update(**kwargs)
リストxdataとリストydataについての散布図をオレンジレッド色で描画する	plt.plot(xdata, ydata, c='orangered')
破線の色をグレーにする	plt.plot(xdata, ydata, linestyle='dash', color='gray')
ダークバイオレット色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkviolet')
フクシア色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='fuchsia')
折れ線グラフのポイント印を緑色に設定する	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
リストxdataとリストydataの線幅nの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
nの桁数	len(str(n))
エクセルファイルファイルfilenameのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
既存のファイルfilenameをSJISで追加できるようにオープンする]	open(filename, mode='a', encoding='shift_jis')
リストxdataとリストydataについて散布図を描画して、マーカーの色をレモンシフォンにする	plt.plot(xdata, ydata, c='lemonchiffon')
折れ線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightgreen')
セットasetのイミュータブル版	frozenset(aset)
プロットの用途をポスター用に設定する	sns.set(context='poster')
adateにn週間を加える	adate + datetime.timedelta(weeks=n)
配列xdataについてのヒストグラムをグリーン色でプロットする	plt.hist(xdata, color='green')
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして結合する	pd.merge(df, df2, left_on=col, right_on=col2)
sを太字で表示する	print(f'\033[1m{s}\033[0m')
ライトイエロー色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
オプションで、標準出力に出力する	file = sys.stdout
リストxdataとリストydataについての散布図をベージュ色で描画する	plt.plot(xdata, ydata, c='beige')
整数nがセットasetのどれかか調べる	n in aset
赤い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')
折れ線グラフの色をシャルトルーズに設定する	plt.plot(xdata, ydata, color='chartreuse')
リストxdataとリストydataについて折れ線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(xdata, ydata, color='paleturquoise')
リストxdataとリストydataについて紺碧色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='azure')
Pandasで、dfのcollのUNIX時間から日付データにする	pd.to_datetime(df[col], unit='s', utc=True)
散布図に小麦色のマーカーを使う	plt.plot(xdata, ydata, c='wheat')
リストxdataとリストydataについてフクシア色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
貝殻色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='seashell')
日時dtが月曜日か調べる	dt.weekday() == 0
seabornのデフォルトを適用する	sns.set()
objがsという名前のプロパティを持つか調べる	hasattr(obj, s)
データフレームdfから重複した行をドロップして、更新する	df.drop_duplicates(inplace=True)
リストxdataとデータ列ydataの黄色い折れ線を描画する	plt.plot(xdata, ydata, color='y')
マルーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='maroon')
df全体を大きい順にリストalistで与えられたカラムを用いてソートする	df.sort_values(by=alist, ascending=False)
リストxdataとデータ列ydataについて破線グラフを描画して、その色をスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
xを整数型に変換する	int(x)
パープル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='purple')
数列xdataとリストydataについて散布図を描画してマーカーの色をコーンフラワーブルーにする	plt.plot(xdata, ydata, c='cornflowerblue')
データフレームdfのn行目を削除し、、更新する	df.drop(n, axis=0, inplace=True)
散布図にスプリンググリーン色のマーカーを使う	plt.plot(xdata, ydata, c='springgreen')
配列xdataとデータ列ydataの折れ線を描画して、その色を紺碧に設定する	plt.plot(xdata, ydata, color='azure')
リストxdataをピーチパフ色の柱状図として描く	plt.hist(xdata, color='peachpuff')
ラベンダーブラッシュ色で配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='lavenderblush')
散布図に黒い下三角マーカーを使用する	plt.plot(xdata, ydata, marker='v', c='k')
折れ線グラフの色を貝殻に設定する	plt.plot(xdata, ydata, color='seashell')
オブジェクトobjがPerson;$$クラス	isinstance(obj, TYPE)
日付adateにn日分、加算する	adate + datetime.timedelta(days=n)
データフレームdf中のカラムcolをn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
リストxdataとリストydataについて破線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
イテラブルxdataとリストydataについて折れ線グラフを描画して、その色をオーキッドにセットする	plt.plot(xdata, ydata, color='orchid')
ホットピンク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
リストxdataとリストydataの折れ線グラフをカラーコードrgbで描画する	plt.plot(xdata, ydata, color=rgb)
リストxdataとリストydataについて破線グラフを描画して、その色をカデットブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
数列xdataと数列ydataについての散布図をライトグリーン色を用いて描く	plt.plot(xdata, ydata, c='lightgreen')
辞書adictから最後に追加したエントリを取り出す	adict.popitem()
オプションで、namesをカラム名に設定する	names = names
黄色い折れ線グラフを描画する	plt.plot(xdata, ydata, color='y')
データ列xdataと配列ydataについてライムグリーン色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
xとx2をそれぞれnとn2に設定する	x, x2 = n, n2
プログラムの実行を強制的に終了する	sys.exit()
真	True
イテラブルxdataと数列ydataについての散布図にポイントマーカーを描く	plt.plot(xdata, ydata, marker='.')
日付adateが日付adate2より早い	adate < adate2
配列xdataとリストydataの折れ線に、緑色の左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
数式として、eの部分分数化を行う	sympy.apart(e)
データフレームdfのカラムcolの年	df[col].dt.year
行数を増やす	pd.set_option('display.max_rows', n)
折れ線の左三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='<', markersize=n)
リストxdataとリストydataについてイエローグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
辞書adictをチェーンマップに変換する	collections.ChainMap(adict)
x、x2、x3の最大値	max(x, x2, x3)
重なりを見やすく数列xdataとリストydataについての散布図をグレー色で描画する	plt.plot(xdata, ydata, c='grey', alpha=0.5)
ダークスレートブルー色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
破線グラフの色をピーチパフに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
パールゴールデンロッド色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
リストxdataとリストydataについてグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gray')
リストxdataとリストydataについてディープスカイブルー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
リストxdataとリストydataの折れ線グラフにポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
sを走査し、パターンpatternに複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
折れ線の色をスレートブルーにする	plt.plot(xdata, ydata, color='slateblue')
ダークシアン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkcyan')
リストxdataとリストydataについて破線グラフを描画して、その色をスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
ダークグリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
ピーチパフ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
オプションで、昇順にする	ascending = True
データ列xdataとリストydataの折れ線グラフに青い大バツ印を描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
カラーコードrgbの大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
ナバホホワイト色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='navajowhite')
アザミ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='thistle')
配列xdataと配列ydataについて破線グラフを描画してその色をミディアムバイオレットレッドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
散布図にカラーコードrgbの下三角マーカーを使用する	plt.plot(xdata, ydata, marker='v', c=rgb)
散布図にインディゴ色のマーカーを使う	plt.plot(xdata, ydata, c='indigo')
配列xdataとイテラブルydataの破線グラフを描画してその色をライトサーモンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
オールドレース色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='oldlace')
データフレームdfので何行重複するか確認する	df.duplicated().sum()
データ列xdataと配列ydataの折れ線グラフに、黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
文字列elementがリストalistの要素か調べる	element in alist
リストxdataとリストydataの赤い実線グラフを描く	plt.plot(xdata, ydata, linestyle='solid', color='r')
sを全て英小文字にする	s.casefold()
リストxdataをハリウッド色のヒストグラムで描画する	plt.hist(xdata, color='burlywood')
配列xdataと数列ydataの散布図を貝殻色を使って重なりを見やすく描く	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
セットasetとaset2の差を計算する	aset.difference(aset2)
xを十の位で丸める	round(x, -1)
日付adateををn日後に進める	adate + datetime.timedelta(days=n)
直後の値でデータフレームdfのNaNを埋める	df.fillna(method='bfill')
n年n2月n3日n4時の日時	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
データ列dsが何曜日か見る	ds.dt.weekday_name
sの先頭でパターンpatternにマッチさせる	re.match(pattern, s)
ラベンダーブラッシュ色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
ホワイト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='white')
ディープスカイブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='deepskyblue')
イテラブルxdataとイテラブルydataについて折れ線グラフを描画して、その色をスチールブルーに変更する	plt.plot(xdata, ydata, color='steelblue')
リストxdataと配列ydataについて破線グラフを描画してその色を小麦に設定する	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
カラムcolとカラムcol2の重複を削除する	df.drop_duplicates(subset=[col, col2])
xの逆余弦	math.acos(x)
リストxdataをミディアムバイオレットレッド色のヒストグラムで描画する	plt.hist(xdata, color='mediumvioletred')
dtにn秒分加える	dt + datetime.timedelta(seconds=n)
配列xdataと配列ydataの折れ線グラフに緑色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
文字列element∈セットaset	element in aset
Pandasで、sのエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
ダークオレンジ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkorange')
データフレームdfのn行まで	df[:n]
オブジェクトelementがalistの要素か	element in alist
データ列xdataとリストydataについてレベッカパープル色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
リストxdataとリストydataについてパレットトルコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')
整数nのバイト長を調べる	(n.bit_length() + 7) // 8
折れ線グラフのダイアモンドマーカーを黒色に設定する	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
配列xdataとリストydataについての散布図をピンク色を用いて描画する	plt.plot(xdata, ydata, c='pink')
折れ線グラフのマーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
dfの最後	df.tail()
オールドレース色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
赤い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
配列xdataと配列ydataについて破線を描画して、その色をダークシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
折れ線グラフの色をリネンに設定する	plt.plot(xdata, ydata, color='linen')
ポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.')
リストxdataとリストydataについての散布図に黒い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
データフレームdfのcolカラムとcol2毎の標準偏差	df.groupby([col, col2], as_index=False).std()
計数オブジェクトを新規にマッピングadictから作成して、Xとする	X = collections.Counter(adict)
リストxdataとリストydataについての散布図をトマト色で描画する	plt.plot(xdata, ydata, c='tomato')
nを半分にする	n /= 2
ダークオリーブグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkolivegreen')
リストxdataとリストydataについての散布図をレモンシフォン色で描画する	plt.plot(xdata, ydata, c='lemonchiffon')
リストxdataとリストydataの折れ線グラフに、赤い四角マーカーを描く	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')
配列xdataと配列ydataについての散布図に四角マーカーを描く	plt.plot(xdata, ydata, marker='s')
TSVファイルfilenameを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
リストxdataをライトゴールドロディイエロー色のヒストグラムで描画する	plt.hist(xdata, color='lightgoldenrodyellow')
列iterableを累加したイテラブルを得る	itertools.accumulate(iterable)
nが2で割り切れないか調べる	n % 2 == 1
オレンジ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='orange', alpha=0.5)
セットaset＼aset2	aset.difference(aset2)
objがtextフィールドを持つかどうか調べる	hasattr(obj, text)
データフレームdfのカラムcolの歪度	df[col].kurt()
リストxdataとリストydataについて破線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
列col毎にdfをまとめて、col2の最大値を求める	df.groupby(col)[col2].max()
オプションでどの列もインデックスに設定しない	index_col = None
オプションで、エンコーディングを文字コードtextに設定する	encoding = text
モカシン色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
空の両端キューを新しく作る	collections.deque()
折れ線グラフの色をダークオリーブグリーンに設定する	plt.plot(xdata, ydata, color='darkolivegreen')
インディゴ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indigo')
折れ線に大バツ印を使う	plt.plot(xdata, ydata, marker='X')
折れ線グラフの星マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
リストxdataをライトコーラル色のヒストグラムとして描画する	plt.hist(xdata, color='lightcoral')
arrayを等量でビン数nでビン分割する	pd.qcut(array, n)
リストxdataとリストydataについての散布図をペルー色で描画する	plt.plot(xdata, ydata, c='peru')
データフレームdfのカラムcolの文字列が正規表現sにマッチしないデータを抽出する	df[not df[col].str.match(s)]
実線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='solid', color='b')
破線グラフの色をライトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
objにsという名前のフィールドが存在するかどうか判定する	hasattr(obj, s)
パールゴールデンロッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='palegoldenrod')
リストxdataとリストydataについて破線グラフを描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
リストxdataとリストydataの折れ線グラフに、黄色いバツマーカーをプロットする	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
ファイルfilenameの拡張子	os.path.splitext(filename)[1].lstrip('.')
sはs2と同じか比較する	s == s2
リストxdataとリストydataの散布図を描画して、マーカーの色をライムグリーンに設定する	plt.plot(xdata, ydata, c='limegreen')
データ列xdataとリストydataについて折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategray')
タプルatupleを引数として展開して表示する	print(*atuple, sep=',')
リストxdataとリストydataの折れ線グラフに青色の左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
sはキーワードか調べる	keyword.iskeyword(s)
データフレームdfの中で列colとcol2に重複があるか確認する	df.duplicated(subset=[col1, col2])
リストxdataとリストydataのカラーコードrgbの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
データフレームdfがどの程度分散しているか確認する	df.var()
リストxdataとリストydataについての散布図をピンク色で重なりを見やすく描く	plt.plot(xdata, ydata, c='pink', alpha=0.5)
折れ線の色をスラグレー変える	plt.plot(xdata, ydata, color='slategrey')
黒色の△印として散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
破線グラフの色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
リストxdataをnからn2の区間でヒストグラムにする	plt.hist(xdata, range=(n, n2))
リネン色として配列xdataについてのヒストグラムを描く	plt.hist(xdata, color='linen')
データフレームdfのカラムcolの標本標準偏差	df[col].std()
arrayをビン数nでビン分割して、namesのラベルをつける	pd.cut(array, n, labels=names)
ダークカーキ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
ロイヤルブルー色のマーカーを用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
ホワイト色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='white')
リストalistで指定された列でdf全体を並べてNaNを先頭に来るようにする	df.sort_values(by=alist, na_position='first')
リストxdataとリストydataについての散布図をダークオリーブグリーン色で描画する	plt.plot(xdata, ydata, c='darkolivegreen')
ミディアムオーキッド色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
ダーク・スラテグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
xを十六進文字列に変換する	x.hex()
散布図に黒いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='k')
データフレームdfのカラムcolが正規表現sにマッチする行を抽出する	df[df[col].str.match(s)]
リストxdataとリストydataについて破線グラフを描画して、その色をダークレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
Pandasでdsのエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
リストxdataとリストydataについてダークオリーブグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
SJISでファイルパスfilenameを書き込み用に開く]	open(filename, mode='w', encoding='shift_jis')
データフレームdfのカラムcolの各データ値の出現数	df[col].value_counts()
改行を除いて標準入力から1行だけ読む	sys.stdin.readline().rstrip()
折れ線グラフの三角マーカーを青くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
{タプルatupleを/ひとつ置きに}取り出す	atuple[::2]
リストxdataとリストydataについて破線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
散布図にミントクリーム色のマーカーを用いる	plt.plot(xdata, ydata, c='mintcream')
ホワイトスモーク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='whitesmoke')
ナバホホワイト色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
xをx2で整数除算する	x // x2
イテラブルxdataと配列ydataの破線グラフを描画して、その色をミディアムスレートブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
イテラブルxdataと配列ydataの散布図を描画して、星マーカーの色をrgbに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
散布図にパウダーブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='powderblue')
ゴールド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='gold')
リストxdataとリストydataについての散布図をスチールブルー色で描画する	plt.plot(xdata, ydata, c='steelblue')
黒い四角マーカーをイテラブルxdataとリストydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='s', c='k')
ダークグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
データフレームdfのカラムcolがsで始まらない行を抽出する	df[not df[col].str.startswith(s)]
日時dtが水曜日か調べる	dt.weekday() == 2
シャルトルーズ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='chartreuse')
リストxdataとイテラブルydataの折れ線グラフを描画してその色を黄色に設定する	plt.plot(xdata, ydata, color='yellow')
ベクトルxとx2のユークリッド距離	math.dist(x, x2)
s2がs中にあるか調べる	s2 in s
データ列dsのNaNを最小値で置換する	ds.fillna(ds.min())
リストxdataとリストydataの折れ線グラフに、黄色い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
リストxdataとリストydataについて散布図を描画して、マーカーの色をタンに設定する	plt.plot(xdata, ydata, c='tan')
sの名前を持ち、s2のプロパティを持った名前付きタプルを定義する	collections.namedtuple(s, s2)
綺麗なグラフを描画する	import seaborn as sns
折れ線グラフの色をサドルブラウンに設定する	plt.plot(xdata, ydata, color='saddlebrown')
日付adateが日曜日	adate.weekday() == 6
本日が何年か知る	datetime.datetime.today().year
Pandasで、データ列dsのエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
ナバホホワイトで配列xdataについての柱状グラフをプロットする	plt.hist(xdata, color='navajowhite')
データフレームdfのリストalistで指定されたカラムを抽出する	df[alist]
nが3で割り切れるか調べる	n % 3 == 0
リストxdataとリストydataについて散布図を描画して、マーカーの色をパレットトルコイズに設定する	plt.plot(xdata, ydata, c='paleturquoise')
アリスブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='aliceblue')
リストxdataとリストydataの折れ線グラフを描画して、破線に設定する	plt.plot(xdata, ydata, linestyle='dashed')
adateと日付adate2の時間差を秒数で計算する	(adate - adate2).total_seconds()//60
散布図にリネン色のマーカーを使う	plt.plot(xdata, ydata, c='linen')
リストiterableを累積する	itertools.accumulate(iterable, operator.mul)
パレットトルコイズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='paleturquoise')
リストalistにリストalist2を展開する	alist.extend(alist2)
オブジェクトobjのオブジェクト識別子	id(obj)
リストxdataとリストydataについて破線グラフを描画してその色をゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
リストxdataとイテラブルydataについて一点鎖線グラフを描画して色を赤くする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
破線グラフの色をロイヤルブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
カラーコードrgbの四角マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='s', c=rgb)
データフレームdfをカラムcol毎にグループ化して、カラムcol2の要約統計量を求める	df.groupby(col).describe()[col2]
スピアマン相関係数としてデータフレームdfのリストalistで指定されたカラムの相関行列	df[alist].corr(method='spearman')
ネイビー色のヒストグラムとして配列xdataを描く	plt.hist(xdata, color='navy')
nが2で割り切れるか調べる	n % 2 == 0
リストxdataとリストydataについて散布図を描画してマーカーの色をスプリンググリーンにセットする	plt.plot(xdata, ydata, c='springgreen')
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして内部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='inner')
ビン数をnに設定してデータ列xdataのヒストグラムをプロットする	plt.hist(xdata, bins=n)
sを最後のs2で二分し、前半の文字列を使う	s.rpartition(s2)[0]
データフレームdfのカラムcol毎の最大値	df.groupby(col).max()
シアン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='cyan')
ブランチドアーモンド色で散布図をプロットする	plt.plot(xdata, ydata, c='blanchedalmond')
タプルatupleのn番目以降の要素を抽出する	atuple[n:]
sの中からパターンpatternにASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)
リストxdataをマルーン色のヒストグラムで描く	plt.hist(xdata, color='maroon')
s2をsの先頭から見つける	s.find(s2)
シエナでデータ列xdataについての柱状グラフをプロットする	plt.hist(xdata, color='sienna')
データ列xdataとリストydataの散布図をコーンフラワーブルー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
リストxdataとリストydataについての散布図をフローラルホワイト色で描画する	plt.plot(xdata, ydata, c='floralwhite')
タプルatupleの要素をソートする	sorted(atuple)
dfのリストalist列を整数に丸める	df[alist].round()
nとn2が等しいか調べる	n == n2
正規分布で疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
リストxdataとリストydataについての散布図をグリーンイエロー色で描画する	plt.plot(xdata, ydata, c='greenyellow')
文字列elementと文字列element2をタブで区切って表示する	print(element, element2, sep='\t')
データフレームdfのcolカラムとcol2カラム毎の平均値	df.groupby([col, col2], as_index=False).mean()
データフレームdfのカラムcolとデータフレームdf2のカラムcol2をキーにして外部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='outer')
cに辞書adictを追加する	aCounter.update(adict)
文字列elementがタプルatupleに含まれないかどうか確認する	element not in atuple
数式としてeの数値を求める	float(e)
リストxdataをピンク色のヒストグラムで描画する	plt.hist(xdata, color='pink')
日時dtとdt2の時間差	dt - dt2
リストxdataとリストydataの点線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dotted', color='b')
リストxdataとリストydataについての散布図をグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='grey', alpha=0.5)
リストxdataをリネン色のヒストグラムで描画する	plt.hist(xdata, color='linen')
リストxdataとリストydataの折れ線グラフを描画して、sとラベル付けする	plt.plot(xdata, ydata, label=s)
ダークシアン色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='darkcyan')
aCounterから0以下のカウントを取り除く	+aCounter
ブランチドアーモンド色の折れ線グラフを描く	plt.plot(xdata, ydata, color='blanchedalmond')
左三角印で散布図を描く	plt.plot(xdata, ydata, marker='<')
JSONを使う	import json
リストxdataとリストydataの折れ線グラフに、青い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
sのn番目より前にs2が含まれるか調べる	s.find(s2, end=n) != -1
空行を表示する	print()
リストxdataとリストydataについて折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightgreen')
リストxdataとリストydataの折れ線グラフを描画して、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
コーンズシルク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='cornsilk')
折れ線グラフの色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, color='mediumorchid')
オーキッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='orchid')
パールバイオレットレッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
破線グラフの色をスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
オブジェクトobjは数値か調べる	isinstance(obj, (int,float))
データフレームdfをインデックスによって並べる	df.sort_index()
配列xdataとデータ列ydataについてタン色の折れ線を描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='tan')
リストxdataとリストydataについての散布図をマルーン色で描画する	plt.plot(xdata, ydata, c='maroon')
sに日本語が含まれるか調べる	re.search('[あ-んア-ン一-鿐]', s)
リストxdataとリストydataについての散布図をデピンク色で描画する	plt.plot(xdata, ydata, c='deeppink')
ライトスレイグレー色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='lightslategrey')
最大長nの両端キューをリストiterableから作って、Xに代入する	X = collections.deque(iterable, maxlen=n)
破線グラフの色をオリベドラブに設定する	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
セットasetをセットaset2との共通要素だけに更新する	aset.intersection_update(aset2)
折れ線グラフの色をパウダーブルーに設定する	plt.plot(xdata, ydata, color='powderblue')
データ列xdataとデータ列ydataについて破線を描画して、色をディープスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
データフレームdfをJSONLファイルfilenameにヘッダを付けずに保存する	df.to_csv(filename, header=None)
右からsをs2で区切る	s.rsplit(s2)
リストxdataをダークレッド色のヒストグラムで描画する	plt.hist(xdata, color='darkred')
耐火レンガ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
散布図にカラーコードrgbの右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c=rgb)
データフレームdfのカラムcolのNaNを中央値で埋める	df[col].fillna(df[col].median())
リストxdataとリストydataについてフローラルホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
散布図にゴールド色のマーカーを使う	plt.plot(xdata, ydata, c='gold')
リストxdataと配列ydataについて散布図を描画して、マーカーを▲に変更する	plt.plot(xdata, ydata, marker='^')
xの双曲線余弦の逆数	math.acosh(x)
配列xdataと配列ydataについて一点鎖線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
グラフで使える色の一覧	matplotlib.colors.cnames
重なりを見やすくバイオレット色として散布図を描画する	plt.plot(xdata, ydata, c='violet', alpha=0.5)
sが平仮名か調べる	('ぁ' <= s <= 'ん')
sが全て英大文字か調べる	s.isupper()
リストxdataと配列ydataについてディムグレー色の折れ線グラフを描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
ラベンダーブラッシュ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
リストxdataとリストydataについての散布図をダークオーキッド色で描画する	plt.plot(xdata, ydata, c='darkorchid')
リストxdataとリストydataの折れ線グラフに、赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
xをの小数点以下第一位で丸める	round(x, 1)
ダークゴールデンロッド色のマーカーを用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
データフレームdfのカラムcolを小数点以下n桁で丸める	df[col].round(n)
ヒートマップを用いてデータフレームdfのcolとcol2の相関行列をグラフ化する	sns.heatmap(df[[col, col2]].corr())
アイボリー色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='ivory')
ダークオーキッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
nの約数を列挙する	"[i for i in range(1, int(n**0.5)+1) if n % i == 0] + [n//i for i in range(1,
                                                                          int(n**0.5)+1) if n % i == 0 and i != n // i].reverse()"
ライム色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lime')
バイトオーダを知る	sys.byteorder
破線グラフの色をパープル変える	plt.plot(xdata, ydata, linestyle='dash', color='purple')
レベッカパープル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
データ列dsの欠損値を最頻値で埋める	ds.fillna(ds.mode().iloc[0])
散布図にダークターコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='darkturquoise')
折れ線グラフの大バツマーカーを青くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
ミディアムパープル色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumpurple')
ファイルパスのセパレータ記号	os.sep
辞書adictからkeyの値	adict.get(key)
数列xdataと数列ydataについて散布図を描画して、その大きさをnにセットする	plt.scatter(xdata, ydata, s=n)
リストxdataとリストydataの黒い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='k')
nが-9以上、9以下	-9 <= n <= 9
折れ線グラフの色をライトスレイグレーにする	plt.plot(xdata, ydata, color='lightslategray')
サドルブラウン色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
辞書adictからkeyを取り除く	adict.pop(key)
ダーク・スラテグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkslategrey')
データフレームdfのcolは何月か調べる	df[col].dt.month
ホワイトスモーク色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='whitesmoke')
セットaset⊂セットaset2	aset < aset2
日付adateと日付adate2の時間差を秒数で求める	(adate - adate2).total_seconds()//60
リストxdataとリストydataの折れ線グラフに、線幅nのポイント印を描画する	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をターコイズに設定する	plt.plot(xdata, ydata, color='turquoise')
リストalistが空か調べる	len(alist) == 0
ミディアムスレートブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumslateblue')
グラフにグリッド線を入れる	plt.grid(True)
nをn2だけ右シフトする	n >> n2
ターコイズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='turquoise')
リストxdataをオーキッド色のヒストグラムで描く	plt.hist(xdata, color='orchid')
ダークバイオレット色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkviolet')
デックdeqの要素をインプレースに反転する	deq.reverse()
数列xdataとリストydataの実線を描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='solid', color='k')
データフレームdfのカラムcolとカラムcol2毎の標準偏差	df.groupby([col, col2], as_index=False).std()
データフレームdfの上位25%	df.quantile(0.25)
データフレームdfのカラムcolとカラムcol2毎の最大値	df.groupby([col, col2], as_index=False).max()
リストxdataとリストydataについての散布図をサンディーブラウン色で描画する	plt.plot(xdata, ydata, c='sandybrown')
リストxdataとリストydataについての散布図をダーク・スラテグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
数列xdataとリストydataの散布図をライトグレー色として描画する	plt.plot(xdata, ydata, c='lightgrey')
カウンタaCounter内のオブジェクトelement文字列を一つ増やす	aCounter[element] += 1
日時dtからn日分、減算する	dt - datetime.timedelta(days=n)
データフレームdfのカラムcolの最頻値の出現回数	df[col].freq()
リストxdataとリストydataについてサドルブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
文字列elementが無限に繰り返すイテラブル	itertools.repeat(element)
カラーコードrgbの左三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
辞書adictにadict2のエントリを追加更新する	adict.update(adict2)
赤い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='r')
リストxdataとリストydataの折れ線グラフに右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
折れ線グラフの色をダークオレンジに設定する	plt.plot(xdata, ydata, color='darkorange')
データフレームdfをカラムcol毎にグループ化して、平均値を求める	df.groupby(col).mean()
sの接尾辞からs2を取り除く	s.removesuffix(s2)
配列xdataと配列ydataについてミディアムターコイズ色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
sは全て数値か	s.isnumeric()
折れ線グラフの色をスレートブルーに設定する	plt.plot(xdata, ydata, color='slateblue')
リストxdataとリストydataについての散布図をバイオレット色で描画する	plt.plot(xdata, ydata, c='violet')
配列xdataと数列ydataの散布図を描画して色を青に設定する	plt.plot(xdata, ydata, c='blue')
重なりを見やすく淡いピンク色色を用いてデータ列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
データフレームdfをカラムcolによって昇順に破壊的にソートする	df.sort_values(by=col, ascending=True, inplace=True)
ミディアムアクアマリン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mediumaquamarine')
リストxdataのヒストグラムを描画する	plt.hist(xdata)
イテラブルxdataとリストydataについてスレートブルー色の折れ線を描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
ブランチドアーモンド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='blanchedalmond')
sのn番目がs2で始まるか	s.startswith(s2, n)
TSVファイルfilenameをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
スクリプト名を得る	sys.argv[0]
リストxdataとリストydataについての散布図をドジャーブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
dsを丸めて、整数型にする	ds.round().astype(int)
数列xdataと配列ydataについての散布図をミントクリーム色で描く	plt.plot(xdata, ydata, c='mintcream')
データフレームdfのカラムcolの欠損値を平均値で埋める	df[col].fillna(df[col].mean())
破線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='dashed', color='b')
リストxdataとリストydataについての散布図をシアン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
折れ線グラフの色をドジャーブルーに設定する	plt.plot(xdata, ydata, color='dodgerblue')
sのの中で複数行対応のパターンpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
スプリンググリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='springgreen')
リストalistの各要素を関数funcに適用した結果でソートする	sorted(alist, key=func)
sの接尾辞がs2か調べる	s.endswith(s2)
ダークシアン色としてリストxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='darkcyan')
データフレームdfからカテゴリデータのカラムの名前の一覧を使う	df.select_dtypes('object').columns
データフレームdfを欠損値を含めてカラムcol毎にグループ化する	df.groupby(col, dropna=False)
リストxdataとリストydataについての散布図にカラーコードrgbの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
散布図にモカシン色のマーカーを用いる	plt.plot(xdata, ydata, c='moccasin')
最適な場所にデータラベルを入れる	plt.legend(loc='best')
折れ線グラフのポイントマーカーを黒くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
プロットのx座標の名前をsにする	plt.xlabel(s)
xの双曲線正弦の逆数	math.asinh(x)
イテラブルxdataとリストydataについてライトゴールドロディイエロー色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
アリスブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='aliceblue')
本日が金曜日か調べる	datetime.datetime.today().weekday() == 4
リストxdataとリストydataについて散布図を描画して、マーカーの色をミントクリームに設定する	plt.plot(xdata, ydata, c='mintcream')
破線グラフの色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
リストxdataとリストydataについてダークマゼンタ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
sの先頭で大文字・小文字を無視してパターンpatternにマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
データフレームdfのカラムcolがx以上かつx2未満の行を抽出する	df[(x <= df[col]) & (df[col] < x2)]
破線グラフの色をターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
散布図を重なりを見やすくビスク色のマーカーで描く	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
カラムcolと列col2によって降順にdfを並べる	df.sort_values(by=[col,col2], ascending=False)
リストxdataとリストydataについてアリスブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
リストxdataとリストydataの実線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
ホワイトスモーク色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='whitesmoke')
シアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cyan')
リストxdataとリストydataについてシエナ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sienna')
オプションで、どのカラムもインデックスに設定しない	index_col = None
グラフのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
xの整数部	math.modf(x)[1]
リストxdataをアイボリー色のヒストグラムを用いてプロットする	plt.hist(xdata, color='ivory')
リストxdataとリストydataについて破線グラフを描画して、その色をアリスブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
ミディアムパープル色を用いてヒストグラムを描画する	plt.hist(xdata, color='mediumpurple')
オブジェクトobjが名前付きタプルオブジェクトか	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
3数n,n2,n3の最大公約数	math.gcd(n, n2, n3)
リストxdataとリストydataについての散布図をホワイトスモーク色で描画する	plt.plot(xdata, ydata, c='whitesmoke')
sで区切って文字列elementとオブジェクトelement2をプリントする	print(element, element2, sep=s)
グラフ中のタイトルをsに設定する	plt.title(s)
ライトグレー色でイテラブルxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='lightgray')
リストxdataとリストydataについての散布図をマゼンタ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をダークグリーンに設定する	plt.plot(xdata, ydata, color='darkgreen')
dfの列colとデータフレームdf2の列col2をキーとして結合する	pd.merge(df, df2, left_on=col, right_on=col2)
リストxdataとリストydataについての散布図をディムグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gray')
リストxdataとリストydataについての散布図をライトサーモン色でプロットする	plt.plot(xdata, ydata, c='lightsalmon')
リストxdataとリストydataについての散布図を重なりを見やすくミントクリーム色として描く	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
オールドレース色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='oldlace')
シエナ色として散布図を描画する	plt.plot(xdata, ydata, c='sienna')
配列xdataとリストydataの青い折れ線グラフを描画する	plt.plot(xdata, ydata, color='b')
リストxdataとリストydataについての散布図をスプリンググリーン色で描画する	plt.plot(xdata, ydata, c='springgreen')
リストxdataとリストydataについて折れ線グラフを描画して色をシルバーに設定する	plt.plot(xdata, ydata, color='silver')
破線の色をブルーバイオレット変える	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
データフレームdfのsをNaNに変換する	df.replace(s, np.nan)
リストxdataとリストydataについての散布図をダークオレンジ色で描画する	plt.plot(xdata, ydata, c='darkorange')
現在のタイムスタンプ	int(time.time())
リストalistの長さだけ繰り返す	range(len(alist))
グリーンイエロー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
数式として、eの平方根を求める	sympy.sqrt(e)
データ列xdataと配列ydataについての散布図をラベンダーブラッシュ色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
リストiterableからn個、ランダムに選ぶ	random.choices(iterable, k=n)
リストxdataとリストydataについて折れ線グラフを描画して、その色をパパイヤウィップに設定する	plt.plot(xdata, ydata, color='papayawhip')
ディムグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='dimgrey')
データフレームdfからリストalistで指定されたデータ型のカラムを抽出する	df.select_dtypes(include=alist)
セットasetがセットaset2の真上位集合か調べる	aset > aset2
データ列xdataと配列ydataについて破線を描画して、色をダークオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
ファイルfilenameをベース名と拡張子に分割する	os.path.splitext(filename)
ファイルfilenameから拡張子付きのファイル名を求める	os.path.basename(filename)
散布図に赤いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='r')
整数nを八進文字列に変換する	oct(n)[2:]
数列xdataをミディアムスプリンググリーン色のヒストグラムとして描く	plt.hist(xdata, color='mediumspringgreen')
rgbの大バツ印として散布図を描く	plt.plot(xdata, ydata, marker='X', c=rgb)
パパイヤウィップ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
ダークゴールデンロッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkgoldenrod')
ダークゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
セットasetがセットaset2と互いに素か調べる	aset.isdisjoint(aset2)
折れ線グラフの星マーカーを赤くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
ペルー色のマーカーを用いて重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='peru', alpha=0.5)
既存のファイルfilenameをUTF8で追加できるようにオープンする]	open(filename, mode='a', encoding='utf-8')
asetからセットaset2の要素を取り除く	aset.difference_update(aset2)
ペルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='peru')
ダークブルー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
リストxdataとリストydataについて破線グラフを描画して、その色をチョコレートに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
xの平方根	math.sqrt(x)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトスチールブルーに設定する	plt.plot(xdata, ydata, c='lightsteelblue')
各カラムcol毎にデータフレームdfをグループ化して、col2の標準偏差を求める	df.groupby(col)[col2].std()
散布図にオレンジ色のマーカーを使う	plt.plot(xdata, ydata, c='orange')
リストxdataとリストydataについて散布図を描画して、マーカーの色をコーンズシルクに設定する	plt.plot(xdata, ydata, c='cornsilk')
デックdeqが空でないか調べる	len(deq) != 0
データフレームdfをcolごとに集約して関数適用した値を求める	df.groupby(col).agg(func)
日時dtにn分分、加算する	dt + datetime.timedelta(minutes=n)
折れ線の色をマルーンに設定する	plt.plot(xdata, ydata, color='maroon')
データフレームdfのカラムcolの値がx、かつ列col2がx2である行を抽出する	df[(df[col] == x) & (df[col2] == x2)]
リストxdataをダークオリーブグリーン色のヒストグラムで描画する	plt.hist(xdata, color='darkolivegreen')
ディムグレー色でデータ列xdataとリストydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
データ列dsの値をdictでまとめて置き換える	ds.replace(adict)
オプションで、改行コードを動作環境依存に設定する	newline = None
elementがasetに含まれないか確認する	element not in aset
リストalistとリストalist2の積集合	list(set(alist) & set(alist2))
折れ線グラフの丸マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='o', markersize=n)
aCounter内の文字列element項目のカウントを求める	aCounter[element]
xが無限大か確認する	math.isinf(x)
オブジェクトobjのtextプロパティを取り除く	delattr(obj, text)
リストxdataとリストydataについてホワイトスモーク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
レベッカパープル色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
ドジャーブルー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='dodgerblue')
散布図に赤いダイアモンド印を用いる	plt.plot(xdata, ydata, marker='D', c='r')
ピーチパフ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='peachpuff')
アクアマリン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='aquamarine')
リストxdataとリストydataについての散布図をインディゴ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
グラフの用途をポスターに設定する	sns.set(context='poster')
破線グラフの色をダークスラテグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をチョコレートに設定する	plt.plot(xdata, ydata, color='chocolate')
データフレームを表示するとき表示する最大列数を変更する	pd.set_option('display.max_columns', n)
グレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='grey', alpha=0.5)
データフレームdfをcol毎にグループ化して、列col2の要約統計量を算出する	df.groupby(col).describe()[col2]
nが5の倍数かどうか調べる	n % 5 == 0
折れ線グラフの色をグレーに設定する	plt.plot(xdata, ydata, color='grey')
散布図をスカイブルー色のマーカーとして描画する	plt.plot(xdata, ydata, c='skyblue')
一点鎖線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
整数nを二進文字列に変換する	bin(n)[2:]
重なりを見やすくイテラブルxdataとリストydataの散布図をインディゴ色で描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
データフレームdfのカラムcolを100の位で丸めて、整数型にする	df[col].round(-2).astype(int)
折れ線グラフの上三角印を赤くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
データフレームdfのcolのNaNを中央値に設定する	df[col].fillna(df[col].median())
nマイナスn2を求める	n - n2
イエローグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='yellowgreen')
リストxdataをコーンズシルク色のヒストグラムで描画する	plt.hist(xdata, color='cornsilk')
ファイルfilenameとtextを結合する	os.path.join(filename, text)
フクシア色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
日付adateが何年か知る	adate.year
xがNaN	math.isnan(x)
リストxdataとリストydataについてのヒストグラムをふたつ並べて描画する	plt.hist([xdata, ydata], color=['b', 'r'])
データフレームdfの相関行列をヒートマップとして描画する	sns.heatmap(df.corr())
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークレッドに設定する	plt.plot(xdata, ydata, c='darkred')
sのでパターンpatternにマッチした全文字列をリストにする	re.findall(pattern, s)
リストxdataとリストydataについての散布図をアクア色で描画する	plt.plot(xdata, ydata, c='aqua')
等量でビン数nを使ってデータフレームdfの中のカラムcolをビン分割する	pd.qcut(df[col], n)
sのn番目からs2を探す	s.find(s2, start=n)
PandasでTSVファイルfilenameからCSVをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
散布図をカラーコードrgbの上三角印で描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
数列xdataと数列ydataの散布図をダークマゼンタ色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
アザミ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='thistle')
textとtext2をパスとして結合する	os.path.join(text, text2)
データ列xdataとデータ列ydataについてフクシア色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
リストxdataと配列ydataの散布図をスノー色を使ってプロットする	plt.plot(xdata, ydata, c='snow')
sの全角数字を半角数字に変換する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
リストalistの文字列elementが最初に見つかるインデックス	alist.index(element)
リストxdataと数列ydataの折れ線グラフを描画して実線に設定する	plt.plot(xdata, ydata, linestyle='solid')
asetから任意の要素を取り出す	aset.pop()
リストxdataとリストydataについてチョコレート色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
折れ線グラフの色をアザミに設定する	plt.plot(xdata, ydata, color='thistle')
sをカンマで区切り、文字列のリストに変換する	s.split(',')
リストiterableの各要素に対して、関数predicatefuncが真であれば、その要素を出力する	itertools.takewhile(predicatefunc, iterable)
リストxdataと配列ydataの折れ線グラフを描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
dfのcolのNaNを前の値に設定する	df[col].fillna(method='ffill')
クリムゾン色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='crimson')
ホワイト色でヒストグラムを描く	plt.hist(xdata, color='white')
データフレームdfのカラムcolの最頻値	df[col].mode()
グラフにy=0の点線をつける	plt.axhline(y=0, linestyle='dotted')
グラフ中の横軸の軸ラベルをsに設定する	plt.xlabel(s)
ラベンダーブラッシュ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lavenderblush')
セットasetに配列iterableを追加する	aset.update(iterable)
データフレームdfのカラムcolの欠損値をxで埋める	df[col].fillna(x)
リストxdataとリストydataについての散布図をアザミ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
デックdeqの末尾から要素を取り除く	deq.pop()
セットasetに文字列elementを追加する	aset.add(element)
リストxdataをゴーストホワイト色のヒストグラムで描画する	plt.hist(xdata, color='ghostwhite')
alistをn個にビン分割してnamesのラベルをつける	pd.cut(alist, n, labels=names)
データフレームdfの各col列毎の標準偏差	df.groupby(col).std()
散布図にフォレストグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='forestgreen')
リストxdataとリストydataについての散布図をダークオリーブグリーン色で描く	plt.plot(xdata, ydata, c='darkolivegreen')
リストxdataとリストydataの折れ線グラフに、黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
散布図にバツマーカーを使用する	plt.plot(xdata, ydata, marker='x')
ダークシアン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
タン色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='tan', alpha=0.5)
リストxdataをブラック色のヒストグラムで描画する	plt.hist(xdata, color='black')
セットaset∩セットaset2	aset.intersection(aset2)
スレートブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='slateblue')
ミディアムバイオレットレッド色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
データフレームdfのリストalistカラムの欠損値を直後の値に設定する	df[alist].fillna(method='bfill')
リストxdataとリストydataの折れ線グラフに、大きさnのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markersize=n)
散布図にミディアムバイオレットレッド色のマーカーを使う	plt.plot(xdata, ydata, c='mediumvioletred')
リストxdataとリストydataについての散布図をダークオリーブグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
__X__色をグラフ全般に使う	sns.set(pallete='dark')
データ列xdataとリストydataについての散布図をミディアムアクアマリン色で重なりを見やすく描く	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
リストxdataとリストydataについての散布図をスカイブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
リストxdataとリストydataについてミントクリーム色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
x,x2,x3をそれぞれn,n2,n3に設定する	x, x2, x3 = n, n2, n3
リストxdataとリストydataについて破線グラフを描画して、その色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
リストxdataとリストydataの折れ線グラフを描画して、その色をロイヤルブルーに変更する	plt.plot(xdata, ydata, color='royalblue')
日付adateと日付adate2の時間差が何秒か知る	(adate - adate2).total_seconds()
リストxdataとリストydataの実線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
折れ線の星マーカーを赤色にする	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
データフレームdfので、カラムcolに重複があるか見る	df.duplicated(subset=col)
現在の最大の再帰数	sys.getrecursionlimit()
現在の作業ディレクトリをfilenameに変更する	os.chdir(os.dirname(filename))
ミディアムターコイズ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumturquoise')
デックdeqのn番目に文字列elementを挿入する	deq.insert(n, element)
dfのcolカラムの文字列がsで始まる行を取り出す	df[df[col].str.startswith(s)]
エラーを無視してsをバイト列に変換する	s.encode(errors='ignore')
ライトグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgrey')
コーラル色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='coral')
nをn2倍にする	n *= n2
スノー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='snow')
arrayを分割数nで分割する	pd.cut(array, n)
nとn2の論理積	n & n2
散布図をティール色のマーカーとして描画する	plt.plot(xdata, ydata, c='teal')
リストxdataとリストydataについてブラック色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='black')
dfのcolとカラムcol2を消す	df.drop([col, col2], axis=1)
破線グラフの色をアリスブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
正規表現でsの先頭でASCII限定として正規表現patternにマッチさせる	re.match(pattern, s, flags=re.ASCI)
xの正弦	math.sin(x)
predicatefuncが真となるイテラブルiterableの部分	itertools.takewhile(predicatefunc, iterable)
データ列xdataとリストydataの散布図をライトゴールドロディイエロー色として描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
データフレームdfのリストalist列の欠損値を直前の値に設定する	df[alist].fillna(method='ffill')
データフレームdfの欠損値を直後の値に設定する	df.fillna(method='bfill')
データフレームdfのリストalistカラムを丸めて、整数型にする	df[alist].round().astype(int)
リストxdataをミディアムパープル色のヒストグラムで描画する	plt.hist(xdata, color='mediumpurple')
adateがadate2より遅いか調べる	adate > adate2
クリムゾン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='crimson')
n個の数値イテラブル	range(n)
ライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
セットaset⊇セットaset2	aset.issuperset(aset2)
リストxdataとリストydataについての散布図をグリーン色で描画する	plt.plot(xdata, ydata, c='green')
破線グラフの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
折れ線の色をブランチドアーモンド変える	plt.plot(xdata, ydata, color='blanchedalmond')
JSONファイルのfをデータに変換する	json.load(fin)
リストxdataとデータ列ydataの折れ線に四角マーカーを描く	plt.plot(xdata, ydata, marker='s')
散布図に黒い大バツマーカーを使用する	plt.plot(xdata, ydata, marker='X', c='k')
リストxdataとリストydataの破線グラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dashed', color='k')
nが負の整数か調べる	n < 0
データ列xdataと配列ydataについての散布図をゲインズボロ色で描く	plt.plot(xdata, ydata, c='gainsboro')
データ列xdataとリストydataの折れ線グラフに丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
リストxdataとリストydataについての散布図をミディアムブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
dfのカラムcolを四捨五入して整数にする	df[col].round().astype(int)
データ列xdataとリストydataの散布図をタン色で描く	plt.plot(xdata, ydata, c='tan')
BOM付きを用いて追加できるように既存のファイルfilenameをオープンする]	open(filename, mode='a', encoding='utf_8_sig')
ベージュ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='beige')
n〜n2の範囲の整数乱数を生成する	random.randint(n, n2)
ユーザから入力される	int(input())
リストxdataとリストydataについてレベッカパープル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
データフレームdfをcol列毎にグループ化して、カラムcol2の最小値を求める	df.groupby(col)[col2].min()
リストxdataとリストydataについての散布図をハニーデュー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
データフレームdfの欠損値を平均値で埋める	df.fillna(df.mean())
データフレームdfの相関行列を求める	df.corr()
リストxdataとリストydataについてミントクリーム色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
リストxdataとリストydataについて点線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='dotted', color='r')
グラフにx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
データフレームdfのcolが何日か見る	df[col].dt.day
データフレームdfの空文字をドロップする	df.replace('', np.nan).dropna()
ファイルfilenameを追加できるようにオープンする]	open(filename, mode='a')
パウダーブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='powderblue')
ブルーバイオレット色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='blueviolet')
イテラブルiterableの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
オブジェクトobjが関数か調べる	callable(obj)
散布図をライトゴールドロディイエロー色のマーカーとして重なりを見やすく描く	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
破線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dashed', color='r')
配列xdataとイテラブルydataの折れ線グラフに黒色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
データ列ds中に文字列valueがあるか調べる	ds.isin([value])
数列xdataとリストydataについてスチールブルー色の折れ線を描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
行数をnにセットする	pd.set_option('display.max_rows', n)
配列xdataとイテラブルydataについて破線を描画して、その色をオリベドラブに変更する	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
散布図をグリーン色のマーカーとして重なりを見やすく描く	plt.plot(xdata, ydata, c='green', alpha=0.5)
データ列dsを中央値でビン分割する	pd.qcut(ds, 2)
データフレームdfのリストalistカラムを100の位で丸める	df[alist].round(-2)
リストxdataとリストydataの折れ線グラフを描画する	plt.plot(xdata, ydata)
セットasetとセットaset2の積集合	aset.intersection(aset2)
オブジェクトobjが名前付きタプルか調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
リストxdataとリストydataの折れ線グラフに大きさnの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markersize=n)
sからs2のパターンで日時に変換する	datetime.datetime.strptime(s, s2)
オリーブ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='olive', alpha=0.5)
ハニーデュー色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='honeydew')
リストxdataとリストydataについて散布図を描画して、マーカーの色をグレーに設定する	plt.plot(xdata, ydata, c='gray')
データフレームdfの列colの欠損値をxに設定する	df[col].fillna(x)
ファイルfilenameからディレクトリ名を使う	os.path.dirname(filename)
データフレームdf中の欠損値を削除する	df.dropna()
リストxdataとリストydataについて破線グラフを描画して、その色をアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
標準出力を用いる	sys.stdout
dfのカラムcolは正規分布からどの程度、尖っているか見る	df[col].skew()
__X__カラーパレットをグラフに使う	sns.set(pallete='deep')
配列xdataと配列ydataについて散布図を描画して、色をダークブルー変える	plt.plot(xdata, ydata, c='darkblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をコーラルに設定する	plt.plot(xdata, ydata, c='coral')
パープル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='purple')
リストxdataとリストydataについてアンティークホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
Pandasで、エポック秒のsから日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
リストxdataとリストydataについて折れ線グラフを描画して、その色をホットピンクに設定する	plt.plot(xdata, ydata, color='hotpink')
alistの先頭のn要素を除く	alist[n:]
リストxdataとリストydataについてコーンフラワーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
文字列elementの出力を改行なしに行う	print(n, end='')
折れ線グラフに星マーカーを用いる	plt.plot(xdata, ydata, marker='*')
データフレームdfのカラムcolが何年か見る	df[col].dt.year
ゴールド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='gold')
リストxdataとリストydataについて散布図を描画して、バツマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
アイボリー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='ivory')
dsの月を使う	ds.dt.month
散布図にrgbの星マーカーを使う	plt.plot(xdata, ydata, marker='*', c=rgb)
データ列xdataとイテラブルydataについてダークオーキッド色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
散布図に黒い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='k')
耐火レンガ色でヒストグラムを描画する	plt.hist(xdata, color='firebrick')
s内にひとつでもアルファベットが含まれるか調べる	any(c.isalpha() for c in s)
リストxdataとリストydataについての散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
xを切り下げる	math.floor(x)
日時dtにn秒分、加算する	dt + datetime.timedelta(seconds=n)
nからn2までのスライス	slice(n, n2)
データ列xdataとリストydataについてホワイトスモーク色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
sのn以降にs2があるか調べる	s.find(s2, start=n) != -1
散布図に四角マーカーを使う	plt.plot(xdata, ydata, marker='s')
データ列dsを1000の位で丸める	ds.round(-3)
タブ区切りのファイルfilenameを読み込む	pd.read_csv(filename, sep='\t')
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
配列xdataとリストydataについて散布図を描画して色をダークゴールデンロッド変える	plt.plot(xdata, ydata, c='darkgoldenrod')
データフレームdfのカラムcolのタイムゾーンをsに設定する	df[col].tz_convert(s)
数列xdataとリストydataの折れ線を描画して色をホワイトスモークにする	plt.plot(xdata, ydata, color='whitesmoke')
破線グラフの色をスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
リストxdataとリストydataについての散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
リストiterableをカンマ区切りで連結する	','.join(map(str, iterable))
リストxdataとリストydataについてペールグリーン色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
リストxdataとリストydataについての散布図を小麦色で描画する	plt.plot(xdata, ydata, c='wheat')
sとs2は同じか調べる	s == s2
リストxdataとリストydataについての散布図をパープル色で描画する	plt.plot(xdata, ydata, c='purple')
ダークマゼンタ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkmagenta')
リストxdataをミディアムシアグリーン色のヒストグラムで描画する	plt.hist(xdata, color='mediumseagreen')
リストxdataをターコイズ色のヒストグラムで描画する	plt.hist(xdata, color='turquoise')
折れ線グラフの下三角マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='v', markersize=n)
辞書adictのkeyをelementに変更する	adict[key] = element
リストiterableからサンプリングする	random.sample(iterable)
xをx2で除算した余り	x % x2
データフレームdfの数値をまとめて小数点以下n桁で丸めて、インプレイスする	df.round(n, inplace=True)
リストxdataとリストydataについてローングリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')
リストxdataとリストydataについてピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pink')
配列xdataとリストydataについての散布図をダークターコイズ色で重なりを見やすく描く	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
日時dtにn年分、加算する	dt + datetime.timedelta(years=n)
xの符号をx2と同じにする	math.copysign(x, x2)
データ列dsの空文字を欠損値に変換し、ドロップする	ds.replace('', np.nan).dropna()
dfの中の欠損値がある行を削除する	df.dropna()
日付adateをn週間前に戻す	adate - datetime.timedelta(weeks=n)
リストxdataとリストydataについて散布図を描画して、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
データフレームdfのcolカラム中にいくつ日付データvalueが存在するかカウントする	df[col].isin([value]).sum()
sをUTF8でバイト列に変換する	s.encode(encoding='utf-8', errors='strict')
折れ線グラフの左三角マーカーを黒色にする	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
黄色色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='yellow')
配列xdataとリストydataの破線を描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
表示するプロットの大きさをn×n2とする	plt.figure(figsize=(n, n2))
リストxdataと配列ydataについて散布図を描画して色をフローラルホワイトに変更する	plt.plot(xdata, ydata, c='floralwhite')
リストxdataとリストydataについての散布図をホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='white', alpha=0.5)
データフレームdfの欠損値を最大値で埋める	df.fillna(df.max())
スラグレー色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategray')
sのnからn2の間でs2の登場回数	s.count(s2, start=n, end=n2)
セットasetからセットaset2の要素を全て取り除く	aset.difference_update(aset2)
リストxdataをゲインズボロ色のヒストグラムで描画する	plt.hist(xdata, color='gainsboro')
折れ線の▲マーカーを黄色に変更する	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
ファイルfilenameをバイナリモードを用いてオープンして]、fとする	f = open(filename, mode='rb')
ミッドナイトブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='midnightblue')
リストxdataをダークバイオレット色のヒストグラムで描画する	plt.hist(xdata, color='darkviolet')
リストxdataをペールグリーン色のヒストグラムで描画する	plt.hist(xdata, color='palegreen')
散布図を重なりを見やすくダークスラテグレー色で描画する	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
タン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='tan', alpha=0.5)
データフレームdfのalist列を100の位で四捨五入する	df[alist].round(-2)
リストxdataとリストydataについてディープスカイブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムターコイズに設定する	plt.plot(xdata, ydata, c='mediumturquoise')
dfを列col毎にまとめて、最小値を算出する	df.groupby(col).min()
散布図をグレー色のマーカーで描く	plt.plot(xdata, ydata, c='grey')
ゴーストホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='ghostwhite')
sが漢字か調べる	('一' <= s <= '鿐')
数列xdataと数列ydataについて破線を描画して色をホワイトスモークに設定する	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
折れ線グラフの色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, color='mediumslateblue')
リストxdataとリストydataについての散布図をレモンシフォン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
alistn番目から要素を抽出する	alist.pop(n)
オリベドラブを用いてイテラブルxdataについての柱状図を描く	plt.hist(xdata, color='olivedrab')
リストxdataとリストydataについての散布図に赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
デピンクでリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='deeppink')
リストxdataとリストydataについての散布図に赤い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='r')
グラフの見た目をよくする	import seaborn as sns
リストxdataとデータ列ydataについて折れ線グラフを描画してその色をダークオレンジとする	plt.plot(xdata, ydata, color='darkorange')
リストxdataとリストydataについて散布図を描画して、マーカーの色をピンクにする	plt.plot(xdata, ydata, c='pink')
配列xdataと配列ydataについての散布図に黒い星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', c='k')
df中のカラムcolを分割数nを用いてビン分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)
リストxdataとリストydataについての散布図をミディアムオーキッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
adictと辞書adict2を合体する	adict | adict2
リストxdataとリストydataについて折れ線グラフを描画して、その色を黄色に設定する	plt.plot(xdata, ydata, color='yellow')
カウンタaCounterから低頻出項目をn個、リストとして使う	aCounter.most_common()[:-n-1:-1]
リストxdataとリストydataについて折れ線グラフを描画して、その色をプラムに設定する	plt.plot(xdata, ydata, color='plum')
リストxdataとリストydataについてミディアムスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
破線の色をレベッカパープルにセットする	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
リストxdataをチョコレート色のヒストグラムで描画する	plt.hist(xdata, color='chocolate')
リストxdataとリストydataについての散布図をシルバー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='silver', alpha=0.5)
イテラブルxdataとデータ列ydataについてサーモン色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='salmon')
透明度xの折れ線グラフを描画する	plt.plot(xdata, ydata, alpha=x)
配列xdataをスチールブルー色の柱状図で描画する	plt.hist(xdata, color='steelblue')
データフレームdfのn行目からn2行目までを抽出する	df[n:n2]
破線グラフの色をパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='purple')
タン色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='tan')
ネイピア数	math.e
アクア色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
数式として、eを積分する	sympy.integrate(e)
一点鎖線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
sので大文字・小文字を無視したpatternにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s, flags=re.IGNORECASE)
パールバイオレットレッド色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='palevioletred')
ファイルfilenameからファイル名を使う	os.path.basename(filename)
ミッドナイトブルー色で配列xdataについてのヒストグラムを描く	plt.hist(xdata, color='midnightblue')
数式として、方程e=0のzの解を求める	sympy.solve(e, z)
配列xdataを柱状図として描画する	plt.hist(xdata)
s内にひとつでも英数字が含まれるか調べる	any(c.isalnum() for c in s)
sのn番目	s[n]
sを白色にする	f'\033[37m{s}\033[0m'
リストxdataとリストydataの黒い折れ線グラフを描画する	plt.plot(xdata, ydata, color='k')
リストxdataとリストydataについての散布図を紺碧色で描画する	plt.plot(xdata, ydata, c='azure')
折れ線グラフの色をナバホホワイトにセットする	plt.plot(xdata, ydata, color='navajowhite')
dfのリストalist列の値がNaNか調べる	df[alist].isna()
ファイルfilenameを読み込みモードでオープンする]	open(filename, mode='r')
日付adateをISO形式の文字列に変換する	adate.isoformat()
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークカーキに設定する	plt.plot(xdata, ydata, c='darkkhaki')
リストxdataとリストydataの折れ線グラフに、大きさnの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markersize=n)
リストxdataとリストydataの一点鎖線グラフを描画して、その色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
データフレームdfをcolと列col2の組み合わせ毎でグループ化して合計	df.groupby([col, col2], as_index=False).sum()
x2をxとする	x = x2
無限大	math.inf
データ列xdataとリストydataの散布図を耐火レンガ色で描く	plt.plot(xdata, ydata, c='firebrick')
ミディアムパープル色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
データ列dsの未入力値を直後の値にセットする	ds.fillna(method='bfill')
モカシン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='moccasin')
データフレームdf中に文字列valueがあるか調べる	df.isin([value])
nはリストalistのどれかかどうか	n in alist
タプルatupleの要素を逆順にする	atuple[::-1]
zがマイナス無限大に近づくときのeの極限値を求める	sympy.limit(e, z, -oo)
sのエポック秒からタイムスタンプに変換する	pd.to_datetime(s, unit='s', utc=True)
インディゴ色で散布図を描画する	plt.plot(xdata, ydata, c='indigo')
リストxdataとリストydataについて散布図を描画して、マーカーの色をラベンダーに設定する	plt.plot(xdata, ydata, c='lavender')
dfのカラム名のリストを使う	df.columns
リストalistの最初の文字列elementを探す	alist.index(element)
リストxdataをホワイトスモーク色のヒストグラムで描画する	plt.hist(xdata, color='whitesmoke')
イテラブルxdataとデータ列ydataについて散布図を描画して、マーカーの色をライトグレーにする	plt.plot(xdata, ydata, c='lightgray')
折れ線の星印を青くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
データフレームdfをJSONLファイルfilenameに保存する	df.to_csv(filename, sep='\t')
sをs2で二分し、、後半の文字列を使う	s.partition(s2)[-1]
ベージュ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='beige')
リストxdataと数列ydataについてダークスラテグレー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
ライトスカイブルー色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をアイボリーに設定する	plt.plot(xdata, ydata, color='ivory')
カウンタadictをチェーンマップにする	collections.ChainMap(adict)
dfのリストalistカラムの欠損値を平均値で埋める	df[alist].fillna(df[alist].mean())
データ列xdataとイテラブルydataについて散布図を描画して、マーカーの色をアイボリーにする	plt.plot(xdata, ydata, c='ivory')
リストxdataとデータ列ydataについて折れ線グラフを描画してその色をペルーに設定する	plt.plot(xdata, ydata, color='peru')
折れ線グラフを実線とする	plt.plot(xdata, ydata, linestyle='solid')
リストxdataとリストydataの散布図を描画して、マーカーの色をミントクリームにする	plt.plot(xdata, ydata, c='mintcream')
sのs2をカウントする	s.count(s2)
dfのalist列中に文字列valueと日付データvalue2がいくつあるか求める	df[alist].isin([value, value2]).sum()
ラベンダー色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lavender')
ダークブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkblue')
データフレームdfのカラムcolの曜日数	df[col].dt.dayofweek
ダークグリーン色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='darkgreen')
データ列xdataをパールバイオレットレッド色の柱状図を使って描画する	plt.hist(xdata, color='palevioletred')
ライトグレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightgray')
リストxdataとリストydataの折れ線グラフに、線幅nの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
リストxdataとリストydataについてスラグレー色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='slategray')
ゴーストホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
sを全て英小文字に変換する	s.casefold()
散布図にロイヤルブルー色のマーカーを使う	plt.plot(xdata, ydata, c='royalblue')
リストalistをビン分割する	pd.cut(alist, alist)
iterableのtailフィルタを用意する	collections.deque(iterable, maxlen=n)
リストxdataとリストydataについてゴールデンロッド色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
配列xdataとデータ列ydataについてオーキッド色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='orchid')
リストxdataとリストydataについてパウダーブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
ホットピンク色でイテラブルxdataについてのヒストグラムを描画する	plt.hist(xdata, color='hotpink')
ダークスラテグレー色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
データフレームdfのリストalistカラムの要約統計量	df[alist].describe()
計算機イプシロン	sys.float_info.epsilon
ライトグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgreen')
データフレームdfをリストalistで指定されたカラムによってソートして、NaNを先頭にする	df.sort_values(by=alist, na_position='first')
データ列xdataとリストydataの散布図をパープル色を用いて描画する	plt.plot(xdata, ydata, c='purple')
折れ線グラフの左三角印の線幅をnに指定する	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
コーンズシルク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
ラベンダーブラッシュ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
データフレームdfのカラムcolの欠損値を最小値で埋める	df[col].fillna(df[col].min())
データフレームdfのカラムcolが正規分布からどの程度、尖っているか見る	df[col].skew()
データ列をインポートする	from sympy import substitution
セットasetの濃度	len(aset)
日付adateが日付adate2より後ろか調べる	adate > adate2
オプションで、どの行もヘッダにしない	header = None
s内にひとつでも空白が含まれるか調べる	any(c.isspace() for c in s)
空文字	''
配列xdataと配列ydataについての折れ線グラフを描画して、その色をカラーコードrgbにする	plt.plot(xdata, ydata, color=rgb)
数式としてsを記号にして、zにする	z = sympy.symbol(s)
リストxdataをライム色のヒストグラムで描画する	plt.hist(xdata, color='lime')
ミディアムスレートブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
ロイヤルブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='royalblue')
オプションで、先頭のカラムをインデックスに設定する	index_col = 0
レモンシフォン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
破線グラフの色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
デックdeqの要素数を求める	len(deq)
破線グラフの色をアクアマリンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
データ列xdataと配列ydataについて折れ線を描画してその色をダークブルーにセットする	plt.plot(xdata, ydata, color='darkblue')
第nコマンド引数を得る	sys.argv[n]
リストxdataとリストydataの折れ線を描画してその色をグレーに変更する	plt.plot(xdata, ydata, color='grey')
dsの欠損値を直後の値で埋める	ds.fillna(method='bfill')
赤色の折れ線を描く	plt.plot(xdata, ydata, color='red')
リストxdataとリストydataの青い点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color='b')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, color='mediumvioletred')
データフレームdfのカラムcolの文字列長を列として使う	df[col].str.len()
リストxdataとリストydataについて散布図を描画して、マーカーの色をゴーストホワイトに設定する	plt.plot(xdata, ydata, c='ghostwhite')
数列xdataをインディアンレッド色の柱状図としてプロットする	plt.hist(xdata, color='indianred')
文字列elementがセットasetのメンバーでないか調べる	element not in aset
リストxdataとリストydataについて破線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
データフレームdfのカラムの名前をまとめて、sをs2に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
散布図にピーチパフ色のマーカーを使う	plt.plot(xdata, ydata, c='peachpuff')
dsをビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
配列xdataとリストydataの破線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
配列xdataとデータ列ydataについての散布図を重なりを見やすくブランチドアーモンド色でプロットする	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
リストxdataとリストydataについて折れ線グラフを描画して、その色をピンクに設定する	plt.plot(xdata, ydata, color='pink')
データフレームdfのカラムcolの欠損値を最大値に設定する	df[col].fillna(df[col].max())
xが真か	bool(x)
破線グラフの色をモカシンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
リストxdataとデータ列ydataについてダークマゼンタ色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
リストxdataとリストydataについての散布図をダークグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
dfのリストalistカラムの未入力値を直前の値で補う	df[alist].fillna(method='ffill')
リストxdataをハリウッド色の度数分布図として描画する	plt.hist(xdata, color='burlywood')
コーンズシルク色のヒストグラムでリストxdataをプロットする	plt.hist(xdata, color='cornsilk')
散布図をラベンダーブラッシュ色のマーカーで重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
散布図を赤い星マーカーで描く	plt.plot(xdata, ydata, marker='*', c='r')
折れ線の色をミッドナイトブルーに変更する	plt.plot(xdata, ydata, color='midnightblue')
リストxdataをパールバイオレットレッド色のヒストグラムで描画する	plt.hist(xdata, color='palevioletred')
ブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='brown')
リストxdataとデータ列ydataの散布図を描画して、色をダークターコイズ変える	plt.plot(xdata, ydata, c='darkturquoise')
adateからn年分、減らす	adate - datetime.timedelta(years=n)
リストxdataとリストydataの散布図をミッドナイトブルー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
データフレームdfのリストalistカラムの最頻値	df[alist].mode()
リストxdataとリストydataについての散布図を耐火レンガ色で描画する	plt.plot(xdata, ydata, c='firebrick')
青色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)
ミディアムブルー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='mediumblue')
柱状図をハリウッド色として描く	plt.hist(xdata, color='burlywood')
カラーコードrgbのダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
折れ線グラフの色をダークマゼンタにする	plt.plot(xdata, ydata, color='darkmagenta')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトスカイブルーに設定する	plt.plot(xdata, ydata, c='lightskyblue')
nが奇数か確認する	n % 2 == 1
リストxdataとリストydataについて折れ線グラフを描画して、その色をスチールブルーに設定する	plt.plot(xdata, ydata, color='steelblue')
日時dtの日付	dt.date()
文字列elementがタプルatupleに含まれるか調べる	element in atuple
n年n2月n3日n4時n5分n6秒の日時	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n6)
破線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
リストxdataとリストydataについて散布図を描画して、マーカーの色をカデットブルーに設定する	plt.plot(xdata, ydata, c='cadetblue')
リストxdataとリストydataについて破線グラフを描画して、その色をゴールドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gold')
JSON形式のsを辞書に変換する	json.loads(s)
日時dtにn週間分、加算する	dt + datetime.timedelta(weeks=n)
データフレームdfのリストalistカラムの欠損値を平均値で埋める	df[alist].fillna(df[alist].mean())
黒いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')
ホワイト色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='white', alpha=0.5)
リストxdataとリストydataについての散布図をパウダーブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
折れ線グラフの丸マーカーを青くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
ダークブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
データフレームdfの値をdictでまとめて置き換える	df.replace(adict)
散布図に黒い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='k')
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトグリーンに設定する	plt.plot(xdata, ydata, c='lightseagreen')
オブジェクトobjは浮動小数点数クラスか調べる	isinstance(obj, float)
ビスク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bisque')
リストxdataとリストydataのカラーコードrgbの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
リストxdataと数列ydataの散布図をスラグレー色として重なりを見やすく描く	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
ダークオレンジ色の折れ線を描く	plt.plot(xdata, ydata, color='darkorange')
デックdeqの末尾に文字列elementを追加する	deq.append(element)
データフレームdfのカラムcolがsで終わる行を抽出する	df[df[col].str.endswith(s)]
データ列dsの欠損値を最頻値に設定する	ds.fillna(ds.mode().iloc[0])
リストxdataとリストydataの折れ線グラフを描画して、透明度をxに設定する	plt.plot(xdata, ydata, alpha=x)
散布図に赤いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='r')
ライトグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
数列xdataと配列ydataの破線グラフを描画して、その色をライトシアンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
ファイルパスfilenameから拡張子なしのファイル名を取り出す	os.path.splitext(os.path.basename(filename))[0]
リストxdataとリストydataについての散布図をスラグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
ファイルfilenameからストリームを読み込みfileとする	file = open(filename)
折れ線グラフの色をミスティローズに設定する	plt.plot(xdata, ydata, color='mistyrose')
リストxdataとリストydataについて折れ線グラフを描画してその色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategray')
グラフの目的をプレゼン用にする	sns.set(context='talk')
ライトシアン色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
JSONLファイルfilenameからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
ファイルfilenameを書き込みモードでオープンする]	open(filename, mode='w')
データ列xdataと数列ydataの折れ線に青いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
グラフ中に凡例を(x,x2)の位置に入れる	plt.legend(loc=(x, x2))
リストalistをビン数nでビン分割する	pd.cut(alist, n)
折れ線グラフの大バツマーカーを赤くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')
カーキ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='khaki')
カウンタaCounterをカウントが少ない順に列挙する	aCounter.most_common()[::-1]
リストxdataとリストydataについてゲインズボロ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
折り返しをオフにする	pd.set_option('expand_frame_repr', False)
グラフにy=0の破線を付ける	plt.axhline(y=0, linestyle='dashed')
リストxdataとリストydataについて散布図を描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
リストalistの平均値	sum(alist)/len(alist)
xにx2を乗算する	x * x2
ダークブルー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
データフレームdfを各colカラムごとにグループ化してsというグループの個数を求める	df.groupby(col).size()[s]
リストxdataとリストydataについて散布図を描画して右三角印の色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストxdataと配列ydataの折れ線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(xdata, ydata, color='lightskyblue')
破線グラフの色をスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
オプションで、ヘッダを自動的な連番に設定する	header = None
数式として、eのzにe2を代入する	e.subs(z, e2)
sをマゼンタにする	f'\033[35m{s}\033[0m'
マゼンタ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='magenta')
アクアマリン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='aquamarine')
今日をタプルに変換する	datetime.datetime.today().timetuple()
xのx2乗してx3による余り	pow(x, x2, x3)
散布図に赤い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='r')
整数nを半分にする	n //= 2
標準入力から1行だけ読み込んで改行を取り除く	sys.stdin.readline().rstrip()
データ列xdataとリストydataについての散布図をダークオリーブグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
散布図に左三角マーカーを用いる	plt.plot(xdata, ydata, marker='<')
文字列elementがタプルatupleの要素でないか調べる	element not in atuple
現在の分数	datetime.date.today().minite
リストxdataとリストydataについて折れ線グラフを描画して、その色を青とする	plt.plot(xdata, ydata, color='blue')
折れ線のマーカーを下三角にセットする	plt.plot(xdata, ydata, marker='v')
リストxdataと配列ydataについて散布図を描画して左三角マーカーの色をrgbにセットする	plt.plot(xdata, ydata, marker='<', c=rgb)
データフレームdfの列colのn分位数を求める	df[col].quantile(n/100)
分割数nとしてリストalistをビン分割する	pd.cut(alist, n)
sの平仮名を片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
散布図をフクシア色を用いてプロットする	plt.plot(xdata, ydata, c='fuchsia')
リストxdataとリストydataについて散布図を描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
ライトゴールドロディイエロー色として配列xdataと配列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
xとx2が近いか調べる	math.isclose(x, x2)
スラグレー色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='slategray')
10を底とするxの対数を求める	math.log10(x)
データフレームdfのカラムcolがどの程度、分散しているか見る	df[col].var()
データ列xdataと配列ydataについて折れ線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, color='midnightblue')
リストxdataをミディアムスレートブルー色のヒストグラムでプロットする	plt.hist(xdata, color='mediumslateblue')
ピーチパフ色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
リストxdataと配列ydataについての散布図をアンティークホワイト色で描く	plt.plot(xdata, ydata, c='antiquewhite')
辞書adictのキー一覧	list(adict)
リストxdataとリストydataの折れ線グラフに、緑色の右三角印を描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
散布図にディムグレー色のマーカーを使う	plt.plot(xdata, ydata, c='dimgray')
リストxdataとリストydataについて破線グラフを描画して、その色をマルーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
リストxdataとリストydataについてライトグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
nからn2の範囲のヒストグラムを用いてリストxdataを描画する	plt.hist(xdata, range=(n, n2))
s2でsをに分割した場合の後半の文字列	s.partition(s2)[-1]
ダークグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
sをバイト配列に変換する	bytearray(s)
イテラブルxdataとリストydataの破線グラフを描画して、その色をベージュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='beige')
データフレームdfにある文字列valueと日付データvalue2の個数を数える	df.isin([value, value2]).sum()
事前にpatternパターンをコンパイルする	re.compile(pattern)
データフレームdfを各カラムcol毎でグループ化してカラムcol2の個数を計算する	df.groupby(col)[col2].count()
破線グラフの色をシーグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
リストxdataとリストydataについての散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
破線グラフの色をゴールデンロッドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
sを黄色にする	f'\033[33m{s}\033[0m'
シーグリーン色で散布図を描画する	plt.plot(xdata, ydata, c='seagreen')
カラーコードrgbのポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
配列xdataについてのヒストグラムを描画する際に半透明ににする	plt.hist(xdata, alpha=0.5)
グローバル変数の一覧	globals()
折れ線グラフのラベルをsに設定する	plt.plot(xdata, ydata, label=s)
標準入力から1行だけ改行なしで読む	sys.stdin.readline().rstrip()
リストxdataとリストydataについてフォレストグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
elementがn回繰り返す列	itertools.repeat(element, n)
マルーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
リストxdataとイテラブルydataの散布図をプロットする	plt.scatter(xdata, ydata)
リストalistに応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=alist, cmap='Blues')
リストxdataについての柱状図を小麦として描画する	plt.hist(xdata, color='wheat')
文字列filenameからCSVファイルをn番目の列をインデックスとして読み込む	pd.read_csv(filename, index_col=n)
折れ線グラフの色をイエローグリーンに設定する	plt.plot(xdata, ydata, color='yellowgreen')
折れ線グラフの色をパープルに設定する	plt.plot(xdata, ydata, color='purple')
補足をプロット中の(x,x2)の場所に入れる	plt.legend(loc=(x, x2))
リストxdataとリストydataについてミディアムオーキッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
散布図にライトスレイグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightslategray')
データ列dsを10の位で丸めて、整数型にする	ds.round(-1).astype(int)
リストxdataとリストydataについて散布図を描画して、マーカーの色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, c='mediumslateblue')
黒い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストxdataとリストydataについての散布図をアイボリー色で描画する	plt.plot(xdata, ydata, c='ivory')
破線グラフの色をフォレストグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
リストxdataとリストydataについて折れ線グラフを描画して、その色をハニーデューに設定する	plt.plot(xdata, ydata, color='honeydew')
リストxdataと配列ydataについてパパイヤウィップ色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
データ列dsを0と1にマップする	ds.map({s: 1, s2: 0})
コーンズシルク色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
散布図を重なりを見やすくミスティローズ色で描画する	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
nとn2のコンビネーション	math.comb(n, n2)
数列xdataをレベッカパープル色の柱状図で描画する	plt.hist(xdata, color='rebeccapurple')
破線の線幅をnにする	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
リストxdataとリストydataについて散布図を描画して、マーカーの色をグレーに設定する	plt.plot(xdata, ydata, c='grey')
散布図に星マーカーを使う	plt.plot(xdata, ydata, marker='*')
ファイルfilenameがあるか調べる	os.path.exists(filename)
データフレームdfのどの値が頻出か見る	df.mode()
ミディアムブルー色でリストxdataについての柱状図を描画する	plt.hist(xdata, color='mediumblue')
データフレームdfのの中で、カラムcolとカラムcol2に重複があるか見る	df.duplicated(subset=[col1, col2])
dfのcolの文字列がsで終わらない行を取り出す	df[not df[col].str.endswith(s)]
リストxdataと配列ydataの折れ線を描画して、色をダークシアグリーンに設定する	plt.plot(xdata, ydata, color='darkseagreen')
複数行対応として正規表現patternにsの先頭でマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
xが整数か調べる	x.is_integer()
折れ線グラフの下三角マーカーを赤くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
Pandasで、データフレームdfのcollのエポック秒から日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
最大長をnにしてデックを作成して、Xに代入する	X = collections.deque(maxlen=n)
ファイルパスfilenameを開き]、読み込みストリームを使う	open(filename, mode='r')
リストxdataとリストydataについて折れ線グラフを描画して、その色をローングリーンに設定する	plt.plot(xdata, ydata, color='lawngreen')
リストxdataと配列ydataの折れ線グラフを描画して、その色をライムグリーン変える	plt.plot(xdata, ydata, color='limegreen')
度数分布図をライム色として描画する	plt.hist(xdata, color='lime')
グリーン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='green', alpha=0.5)
カデットブルー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
折れ線の色をハニーデュー変える	plt.plot(xdata, ydata, color='honeydew')
データフレームdfを10の位で丸めて、整数型にする	df.round(-1).astype(int)
リストalistが空でないか調べる	len(alist) != 0
ヒストグラムをオーキッド色で描画する	plt.hist(xdata, color='orchid')
重なりを見やすく散布図をダークグレー色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
イテラブルxdataとリストydataについてオリーブ色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='olive')
折れ線グラフの色をパパイヤウィップに設定する	plt.plot(xdata, ydata, color='papayawhip')
リストxdataとリストydataの折れ線グラフを描画して、色を黒くする	plt.plot(xdata, ydata, color='k')
dfをfilenameに保存する	df.to_csv(filename, sep='\t')
折れ線グラフの右三角マーカーを赤くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')
整数nの桁数	len(str(int(n)))
文字列elementがリストalistの要素でないか調べる	element not in alist
グラフ中のフォントをsに設定する	sns.set(font=s)
オプションで、標準出力を出力にする	file = sys.stdout
リストxdataとリストydataについて折れ線グラフを描画して、その色をホワイトに設定する	plt.plot(xdata, ydata, color='white')
dfのcolの曜日名を使う	df[col].dt.weekday_name
リストxdataとリストydataについてグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='grey')
整数nを2進文字列に変換する	bin(n)[2:]
イテラブルxdataについてのヒストグラムをコーラル色で描画する	plt.hist(xdata, color='coral')
辞書adictを値を含めてコピーする	{k: copy.copy(v) for k, v in adict.items()}
散布図にパールゴールデンロッド色のマーカーを使う	plt.plot(xdata, ydata, c='palegoldenrod')
配列xdataと配列ydataについて散布図を描画して、マーカーの色をホットピンク変える	plt.plot(xdata, ydata, c='hotpink')
折れ線グラフの大バツマーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='X', markersize=n)
リストxdataとリストydataについての散布図をライトサーモン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
データフレームdfを1000の位で丸めて、整数型にする	df.round(-3).astype(int)
リストxdataとリストydataについて点線グラフを描画して、色をrgbに変更する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
ペルー色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='peru')
s内にひとつでも英大文字が含まれるか調べる	any(c.isupper() for c in s)
昨日の日付	datetime.date.today() - datetime.timedelta(days=1)
asetがセットaset2の真部分集合か調べる	aset < aset2
ライトシアン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='lightcyan')
xの正弦を算出する	math.sin(x)
オプションで、バイナリモードに設定する	mode = 'rb'
alistにリストalist2を追加して拡張する	alist.extend(alist2)
折れ線グラフの色をライトスチールブルーに設定する	plt.plot(xdata, ydata, color='lightsteelblue')
リストxdataとリストydataについての散布図をミディアムアクアマリン色で描画する	plt.plot(xdata, ydata, c='mediumaquamarine')
アザミ色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='thistle')
リストxdataとリストydataの折れ線グラフに、赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')
破線グラフの色をアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
リストiterableとリストiterable2の全組み合わせ	list(itertools.product(iterable, iterable2))
エクセルファイルファイルfilenameからエクセルファイルを読む	pd.read_excel(filename)
ヒストグラムをマルーン色で描画する	plt.hist(xdata, color='maroon')
オブジェクトobjはリストかタプルか調べる	isinstance(obj, (list)
列iterableを変更不能な集合に変換する	frozenset(iterable)
リストxdataとリストydataについて破線グラフを描画して、その色をフクシアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
dfのcolの値がxである行を抽出する	df[df[col] == x]
データ列xdataとリストydataについて折れ線グラフを描画して、その色をオレンジに変更する	plt.plot(xdata, ydata, color='orange')
日付adateををn週間後に進める	adate + datetime.timedelta(weeks=n)
フクシア色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='fuchsia')
リストxdataとリストydataについての散布図をアリスブルー色として描画する	plt.plot(xdata, ydata, c='aliceblue')
リストxdataとリストydataの折れ線グラフに、線幅nのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
青色の折れ線グラフを描く	plt.plot(xdata, ydata, color='blue')
凡例を(x,x2)の場所に入れる	plt.legend(loc=(x, x2))
リストxdataとリストydataについて破線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
ホワイトスモーク色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='whitesmoke')
リストxdataと配列ydataについての散布図に黒いバツマーカーを描く	plt.plot(xdata, ydata, marker='x', c='k')
データフレームを表示するとき、カラムの最大幅をnにセットする	pd.set_option('max_colwidth', n)
データフレームdfのalistカラム中にいくつNaNが存在するか数える	df[alist].isna().sum()
タプルatupleの末尾を取り除く	atuple[:-1]
リストalistの要素を空にする	alist.clear()
リストxdataとリストydataについて破線グラフを描画して、その色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')
コーンフラワーブルーとしてイテラブルxdataについての度数分布図をプロットする	plt.hist(xdata, color='cornflowerblue')
ディムグレー色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
arrayをビン分割する	pd.cut(array, alist)
リストxdataとリストydataについて散布図を描画して、マーカーの色をフクシアに設定する	plt.plot(xdata, ydata, c='fuchsia')
配列xdataとデータ列ydataについて一点鎖線を描画して、色を黒にする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
sのn番目以降にs2が含まれないか調べる	s.find(s2, start=n) == -1
リストxdataとリストydataについてピーチパフ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
ブランチドアーモンド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
データフレームdfの列colの欠損値を直前の値で置換する	df[col].fillna(method='ffill')
ネイビー色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='navy')
ピーチパフ色で重なりを見やすくデータ列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
散布図にバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='violet')
オプションで、読み込む行番号をnamesで指定する	usecols = names
折れ線グラフの四角マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
ベージュ色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='beige')
イテラブルxdataとリストydataについてミディアムオーキッド色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
リストxdataとリストydataについての散布図をブランチドアーモンド色で描画する	plt.plot(xdata, ydata, c='blanchedalmond')
配列xdataと配列ydataの散布図をオレンジレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
リストxdataとリストydataの実線グラフを描画して、その色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color='r')
グリーンイエロー色としてヒストグラムを描画する	plt.hist(xdata, color='greenyellow')
nにn2をかけた値をnに代入する	n *= n2
sのs2の出現回数	s.count(s2)
ホワイトスモーク色のマーカーとして重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
dfの欠損値を直前の値に設定する	df.fillna(method='ffill')
セットasetがセットaset2と交わりを持たないか調べる	aset.isdisjoint(aset2)
グラフ内の縦軸にsという軸ラベルを設定する	plt.ylabel(s)
sをバイト列に変換する	bytes(s)
シーグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='seagreen')
データフレームdfのカラムcolがx以上の行を抽出する	df[df[col] >= x]
スカイブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='skyblue')
0からn未満までのランダムな整数を求める	random.randrange(n)
一点鎖線グラフの色をカラーコードrgbとする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
標準出力を得る	sys.stdout
散布図を重なりを見やすくダークカーキ色として描く	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
ダークシアグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkseagreen')
ライトスチールブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightsteelblue')
データフレームdfのカラムcolとカラムcol2毎の関数適用した値	df.groupby([col, col2], as_index=False).agg(func)
xの正弦の逆数	math.asin(x)
リストxdataとリストydataの折れ線グラフに、赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')
マゼンタ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
データフレームdfの列colを0と1にマップする	df[col].map({s: 1, s2: 0})
fから1文字、読み込む	f.read(1)
データフレームdfの末尾	df.tail()
リストxdataとリストydataについて折れ線グラフを描画して、その色をスプリンググリーンに設定する	plt.plot(xdata, ydata, color='springgreen')
ダークレッド色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='darkred')
データ列xdataと数列ydataの破線グラフを描画して、その色をサドルブラウンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
ダークオーキッド色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='darkorchid')
データフレームdfのcolの75パーセンタイル	df[col].quantile(0.75)
数列xdataとリストydataについて散布図を描画してマーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
データフレームdfのn分位数	df.quantile(n/100)
中央値でds列のNaNを埋める	ds.fillna(ds.median())
セットasetからセットaset2との共通要素を全て取り除く	aset.symmetric_difference_update(aset2)
配列xdataとリストydataについてフォレストグリーン色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
整数nをバイト列に変換する	n.to_bytes(length=n2, byteorder='big')
リストxdataとリストydataについてサンディーブラウン色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
辞書adictの値の一覧	adict.values()
データ列dsの欠損値を直前の値に設定する	ds.fillna(method='ffill')
リストxdataとリストydataについての散布図をディープスカイブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
カウンタaCounterを下位n個カウントが少ない順に列挙する	aCounter.most_common()[:-n-1:-1]
nをn2で割った余りをnにする	n %= n2
n年n2月の日付	datetime.date(year=n, month=n2, day=1)
破線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
型がTYPE2=Person;$$2型のサブクラスか調べる	issubclass(TYPE, TYPE2)
ロージーブラウン色の折れ線を描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
リストxdataとリストydataの折れ線グラフに、緑色の下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
レモンシフォン色としてイテラブルxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='lemonchiffon')
エクセルファイルファイルfilenameからエクセルファイルを読み込む	pd.read_excel(filename)
スラグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='slategray')
リストalistの末尾	alist[-1]
リストxdataとリストydataについての散布図をビスク色として描く	plt.plot(xdata, ydata, c='bisque')
数列xdataと配列ydataの破線グラフを描画して、その色を貝殻に設定する	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
カラーコードrgbのポイントマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='.', c=rgb)
データフレームdfの欠損値がある箇所に色を付ける	df.style.highlight_null()
グラフで用いるフォントをsに指定する	sns.set(font=s)
リストxdataとリストydataについて散布図を描画して、マーカーの色をオリーブに設定する	plt.plot(xdata, ydata, c='olive')
データフレームdfのカラムcolの母標準偏差	df[col].std(ddof=0)
リストxdataとリストydataの折れ線グラフに、赤い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
データ列dsを100の位で丸めて、整数型にする	ds.round(-2).astype(int)
折れ線の色をホワイトスモーク変える	plt.plot(xdata, ydata, color='whitesmoke')
関数predicatefuncが真となるリストiterableの要素	itertools.dropwhile(predicatefunc, iterable)
スラグレー色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='slategrey')
リストxdataとリストydataについての散布図をシャルトルーズ色で描画する	plt.plot(xdata, ydata, c='chartreuse')
ホットピンク色の折れ線を描画する	plt.plot(xdata, ydata, color='hotpink')
折れ線グラフのマーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
リストxdataとリストydataについての散布図をゲインズボロ色で描画する	plt.plot(xdata, ydata, c='gainsboro')
日時dtが日時dt2より後ろか調べる	dt > dt2
折れ線グラフの色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgray')
重なりを見やすくライトサーモン色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
配列xdataとデータ列ydataの散布図を描画してマーカーの色をナバホホワイトとする	plt.plot(xdata, ydata, c='navajowhite')
df全体をリストalistで指定されたカラムによって小さい順にソートする	df.sort_values(by=alist, ascending=True)
書式textをmappingでフォーマットする	text.format_map(mapping)
ミスティローズ色で数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='mistyrose')
リストiterableにリストiterable2を続ける	itertools.chain(iterable, iterable2)
再帰エラーを未然に防ぐ	sys.setrecursionlimit(1000000)
折れ線グラフの色をライトブルーに変更する	plt.plot(xdata, ydata, color='lightblue')
散布図にプラム色のマーカーを使う	plt.plot(xdata, ydata, c='plum')
リストxdataをライトイエロー色のヒストグラムで描画する	plt.hist(xdata, color='lightyellow')
青色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='blue')
描画するグラフのサイズを横n縦n2に設定する	plt.figure(figsize=(n, n2))
alist中の要素が少なくとも一つ真か調べる	any(alist)
重なりを見やすく散布図をライトグレー色でプロットする	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
正規表現で、sの先頭で大文字・小文字を無視してパターンpatternにマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
データフレームdfのリストalistカラムの欠損値を直前の値で埋める	df[alist].fillna(method='ffill')
シルバー色のヒストグラムで配列xdataを描画する	plt.hist(xdata, color='silver')
オプションで、バイナリモードを使う	mode = 'rb'
イテラブルiterableを周期的に繰り返す	itertools.cycle(iterable)
ファイルfilenameをUTF8でオープンする]	open(filename, encoding='utf-8')
配列xdataについての柱状図を描く際にビンの数をnにセットする	plt.hist(xdata, bins=n)
折れ線グラフの色をグリーンに設定する	plt.plot(xdata, ydata, color='green')
nの2進数文字列	bin(n)[2:]
データフレームdfをカラムcolによってソートして、更新する	df.sort_values(by=col, inplace=True)
データフレームdfの数値を一度に四捨五入する	df.round()
xのハッシュ値	hash(x)
ダークブルー色としてリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='darkblue')
リストxdataをダークグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkgray')
スチールブルー色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='steelblue')
現在が何分か知る	datetime.date.today().minite
散布図をゴールド色のマーカーとして重なりを見やすくプロットする	plt.plot(xdata, ydata, c='gold', alpha=0.5)
リストxdataとデータ列ydataについて折れ線グラフを描画して、その色をライトグレーにする	plt.plot(xdata, ydata, color='lightgrey')
リストxdataをスプリンググリーン色のヒストグラムで描画する	plt.hist(xdata, color='springgreen')
リストxdataとリストydataのカラーコードrgbの点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
リストxdataとリストydataについて折れ線グラフを描画して、その色をオレンジレッドに設定する	plt.plot(xdata, ydata, color='orangered')
配列xdataとリストydataの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted')
sを下線付きにする	f'\033[4m{s}\033[0m'
n個に等間隔でデータフレームdfのcolを分割する	pd.cut(df[col], n)
リストxdataとリストydataについての散布図をゲインズボロ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
全ての句読点文字	string.punctuation
オプションで、書き込みモードを使う	mode = 'w'
日時dtが日時dt2と同時か調べる	dt == dt2
配列xdataとイテラブルydataについて折れ線グラフを描画して、その色をローングリーン変える	plt.plot(xdata, ydata, color='lawngreen')
nからn2の間でリストxdataの柱状図を描画する	plt.hist(xdata, range=(n, n2))
x,x2,x3にそれぞれn,n2,n3を代入する	x, x2, x3 = n, n2, n3
データ列xdataについてのヒストグラムを描画する際に合計を1にする	plt.hist(xdata, density=True)
散布図にシャルトルーズ色のマーカーを使う	plt.plot(xdata, ydata, c='chartreuse')
リストxdataとリストydataについて破線グラフを描画して、その色をタンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='tan')
リストxdataとリストydataの折れ線グラフを描画して、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
折れ線グラフの色を黄色に設定する	plt.plot(xdata, ydata, color='yellow')
リストxdataとリストydataについて破線グラフを描画して、その色をトマトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
重なりを見やすくブラック色でリストxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)
データフレームdfのalistカラムを小数点以下n桁で四捨五入する	df[alist].round(n)
ビスク色として配列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='bisque')
リストxdataとリストydataについて散布図を描画して、マーカーの色を小麦に設定する	plt.plot(xdata, ydata, c='wheat')
フローラルホワイト色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
sのs2をs3に全て置き換える	s.replace(s2, s3)
データフレームdfをカラムcol毎にグループ化して、列挙する	[(name, group) for name, group in df.groupby(col)]
alistの最初の要素	alist[0]
Pandasで、日付データのdsをインデックスにする	df.index = pd.DatetimeIndex(ds)
リストxdataとイテラブルydataについてalistの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=alist, cmap='Blues')
リストxdataとリストydataについての散布図を淡いピンク色色で描画する	plt.plot(xdata, ydata, c='lightpink')
sをカンマで分割し、文字列リストに変換する	s.split(',')
重なりを見やすく散布図をサーモン色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
セットasetをリストに変換する	list(aset)
データフレームdfをカラムcol毎にグループ化して、sというグループを使う	df.groupby(col).get_group(s)
貝殻色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='seashell')
最初のプログラムを書く	print('Hello World')
リストalistにリストalist2を追加して拡張する	alist.extend(alist2)
リストxdataとリストydataについての散布図をディムグレー色で描画する	plt.plot(xdata, ydata, c='dimgray')
オブジェクトobjは論理値クラスのインスタンス	isinstance(obj, bool)
リストxdataと配列ydataの破線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
リストxdataとリストydataについてダークブルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
sのnからとn2までの間にs2が含まれないか調べる	s.find(s2, start=n, end=n2) == -1
リストxdataとリストydataの破線グラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dashed', color='b')
リストxdataとリストydataの赤い破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='r')
リストxdataとリストydataの折れ線グラフに、緑色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
リストxdataとリストydataについて折れ線グラフを描画して、その色をナバホホワイトに設定する	plt.plot(xdata, ydata, color='navajowhite')
散布図に黒い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='k')
データフレームdfのカラムcol中の欠損値の合計を数える	df[col].isna().sum()
リストxdataとリストydataについて散布図を描画してマーカーの色をネイビーに設定する	plt.plot(xdata, ydata, c='navy')
数式として、sをシンボルにして、zにする	z = sympy.symbol(s)
ファイルfilenameをオープンして]、読み込みストリームを使う	open(filename, mode='r')
ミントクリーム色のマーカーを用いて重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をライトシアンに設定する	plt.plot(xdata, ydata, c='lightcyan')
リストxdataとリストydataについてデピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
グリーンイエロー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='greenyellow')
0から9までの配列を作る	np.arange(10)
散布図にグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='green')
リストxdataとデータ列ydataの散布図をライトブルー色で描く	plt.plot(xdata, ydata, c='lightblue')
配列xdataとデータ列ydataについて折れ線を描画して、その色をダークグレーにする	plt.plot(xdata, ydata, color='darkgrey')
リストxdataとデータ列ydataの散布図にrgbの右三角印を描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
コーラル色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='coral')
sがs2で始まるか調べる	s.startswith(s2)
リストxdataとリストydataについてクリムゾン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='crimson')
数列xdataと数列ydataの折れ線グラフに、緑色の丸印を描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
日付adateをsでフォーマットして文字列に変換する	adate.strftime()
配列xdataと数列ydataについて破線グラフを描画してその色をティールに設定する	plt.plot(xdata, ydata, linestyle='dash', color='teal')
破線グラフの色をトマトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
関数predicatefuncが真となるリストiterableの要素	itertools.takewhile(predicatefunc, iterable)
折れ線グラフの色をミディアムシアグリーンに変更する	plt.plot(xdata, ydata, color='mediumseagreen')
セットasetとセットaset2の差集合	aset.difference(aset2)
データフレームdfをカラムcol毎にグループ化して、sというグループの個数を求める	df.groupby(col).size()[s]
リストxdataをライトシアン色のヒストグラムで描画する	plt.hist(xdata, color='lightcyan')
実線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color='r')
ライトグリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightseagreen')
xの小数点以下'5'桁までの文字列に変換する	':.5f'.format(x)
リストxdataとリストydataについて赤色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='red')
リストxdataとリストydataについてダーク・スラテグレー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
ダークバイオレット色を用いてヒストグラムを描画する	plt.hist(xdata, color='darkviolet')
リストxdataとリストydataの散布図を描画してマーカーの色をデピンクに変更する	plt.plot(xdata, ydata, c='deeppink')
日付adateが日付adate2より前か調べる	adate < adate2
リストxdataと数列ydataについての散布図をスノー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='snow', alpha=0.5)
リストxdataとリストydataについてダークオレンジ色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
チョコレート色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
リストxdataと配列ydataについての散布図を重なりを見やすく耐火レンガ色として描く	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
リストxdataとリストydataについての散布図をハリウッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
数列xdataと配列ydataの折れ線を描画してその色をゴールドに設定する	plt.plot(xdata, ydata, color='gold')
リストxdataとリストydataについて散布図を描画して、マーカーの色をマルーンに設定する	plt.plot(xdata, ydata, c='maroon')
サーモン色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
リストxdataをゴールド色のヒストグラムで描画する	plt.hist(xdata, color='gold')
リストxdataと配列ydataの破線グラフを描画して、色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
リストxdataとリストydataについて折れ線グラフを描画して、その色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, color='cornflowerblue')
折れ線グラフの四角印のサイズをnにセットする	plt.plot(xdata, ydata, marker='s', markersize=n)
0からnまでのスライス	slice(n)
ビスク色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bisque')
リストxdataとリストydataについて破線グラフを描画して、その色を青に設定する	plt.plot(xdata, ydata, linestyle='dash', color='blue')
黒い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
配列xdataとリストydataについて破線グラフを描画して、その色をスノーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='snow')
折れ線グラフのバツマーカーを緑色にする	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
破線グラフの色をパレットトルコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
データフレームdfのカラムcolの曜日の名前	df[col].dt.weekday_name
配列xdataをライトゴールドロディイエロー色のヒストグラムで描画する	plt.hist(xdata, color='lightgoldenrodyellow')
リストxdataとデータ列ydataについて折れ線を描画してその色をラベンダーに変更する	plt.plot(xdata, ydata, color='lavender')
sを改行によって区切る	s.splitlines()
リストxdataとリストydataについて破線グラフを描画して、その色をベージュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='beige')
整数nの十六進文字列	hex(n)[2:]
散布図にピンク色のマーカーを使う	plt.plot(xdata, ydata, c='pink')
データフレームを表示するとき、ヘッダー行を右寄せに設定する	pd.set_option('colheader_justify', 'right')
数列xdataとリストydataの散布図をコーンズシルク色として描く	plt.plot(xdata, ydata, c='cornsilk')
配列xdataと数列ydataについての散布図をブルーバイオレット色で描画する	plt.plot(xdata, ydata, c='blueviolet')
dfのリストalistカラムの中の欠損値の合計をカウントする	df[alist].isna().sum()
クリムゾン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='crimson')
今日は何日か知る	datetime.datetime.today().day
リストxdataをライトスカイブルー色のヒストグラムで描く	plt.hist(xdata, color='lightskyblue')
ファイルパスfilenameをBOM付きとしてオープンする]	open(filename, encoding='utf_8_sig')
s中のパターンpatternによる全てのマッチを使う	re.findall(pattern, s)
折れ線グラフのマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストxdataとリストydataについて破線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
散布図にミディアムアクアマリン色のマーカーを使う	plt.plot(xdata, ydata, c='mediumaquamarine')
n割るn2を切り上げる	(n + n2 - 1) // n2
中央値でalistをビン分割する	pd.qcut(alist, 2)
正規表現でsの先頭でパターンpatternにケースを無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)
破線グラフの色をコーンフラワーブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
リストxdataとリストydataについて折れ線グラフを描画して、その色をサーモンに設定する	plt.plot(xdata, ydata, color='salmon')
データフレームdfを丸めて、整数型にする	df.round().astype(int)
破線グラフの色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
整数nの八進文字列	oct(n)[2:]
ブランチドアーモンド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='blanchedalmond')
日付adateをn分前に戻す	adate - datetime.timedelta(minutes=n)
リストxdataとイテラブルydataについての散布図をライム色として描画する	plt.plot(xdata, ydata, c='lime')
ファイルfilenameをバイナリモードでオープンする]	open(filename, mode='rb')
イテラブルxdataとリストydataの破線グラフを描画して、その色をピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pink')
散布図に耐火レンガ色のマーカーを使う	plt.plot(xdata, ydata, c='firebrick')
折れ線グラフの色をインディアンレッドに設定する	plt.plot(xdata, ydata, color='indianred')
ライトグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgray')
リストxdataとリストydataについて破線グラフを描画して、その色をスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
s中のASCII限定のパターンpatternによるマッチを使う	re.findall(pattern, s, flags=re.ASCI)
シャルトルーズ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='chartreuse')
xとx2の商と余りをペアで使う	divmod(x, x2)
現在の時間数	datetime.date.today().hour
ホワイト色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='white')
sというサブディレクトリをPythonパスに加える	sys.path.append(os.path.join(os.path.dirname(__file__), s))
0からn未満までの整数乱数を生成する	random.randrange(n)
x,x2の複素数	complex(x, x2)
deq中の文字列elementのインデックス	deq.index(element)
nがn2の倍数か調べる	n % n2 == 0
散布図にターコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='turquoise')
dfのalistカラムに文字列valueと文字列value2があるかどうか	df[alist].isin([value, value2])
ダークグリーン色で数列xdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='darkgreen')
データフレームdfのカラムcolが何月か見る	df[col].dt.month
シーグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
散布図に黒い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='k')
折れ線グラフの大バツマーカーを黒くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
最大長nの両端キューをリストiterableから作る	collections.deque(iterable, maxlen=n)
リストalistを等量でビン数nでビン分割する	pd.qcut(alist, n)
破線グラフの色をペールグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
数列xdataとリストydataの折れ線グラフを描画して、その色をライトイエローにする	plt.plot(xdata, ydata, color='lightyellow')
プログラムを強制的に終了する	sys.exit()
配列xdataとリストydataの折れ線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(xdata, ydata, color='darkmagenta')
折れ線グラフの色をスノーに設定する	plt.plot(xdata, ydata, color='snow')
データフレームdfをリストalistで指定されたカラムによって昇順に破壊的にソートする	df.sort_values(by=alist, ascending=True, inplace=True)
sの左端からs2を取り除く	s.removeprefix(s2)
リストxdataとリストydataについて破線グラフを描画して、その色を淡いピンク色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
パレットトルコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
dfのcol中に文字列valueと日付データvalue2が存在するか調べる	df[col].isin([value, value2])
リストxdataとイテラブルydataについて破線グラフを描画して、色をゴールドに指定する	plt.plot(xdata, ydata, linestyle='dash', color='gold')
ラベンダー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lavender')
リストxdataをベージュ色のヒストグラムで描画する	plt.hist(xdata, color='beige')
データフレームdfのcolの標本標準偏差	df[col].std()
リストxdataと配列ydataについて折れ線グラフを描画して色をダークサーモンに設定する	plt.plot(xdata, ydata, color='darksalmon')
フクシア色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
リストxdataをnからn2の範囲でヒストグラムにする	plt.hist(xdata, range=(n, n2))
リストxdataをダークレッド色のヒストグラムとして描画する	plt.hist(xdata, color='darkred')
sをシアンで表示する	print(f'\033[36m{s}\033[0m')
散布図にダークブルー色のマーカーを使う	plt.plot(xdata, ydata, c='darkblue')
データフレームdfの末尾n行を抽出する	df.tail(n)
整数nを符号付きでバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
リストxdataとデータ列ydataの折れ線を描画して、色をライトブルーに変更する	plt.plot(xdata, ydata, color='lightblue')
リストxdataをパレットトルコイズ色のヒストグラムで描画する	plt.hist(xdata, color='paleturquoise')
リストxdataとリストydataについて折れ線グラフを描画して、その色をミディアムブルーに設定する	plt.plot(xdata, ydata, color='mediumblue')
データフレームdfのリストalistで指定されたカラムを削除する	df.drop(alist, axis=1)
リストxdataと配列ydataの折れ線グラフに赤い星印を描画する	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
赤いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='r')
日付adateの月数	adate.month
配列xdataとデータ列ydataの散布図をフォレストグリーン色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
リストxdataとリストydataについて散布図を描画して、マーカーの色をダークスラテグレーに設定する	plt.plot(xdata, ydata, c='darkslategray')
リストxdataをレモンシフォン色のヒストグラムで描画する	plt.hist(xdata, color='lemonchiffon')
リストxdataをチョコレート色の度数分布図で描画する	plt.hist(xdata, color='chocolate')
ミスティローズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
スラグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='slategrey')
リストxdataとリストydataについての散布図をシルバー色で描画する	plt.plot(xdata, ydata, c='silver')
n進sをバイト列に変換する	int(s, n2).to_bytes(length=n2, byteorder='big')
シルバー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='silver')
折れ線グラフの色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgrey')
フローラルホワイト色でイテラブルxdataについての柱状図を描画する	plt.hist(xdata, color='floralwhite')
サーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='salmon')
ハニーデュー色の折れ線を描画する	plt.plot(xdata, ydata, color='honeydew')
xにおけるガンマ関数の値	math.gamma(x)
リストalistにリストalist2を追加する	alist.extend(alist2)
破線の色をゴーストホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
配列xdataとリストydataについての散布図をミディアムブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
トマト色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='tomato')
リストxdataとリストydataについて破線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
整数nのビット長を確認する	n.bit_length()
arrayを等量でn個にビン分割する	pd.qcut(array, n)
ティール色のマーカーを用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='teal', alpha=0.5)
リストxdataと配列ydataについてインディゴ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indigo')
整数nの二進表現	bin(n)
データフレームdfの列colの母標準偏差を求める	df[col].std(ddof=0)
辞書adictのエントリの一覧	adict.items()
リストxdataとリストydataについての散布図をコーンズシルク色で描画する	plt.plot(xdata, ydata, c='cornsilk')
リストxdataとリストydataの線幅nの一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
データフレームdfを1000の位で丸める	df.round(-3)
sを改行で区切る	s.splitlines()
データフレームdfのn行目を破壊的に削除する	df.drop(n, axis=0, inplace=True)
試しに何か動かす	print('Hello World')
破線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
ローングリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lawngreen')
リストxdataとリストydataについての散布図に黒い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
数列xdataとイテラブルydataについてライトグレー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
オブジェクトobjはタプル	isinstance(obj, tuple)
リストxdataとリストydataについての散布図をライトスレイグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
数式として、eの因数分解を行う	sympy.factor(e)
破線グラフの色をスノーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='snow')
タプルatupleの要素を昇順にソートする	sorted(atuple, reverse=True)
プロットに格子を描画する	plt.grid(True)
破線グラフの色をミスティローズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
リストxdataとリストydataの折れ線グラフに、線幅nの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
折れ線グラフの色をゴールドに設定する	plt.plot(xdata, ydata, color='gold')
n2行n列の２次元リストを作る	[[0] * n for _ in range(n2)]
リストxdataとリストydataについて折れ線グラフを描画して色をハリウッドにする	plt.plot(xdata, ydata, color='burlywood')
数列xdataとリストydataについて散布図を描画してマーカーの色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, c='mediumaquamarine')
リストxdataをダークマゼンタ色のヒストグラムで描画する	plt.hist(xdata, color='darkmagenta')
折れ線グラフの色をライトスカイブルーに設定する	plt.plot(xdata, ydata, color='lightskyblue')
データフレームdfが正規分布からどの程度、尖っているか見る	df.skew()
リストxdataとリストydataについての散布図をミディアムバイオレットレッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
リストxdataと配列ydataについてペルー色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='peru')
データフレームdfの最初n行	df.head(n)
折れ線グラフの色を白くする	plt.plot(xdata, ydata, color='w')
事前に複数行対応としてパターンpatternをコンパイルする	re.compile(pattern, flag=re.MULTILINE)
黄色い折れ線グラフを描く	plt.plot(xdata, ydata, color='y')
リストxdataとリストydataについてシーグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
ピーチパフ色としてリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='peachpuff')
データフレームを表示するとき、n行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
重なりを見やすく配列xdataとリストydataについての散布図をマゼンタ色で描画する	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
グリーンイエロー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
オプションで、読み込みモードに設定する	mode = 'r'
折れ線グラフの大バツマーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
sが全てか調べる	s.isupper()
青色の点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color='b')
xとx2の値をスワップする	x, x2 = x2, x
配列xdataとリストydataについて破線グラフを描画してその色をミディアムパープルにする	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
リストxdataとリストydataの折れ線グラフに、緑色のポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
全ての大文字	string.ascii_uppercase
リストxdataとイテラブルydataについて散布図を描画して色をティールにする	plt.plot(xdata, ydata, c='teal')
リストxdataを縦軸、リストydataを横軸として、大きさnの散布図を描画する	plt.scatter(xdata, ydata, s=n)
x、x2、x3の最小値	min(x, x2, x3)
散布図にダークシアグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='darkseagreen')
折れ線グラフのダイアモンドマーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='D', markersize=n)
折れ線グラフの印を菱形に設定する	plt.plot(xdata, ydata, marker='D')
空のチェーンマップを作成する	collections.ChainMap()
配列xdataと配列ydataの折れ線グラフに、大きさnのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markersize=n)
ファイルfilenameからストリームを読み込み、fileとする	file = open(filename)
データ列dsの曜日は何日目か見る	ds.dt.dayofweek
配列xdataをライム色のヒストグラムとして描画する	plt.hist(xdata, color='lime')
リストxdataとリストydataについて散布図を描画して、マーカーの色をロイヤルブルーに設定する	plt.plot(xdata, ydata, c='royalblue')
デピンク色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
ライトグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
散布図に左三角マーカーを使う	plt.plot(xdata, ydata, marker='<')
グラフを描画する	import matplotlib.pyplot as plt
データ列xdataとイテラブルydataについての散布図に上三角印を描画する	plt.plot(xdata, ydata, marker='^')
リストxdataとリストydataの折れ線グラフに、黒い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
グラフのカラーパレットをsで指定する	sns.set(pallete=s)
オレンジ色でリストxdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='orange')
散布図に三角マーカーを使う	plt.plot(xdata, ydata, marker='^')
オプションで、出力先を標準出力に設定する	file = sys.stdout
オリベドラブ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
リストxdataとリストydataについての散布図をライトコーラル色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
s内の複数行対応のパターンよって置き換える	re.sub(pattern, repl, s, flags=re.MULTILINE)
リストxdataとイテラブルydataの破線グラフを描画して、色をダークオレンジにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
リストalistを表示する	print(alist)
折れ線のマーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
コーンフラワーブルー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='cornflowerblue')
リストxdataとリストydataについて散布図を描画して、マーカーの色をローングリーンに設定する	plt.plot(xdata, ydata, c='lawngreen')
折れ線グラフを一点鎖線にセットする	plt.plot(xdata, ydata, linestyle='dashbot')
リストxdataとリストydataについての散布図をミントクリーム色で描画する	plt.plot(xdata, ydata, c='mintcream')
リストxdataをミディアムスレートブルー色のヒストグラムで描画する	plt.hist(xdata, color='mediumslateblue')
リストxdataとリストydataについての散布図をスチールブルー色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
nがn2より大きいか調べる	n > n2
リストxdataをブルーバイオレット色のヒストグラムで描画する	plt.hist(xdata, color='blueviolet')
リストxdataとリストydataについての散布図をビスク色で描画する	plt.plot(xdata, ydata, c='bisque')
データ列dsの曜日数	ds.dt.dayofweek
リストalistのn番目の要素を削除する	del alist[n]
リストxdataとデータ列ydataについて青色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='blue')
データフレームdfのカラムcolとdf2のcol2カラムをキーにして内部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='inner')
パールバイオレットレッド色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='palevioletred')
objは辞書クラスか調べる	isinstance(obj, dict)
折れ線グラフの色をフォレストグリーンに設定する	plt.plot(xdata, ydata, color='forestgreen')
リストxdataとリストydataの折れ線グラフに、黄色い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
データ列dsの時	ds.dt.hour
リストxdataとリストydataについての散布図をグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='green', alpha=0.5)
数列xdataとリストydataについて散布図を描画して色をタンにセットする	plt.plot(xdata, ydata, c='tan')
リストxdataとデータ列ydataについて散布図を描画して、色をダークシアグリーンに設定する	plt.plot(xdata, ydata, c='darkseagreen')
黄色色を使ってヒストグラムを描画する	plt.hist(xdata, color='yellow')
dfのNaNを中央値に減らす	df.fillna(df.median())
貝殻色として散布図を描く	plt.plot(xdata, ydata, c='seashell')
イテラブルxdataとリストydataの折れ線を描画して、色を耐火レンガに指定する	plt.plot(xdata, ydata, color='firebrick')
日時dtの月数	dt.month
アンティークホワイト色としてヒストグラムを描画する	plt.hist(xdata, color='antiquewhite')
nのn2乗	n ** n2
リストxdataとデータ列ydataの折れ線グラフを描画して、その色をフクシアにセットする	plt.plot(xdata, ydata, color='fuchsia')
xが正の数か調べる	x > 0
リストxdataとリストydataについての散布図をフクシア色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
リストxdataとリストydataについてパールゴールデンロッド色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
データフレームdfとデータフレームdf2をカラムcolをキーにして結合する	pd.merge(df, df2, on=col)
リストxdataとデータ列ydataの折れ線を描画して、その色をゴールデンロッドにする	plt.plot(xdata, ydata, color='goldenrod')
破線グラフの色をタンにする	plt.plot(xdata, ydata, linestyle='dash', color='tan')
ダークカーキ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkkhaki')
四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s')
青い折れ線をプロットする	plt.plot(xdata, ydata, color='b')
赤色の実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='r')
ミディアムターコイズ色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
データ列xdataをブランチドアーモンド色のヒストグラムで描画する	plt.hist(xdata, color='blanchedalmond')
全ての小文字	string.ascii_lowercase
折れ線グラフの色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgray')
リストxdataとリストydataについて折れ線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategrey')
データフレームdfをカラムcol毎にグループ化して、カラムcol2の平均値を求める	df.groupby(col)[col2].mean()
データ列xdataとリストydataについて折れ線グラフを描画して、その色をスプリンググリーンに設定する	plt.plot(xdata, ydata, color='springgreen')
日時dtををn分後に進める	dt + datetime.timedelta(minutes=n)
データフレームdfの列の名前を付け直す	df.rename(columns={col: s})
リストxdataをプラム色のヒストグラムで描画する	plt.hist(xdata, color='plum')
データフレームdfのカラムcolの欠損値を中央値で埋める	df[col].fillna(df[col].median())
タプルiterableから双方向キューを上限をnに制限して用意して、Xに代入する	X = collections.deque(iterable, maxlen=n)
nまでの偶整数列	list(range(2, n, 2))
リストxdataとデータ列ydataの破線を描画して、その色をライトブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
s名を持ち、リストalist3のプロパティを持った名前付きタプルを定義する	collections.namedtuple(s, names)
データ列dsの欠損値を最大値に変更する	ds.fillna(ds.max())
赤い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='r')
adateにn時間を加算する	adate + datetime.timedelta(hours=n)
データ列dsの月	ds.dt.month
紺碧色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='azure')
コーラル色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='coral')
オブジェクトelement∈aset	element in aset
破線の色をフォレストグリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
散布図にブルーバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='blueviolet')
デックdeq内にelementは含まれてるか調べる	element in deq
リストxdataとリストydataについての散布図をシエナ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
リストxdataとリストydataについて破線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
配列xdataとリストydataについての散布図にカラーコードrgbの星マーカーを描く	plt.plot(xdata, ydata, marker='*', c=rgb)
リストxdataをカデットブルー色のヒストグラムで描画する	plt.hist(xdata, color='cadetblue')
タプルiterableをダミー変数に変換する	pd.get_dummies(iterable)
タブ文字を見る	'\t'
リストxdataとデータ列ydataについての散布図を重なりを見やすくトマト色でプロットする	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
データフレームdfのリストalistカラムの値を正規表現patternでまとめてsに置き換える	df[alist].replace(pattern, s, regex=True)
データ列xdataとイテラブルydataについて散布図を描画してマーカーの色をビスクにする	plt.plot(xdata, ydata, c='bisque')
arrayをリストalistを境界値としてビン分割する	pd.cut(array, alist)
ファイルfilenameをバイナリモードでオープンして]、fとする	f = open(filename, mode='rb')
サンディーブラウン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='sandybrown')
散布図をイエローグリーン色で重なりを見やすく描く	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
リストxdataとリストydataの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
マゼンタ色としてリストxdataについての柱状図を描画する	plt.hist(xdata, color='magenta')
リストiterableから重複を取り除く	set(iterable)
折れ線グラフの色をホットピンクに設定する	plt.plot(xdata, ydata, color='hotpink')
散布図にダークゴールデンロッド色のマーカーを使う	plt.plot(xdata, ydata, c='darkgoldenrod')
データ列xdataとリストydataについての散布図をアイボリー色として描画する	plt.plot(xdata, ydata, c='ivory')
データ列xdataとリストydataの折れ線に青い四角印をプロットする	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
破線グラフの色をオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
散布図にミスティローズ色のマーカーを使う	plt.plot(xdata, ydata, c='mistyrose')
ダークゴールデンロッド色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
日付adateををn月後に進める	adate + datetime.timedelta(months=n)
グラフを見やすくする	import seaborn as sns
リストxdataとリストydataについての散布図をアリスブルー色で描画する	plt.plot(xdata, ydata, c='aliceblue')
リストxdataとリストydataについての散布図をオーキッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
アザミ色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='thistle')
x以下の最大の整数	math.floor(x)
リストxdataとリストydataについてダークシアグリーン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
リストxdataとリストydataの折れ線グラフに、大きさnの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markersize=n)
リストiterableと列iterable2をペアのリストにする	itertools.zip_longest(iterable, iterable2)
データフレームdfのn行以降を抽出する	df[n:]
点線の折れ線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dotted')
ライトスカイブルー色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
グラフ中に凡例を入れる	plt.legend()
リストxdataとリストydataの折れ線グラフに、黄色いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
折れ線グラフの色をダークスラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategray')
ローングリーン色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lawngreen')
黄色色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='yellow')
リストiterableからカウンタを新規に作る	collections.Counter(iterable)
破線グラフの色をディープスカイブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
リストxdataとイテラブルydataについて折れ線を描画して、色をサーモンにセットする	plt.plot(xdata, ydata, color='salmon')
nにn2をかける	n * n2
イテラブルxdataをナバホホワイト色の柱状図として描画する	plt.hist(xdata, color='navajowhite')
データフレームdfのカラムcolとカラムcol2の相関行列	df[[col, col2]].corr()
データフレームdfをカラムcolによって降順にソートする	df.sort_values(by=col, ascending=False)
シアン色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
リストxdataをオレンジ色のヒストグラムで描画する	plt.hist(xdata, color='orange')
フォレストグリーン色として重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
ハニーデュー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='honeydew')
配列xdataとリストydataについての散布図をオールドレース色としてプロットする	plt.plot(xdata, ydata, c='oldlace')
リストxdataをライトグリーン色の柱状図で描く	plt.hist(xdata, color='lightgreen')
ピンク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pink')
リストxdataとリストydataについての散布図をフローラルホワイト色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
リストxdataとリストydataについての散布図をスレートブルー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
破線グラフの色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
数列xdataをフォレストグリーン色のヒストグラムで描画する	plt.hist(xdata, color='forestgreen')
配列xdataとリストydataの折れ線を描画してマーカーを菱形にする	plt.plot(xdata, ydata, marker='D')
ミディアムバイオレットレッド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumvioletred')
データ列dsをカテゴリデータに変換する	ds.astype(object)
サドルブラウン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
折れ線グラフのバツマーカーを赤くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
ヒストグラムの透明度をxに設定する	plt.hist(xdata, alpha=x)
散布図にロイヤルブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='royalblue')
リストxdataと数列ydataの散布図にカラーコードrgbのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
sが全て空白文字からなるか調べる	s.isspace()
シルバー色のマーカーを用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='silver', alpha=0.5)
リストxdataとリストydataについての散布図に赤いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
透明度xでデータ列xdataとデータ列ydataの折れ線を描画する	plt.plot(xdata, ydata, alpha=x)
リストxdataと配列ydataの散布図に黒い三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^', c='k')
リストxdataとリストydataについての散布図に赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='r')
日付adateの日数	adate.day
データフレームdf中にある文字列valueと文字列value2の合計を数える	df.isin([value, value2]).sum()
配列xdataをダークグレー色のヒストグラムで描画する	plt.hist(xdata, color='darkgrey')
アンティークホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
sの文字リスト	list(s)
レモンシフォン色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
折れ線の色をホットピンクに設定する	plt.plot(xdata, ydata, color='hotpink')
リストxdataとリストydataの折れ線グラフに、大きさnの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markersize=n)
データフレームdfをカラムcolとカラムcol2の組み合わせ毎にグループ化して、列挙する	[(name, group) for name, group in df.groupby([col, col2])]
リストxdataとリストydataの折れ線に、線幅nの丸マーカーをプロットする	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
作業ディレクトリ	os.getcwd()
リストxdataとイテラブルydataについて折れ線グラフを描画して、色をハニーデューに変更する	plt.plot(xdata, ydata, color='honeydew')
s内にひとつでも英小文字が含まれるか調べる	any(c.islower() for c in s)
リストxdataとリストydataについてバイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='violet')
オプションで、先頭の行をヘッダに設定する	header = 0
ロージーブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='rosybrown')
リストxdataとリストydataについて破線グラフを描画して、その色をダークカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
チョコレート色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='chocolate')
ダークスラテグレー色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='darkslategray')
ラベンダーブラッシュ色でリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='lavenderblush')
リストxdataをダークカーキ色の度数分布図でプロットする	plt.hist(xdata, color='darkkhaki')
データフレームdf中のカラムcolとカラムcol2に重複があれば、削除する	df.drop_duplicates(subset=[col, col2])
配列xdataとリストydataについて散布図を描画して色をゲインズボロとする	plt.plot(xdata, ydata, c='gainsboro')
破線グラフの色をピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pink')
リストxdataをアザミ色のヒストグラムで描画する	plt.hist(xdata, color='thistle')
ドジャーブルー色として配列xdataとリストydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
リストxdataとリストydataについての散布図をライトイエロー色で描画する	plt.plot(xdata, ydata, c='lightyellow')
日時dtをn分前に戻す	dt - datetime.timedelta(minutes=n)
デックdeqの末尾にリストiterableの各要素を追加する	deq.extend(iterable)
サーモン色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='salmon')
リストxdataとリストydataの折れ線グラフに、黄色い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
イテラブルxdataとリストydataについてラベンダーブラッシュ色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
データフレームdfのカラムcol毎の分散	df.groupby(col).var()
リストxdataとリストydataについて破線グラフを描画して、その色をダークグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
データ列dsのユニークな値	ds.unique()
折れ線グラフに大バツマーカーを使う	plt.plot(xdata, ydata, marker='X')
